{"version":3,"file":"index.js","sources":["../src/comparators.tsx","../src/loggerSystem.ts","../src/domIOSystem.ts","../src/propsReadySystem.ts","../src/stateFlagsSystem.ts","../src/scrollSeekSystem.ts","../src/AATree.ts","../src/utils/binaryArraySearch.ts","../src/utils/correctItemSize.ts","../src/sizeSystem.ts","../src/scrollToIndexSystem.ts","../src/sizeRangeSystem.ts","../src/windowScrollerSystem.ts","../src/gridSystem.ts","../src/hooks/useSize.ts","../src/hooks/useWindowViewportRect.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/hooks/useScrollTop.ts","../src/initialTopMostItemIndexSystem.ts","../src/followOutputSystem.ts","../src/groupedListSystem.ts","../src/listStateSystem.ts","../src/utils/simpleMemoize.ts","../src/initialItemCountSystem.ts","../src/topItemCountSystem.ts","../src/totalListHeightSystem.ts","../src/upwardScrollFixSystem.ts","../src/initialScrollTopSystem.ts","../src/alignToBottomSystem.ts","../src/scrollIntoViewSystem.ts","../src/listSystem.ts","../src/utils/positionStickyCssValue.ts","../src/List.tsx","../src/hooks/useChangedChildSizes.ts","../src/Grid.tsx","../src/components.tsx"],"sourcesContent":["import { ListRange } from './interfaces'\n\nexport function tupleComparator(prev: [any, any] | undefined, current: [any, any]) {\n  return !!(prev && prev[0] === current[0] && prev[1] === current[1])\n}\n\nexport function rangeComparator(prev: ListRange | undefined, next: ListRange) {\n  return !!(prev && prev.startIndex === next.startIndex && prev.endIndex === next.endIndex)\n}\n","import * as u from '@virtuoso.dev/urx'\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace globalThis {\n  let VIRTUOSO_LOG_LEVEL: LogLevel | undefined\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace window {\n  let VIRTUOSO_LOG_LEVEL: LogLevel | undefined\n}\n\nexport enum LogLevel {\n  DEBUG,\n  INFO,\n  WARN,\n  ERROR,\n}\nexport interface LogMessage {\n  level: LogLevel\n  message: any\n  label: string\n}\n\nexport type Log = (label: string, message: any, level?: LogLevel) => void\n\nconst CONSOLE_METHOD_MAP = {\n  [LogLevel.DEBUG]: 'debug',\n  [LogLevel.INFO]: 'log',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error',\n} as const\n\nconst getGlobalThis = () => (typeof globalThis === 'undefined' ? window : globalThis)\n\nexport const loggerSystem = u.system(\n  () => {\n    const logLevel = u.statefulStream<LogLevel>(LogLevel.ERROR)\n    const log = u.statefulStream<Log>((label: string, message: any, level: LogLevel = LogLevel.INFO) => {\n      const currentLevel = getGlobalThis()['VIRTUOSO_LOG_LEVEL'] ?? u.getValue(logLevel)\n      if (level >= currentLevel) {\n        console[CONSOLE_METHOD_MAP[level]]('%creact-virtuoso: %c%s %o', 'color: #0253b3; font-weight: bold', 'color: black', label, message)\n      }\n    })\n\n    return {\n      log,\n      logLevel,\n    }\n  },\n  [],\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\n\nexport const domIOSystem = u.system(\n  () => {\n    const scrollTop = u.stream<number>()\n    const deviation = u.statefulStream(0)\n    const smoothScrollTargetReached = u.stream<true>()\n    const statefulScrollTop = u.statefulStream(0)\n    const viewportHeight = u.stream<number>()\n    const scrollHeight = u.stream<number>()\n    const headerHeight = u.statefulStream(0)\n    const footerHeight = u.statefulStream(0)\n    const scrollTo = u.stream<ScrollToOptions>()\n    const scrollBy = u.stream<ScrollToOptions>()\n    const scrollingInProgress = u.statefulStream(false)\n\n    u.connect(scrollTop, statefulScrollTop)\n\n    return {\n      // input\n      scrollTop,\n      viewportHeight,\n      headerHeight,\n      footerHeight,\n      scrollHeight,\n      smoothScrollTargetReached,\n\n      // signals\n      scrollTo,\n      scrollBy,\n\n      // state\n      statefulScrollTop,\n      deviation,\n      scrollingInProgress,\n    }\n  },\n  [],\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { getValue, tup } from '@virtuoso.dev/urx'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\nexport const propsReadySystem = u.system(\n  ([{ log }]) => {\n    const propsReady = u.statefulStream(false)\n\n    const didMount = u.streamFromEmitter(\n      u.pipe(\n        propsReady,\n        u.filter((ready) => ready),\n        u.distinctUntilChanged()\n      )\n    )\n    u.subscribe(propsReady, (value) => {\n      value && getValue(log)('props updated', {}, LogLevel.DEBUG)\n    })\n\n    return { propsReady, didMount }\n  },\n  tup(loggerSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\n\nexport const UP = 'up' as const\nexport const DOWN = 'down' as const\nexport type ScrollDirection = typeof UP | typeof DOWN\n\nexport interface ListBottomInfo {\n  bottom: number\n  offsetBottom: number\n}\n\nexport interface AtBottomParams {\n  offsetBottom: number\n  scrollTop: number\n  viewportHeight: number\n  scrollHeight: number\n}\n\nexport type NotAtBottomReason =\n  | 'SIZE_INCREASED'\n  | 'NOT_SHOWING_LAST_ITEM'\n  | 'VIEWPORT_HEIGHT_DECREASING'\n  | 'SCROLLING_UPWARDS'\n  | 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n\nexport type AtBottomState =\n  | {\n      atBottom: false\n      notAtBottomBecause: NotAtBottomReason\n      state: AtBottomParams\n    }\n  | {\n      atBottom: true\n      state: AtBottomParams\n    }\n\nconst INITIAL_BOTTOM_STATE = {\n  atBottom: false,\n  notAtBottomBecause: 'NOT_SHOWING_LAST_ITEM',\n  state: {\n    offsetBottom: 0,\n    scrollTop: 0,\n    viewportHeight: 0,\n    scrollHeight: 0,\n  },\n} as AtBottomState\n\nexport const stateFlagsSystem = u.system(([{ scrollTop, viewportHeight, headerHeight, footerHeight, scrollHeight }]) => {\n  const isAtBottom = u.statefulStream(false)\n  const isAtTop = u.statefulStream(true)\n  const atBottomStateChange = u.stream<boolean>()\n  const atTopStateChange = u.stream<boolean>()\n  const atBottomThreshold = u.statefulStream(4)\n\n  // skip 1 to avoid an initial on/off flick\n  const isScrolling = u.streamFromEmitter(\n    u.pipe(\n      u.merge(u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(true)), u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(false), u.debounceTime(100))),\n      u.distinctUntilChanged()\n    )\n  )\n\n  u.connect(\n    u.pipe(\n      u.duc(scrollTop),\n      u.map((top) => top === 0),\n      u.distinctUntilChanged()\n    ),\n    isAtTop\n  )\n\n  u.connect(isAtTop, atTopStateChange)\n\n  const atBottomState = u.streamFromEmitter(\n    u.pipe(\n      u.combineLatest(\n        scrollHeight,\n        u.duc(scrollTop),\n        u.duc(viewportHeight),\n        u.duc(headerHeight),\n        u.duc(footerHeight),\n        u.duc(atBottomThreshold)\n      ),\n      u.scan((current, [scrollHeight, scrollTop, viewportHeight, _headerHeight, _footerHeight, atBottomThreshold]) => {\n        const isAtBottom = scrollTop + viewportHeight - scrollHeight > -atBottomThreshold\n        const state = {\n          viewportHeight,\n          scrollTop,\n          scrollHeight,\n        }\n\n        if (isAtBottom) {\n          return {\n            atBottom: true,\n            state,\n          } as AtBottomState\n        }\n\n        let notAtBottomBecause: NotAtBottomReason\n\n        if (state.scrollHeight > current.state.scrollHeight) {\n          notAtBottomBecause = 'SIZE_INCREASED'\n        } else if (viewportHeight < current.state.viewportHeight) {\n          notAtBottomBecause = 'VIEWPORT_HEIGHT_DECREASING'\n        } else if (scrollTop < current.state.scrollTop) {\n          notAtBottomBecause = 'SCROLLING_UPWARDS'\n        } else {\n          notAtBottomBecause = 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n        }\n\n        return {\n          atBottom: false,\n          notAtBottomBecause,\n          state,\n        } as AtBottomState\n      }, INITIAL_BOTTOM_STATE),\n      u.distinctUntilChanged((prev, next) => {\n        return prev && prev.atBottom === next.atBottom\n      })\n    )\n  )\n\n  u.connect(\n    u.pipe(\n      atBottomState,\n      u.map((state) => state.atBottom)\n    ),\n    isAtBottom\n  )\n\n  u.subscribe(isAtBottom, (value) => {\n    setTimeout(() => u.publish(atBottomStateChange, value))\n  })\n\n  const scrollDirection = u.statefulStream<ScrollDirection>(DOWN)\n\n  u.connect(\n    u.pipe(\n      scrollTop,\n      u.scan(\n        (acc, scrollTop) => {\n          return { direction: scrollTop < acc.prevScrollTop && !u.getValue(isAtBottom) ? UP : DOWN, prevScrollTop: scrollTop }\n        },\n        { direction: DOWN, prevScrollTop: 0 } as { direction: ScrollDirection; prevScrollTop: number }\n      ),\n      u.map((value) => value.direction)\n    ),\n    scrollDirection\n  )\n\n  // connect(isAtBottom, atBottomStateChange)\n\n  return { isScrolling, isAtTop, isAtBottom, atBottomState, atTopStateChange, atBottomStateChange, scrollDirection, atBottomThreshold }\n}, u.tup(domIOSystem))\n","import {\n  combineLatest,\n  connect,\n  distinctUntilChanged,\n  filter,\n  map,\n  mapTo,\n  pipe,\n  scan,\n  statefulStream,\n  stream,\n  subscribe,\n  system,\n  throttleTime,\n  tup,\n  withLatestFrom,\n} from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { ListRange } from './interfaces'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { ScrollSeekConfiguration } from './interfaces'\n\nexport const scrollSeekSystem = system(\n  ([{ scrollTop }, { isScrolling }]) => {\n    const scrollVelocity = statefulStream(0)\n    const isSeeking = statefulStream(false)\n    const rangeChanged = stream<ListRange>()\n    const scrollSeekConfiguration = statefulStream<ScrollSeekConfiguration | undefined | false>(false)\n\n    connect(\n      pipe(\n        isScrolling,\n        filter((value) => !value),\n        mapTo(0)\n      ),\n      scrollVelocity\n    )\n\n    connect(\n      pipe(\n        scrollTop,\n        throttleTime(100),\n        withLatestFrom(isScrolling),\n        filter(([_, isScrolling]) => !!isScrolling),\n        scan(([_, prev], [next]) => [prev, next], [0, 0]),\n        map(([prev, next]) => next - prev)\n      ),\n      scrollVelocity\n    )\n\n    connect(\n      pipe(\n        scrollVelocity,\n        withLatestFrom(scrollSeekConfiguration, isSeeking, rangeChanged),\n        filter(([_, config]) => !!config),\n        map(([speed, config, isSeeking, range]) => {\n          const { exit, enter } = config as ScrollSeekConfiguration\n          if (isSeeking) {\n            if (exit(speed, range)) {\n              return false\n            }\n          } else {\n            if (enter(speed, range)) {\n              return true\n            }\n          }\n          return isSeeking\n        }),\n        distinctUntilChanged()\n      ),\n      isSeeking\n    )\n\n    subscribe(\n      pipe(combineLatest(isSeeking, scrollVelocity, rangeChanged), withLatestFrom(scrollSeekConfiguration)),\n      ([[isSeeking, velocity, range], config]) => isSeeking && config && config.change && config.change(velocity, range)\n    )\n\n    return { isSeeking, scrollSeekConfiguration, scrollVelocity, scrollSeekRangeChanged: rangeChanged }\n  },\n  tup(domIOSystem, stateFlagsSystem),\n  { singleton: true }\n)\n","interface NilNode {\n  lvl: 0\n}\n\nconst NIL_NODE: NilNode = { lvl: 0 }\n\ninterface NodeData<T> {\n  k: number\n  v: T\n}\n\ninterface NonNilAANode<T> {\n  k: number\n  v: T\n  lvl: number\n  l: NonNilAANode<T> | NilNode\n  r: NonNilAANode<T> | NilNode\n}\n\nexport interface Range<T> {\n  start: number\n  end: number\n  value: T\n}\n\nexport type AANode<T> = NilNode | NonNilAANode<T>\n\nfunction newAANode<T>(k: number, v: T, lvl: number, l: AANode<T> = NIL_NODE, r: AANode<T> = NIL_NODE): NonNilAANode<T> {\n  return { k, v, lvl, l, r }\n}\n\nexport function empty(node: AANode<any>): node is NilNode {\n  return node === NIL_NODE\n}\n\nexport function newTree<T>(): AANode<T> {\n  return NIL_NODE\n}\n\nexport function remove<T>(node: AANode<T>, key: number): AANode<T> {\n  if (empty(node)) return NIL_NODE\n\n  const { k, l, r } = node\n\n  if (key === k) {\n    if (empty(l)) {\n      return r\n    } else if (empty(r)) {\n      return l\n    } else {\n      const [lastKey, lastValue] = last(l)\n      return adjust(clone(node, { k: lastKey, v: lastValue, l: deleteLast(l) }))\n    }\n  } else if (key < k) {\n    return adjust(clone(node, { l: remove(l, key) }))\n  } else {\n    return adjust(clone(node, { r: remove(r, key) }))\n  }\n}\n\nexport function find<T>(node: AANode<T>, key: number): T | undefined {\n  if (empty(node)) {\n    return\n  }\n\n  if (key === node.k) {\n    return node.v\n  } else if (key < node.k) {\n    return find(node.l, key)\n  } else {\n    return find(node.r, key)\n  }\n}\n\nexport function findMaxKeyValue<T>(node: AANode<T>, value: number, field: 'k' | 'v' = 'k'): [number, T | undefined] {\n  if (empty(node)) {\n    return [-Infinity, undefined]\n  }\n\n  if (node[field] === value) {\n    return [node.k, node.v]\n  }\n\n  if (node[field] < value) {\n    const r = findMaxKeyValue(node.r, value, field)\n    if (r[0] === -Infinity) {\n      return [node.k, node.v]\n    } else {\n      return r\n    }\n  }\n\n  return findMaxKeyValue(node.l, value, field)\n}\n\nexport function insert<T>(node: AANode<T>, k: number, v: T): NonNilAANode<T> {\n  if (empty(node)) {\n    return newAANode(k, v, 1)\n  }\n  if (k === node.k) {\n    return clone(node, { k, v })\n  } else if (k < node.k) {\n    return rebalance(clone(node, { l: insert(node.l, k, v) }))\n  } else {\n    return rebalance(clone(node, { r: insert(node.r, k, v) }))\n  }\n}\n\nexport function walkWithin<T>(node: AANode<T>, start: number, end: number): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  const { k, v, l, r } = node\n  let result: NodeData<T>[] = []\n  if (k > start) {\n    result = result.concat(walkWithin(l, start, end))\n  }\n\n  if (k >= start && k <= end) {\n    result.push({ k, v })\n  }\n\n  if (k <= end) {\n    result = result.concat(walkWithin(r, start, end))\n  }\n\n  return result\n}\n\nexport function walk<T>(node: AANode<T>): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  return [...walk(node.l), { k: node.k, v: node.v }, ...walk(node.r)]\n}\n\nfunction last<T>(node: NonNilAANode<T>): [number, T] {\n  return empty(node.r) ? [node.k, node.v] : last(node.r)\n}\n\nfunction deleteLast<T>(node: NonNilAANode<T>): AANode<T> {\n  return empty(node.r) ? node.l : adjust(clone(node, { r: deleteLast(node.r) }))\n}\n\nfunction clone<T>(node: NonNilAANode<T>, args: Partial<NonNilAANode<T>>): NonNilAANode<T> {\n  return newAANode(\n    args.k !== undefined ? args.k : node.k,\n    args.v !== undefined ? args.v : node.v,\n    args.lvl !== undefined ? args.lvl : node.lvl,\n    args.l !== undefined ? args.l : node.l,\n    args.r !== undefined ? args.r : node.r\n  )\n}\n\nfunction isSingle(node: AANode<any>) {\n  return empty(node) || node.lvl > node.r.lvl\n}\n\nfunction rebalance<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  return split(skew(node))\n}\n\nfunction adjust<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l, r, lvl } = node\n  if (r.lvl >= lvl - 1 && l.lvl >= lvl - 1) {\n    return node\n  } else if (lvl > r.lvl + 1) {\n    if (isSingle(l)) {\n      return skew(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(l) && !empty(l.r)) {\n        return clone(l.r, {\n          l: clone(l, { r: l.r.l }),\n          r: clone(node, {\n            l: l.r.r,\n            lvl: lvl - 1,\n          }),\n          lvl: lvl,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  } else {\n    if (isSingle(node)) {\n      return split(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(r) && !empty(r.l)) {\n        const rl = r.l\n        const rlvl = isSingle(rl) ? r.lvl - 1 : r.lvl\n\n        return clone(rl, {\n          l: clone(node, {\n            r: rl.l,\n            lvl: lvl - 1,\n          }),\n          r: split(clone(r, { l: rl.r, lvl: rlvl })),\n          lvl: rl.lvl + 1,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  }\n}\n\nexport function keys(node: AANode<any>): number[] {\n  if (empty(node)) {\n    return []\n  }\n  return [...keys(node.l), node.k, ...keys(node.r)]\n}\n\nexport function ranges<T>(node: AANode<T>): Range<T>[] {\n  return toRanges(walk(node))\n}\n\nexport function rangesWithin<T>(node: AANode<T>, startIndex: number, endIndex: number): Range<T>[] {\n  if (empty(node)) {\n    return []\n  }\n  const adjustedStart = findMaxKeyValue(node, startIndex)[0]\n  return toRanges(walkWithin(node, adjustedStart, endIndex))\n}\n\nexport function arrayToRanges<T, V>(\n  items: T[],\n  parser: (item: T) => { index: number; value: V }\n): Array<{ start: number; end: number; value: V }> {\n  const length = items.length\n  if (length === 0) {\n    return []\n  }\n\n  let { index: start, value } = parser(items[0])\n\n  const result = []\n\n  for (let i = 1; i < length; i++) {\n    const { index: nextIndex, value: nextValue } = parser(items[i])\n    result.push({ start, end: nextIndex - 1, value })\n\n    start = nextIndex\n    value = nextValue\n  }\n\n  result.push({ start, end: Infinity, value })\n  return result\n}\n\nfunction toRanges<T>(nodes: NodeData<T>[]): Range<T>[] {\n  return arrayToRanges(nodes, ({ k: index, v: value }) => ({ index, value }))\n}\n\nfunction split<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { r, lvl } = node\n\n  return !empty(r) && !empty(r.r) && r.lvl === lvl && r.r.lvl === lvl ? clone(r, { l: clone(node, { r: r.l }), lvl: lvl + 1 }) : node\n}\n\nfunction skew<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l } = node\n\n  return !empty(l) && l.lvl === node.lvl ? clone(l, { r: clone(node, { l: l.r }) }) : node\n}\n","export type Comparator<T> = {\n  (item: T, value: number): -1 | 0 | 1\n}\n\nexport function findIndexOfClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>, start = 0): number {\n  let end = items.length - 1\n\n  while (start <= end) {\n    const index = Math.floor((start + end) / 2)\n    const item = items[index]\n    const match = comparator(item, value)\n    if (match === 0) {\n      return index\n    }\n\n    if (match === -1) {\n      if (end - start < 2) {\n        return index - 1\n      }\n      end = index - 1\n    } else {\n      if (end === start) {\n        return index\n      }\n      start = index + 1\n    }\n  }\n\n  throw new Error(`Failed binary finding record in array - ${items.join(',')}, searched for ${value}`)\n}\n\nexport function findClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>): T {\n  return items[findIndexOfClosestSmallerOrEqual(items, value, comparator)]\n}\n\nexport function findRange<T>(items: T[], startValue: number, endValue: number, comparator: Comparator<T>): T[] {\n  const startIndex = findIndexOfClosestSmallerOrEqual(items, startValue, comparator)\n  const endIndex = findIndexOfClosestSmallerOrEqual(items, endValue, comparator, startIndex)\n  return items.slice(startIndex, endIndex + 1)\n}\n","export function correctItemSize(el: HTMLElement, dimension: 'height' | 'width') {\n  return Math.round(el.getBoundingClientRect()[dimension])\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { arrayToRanges, AANode, empty, findMaxKeyValue, insert, newTree, Range, rangesWithin, remove, walk } from './AATree'\nimport * as arrayBinarySearch from './utils/binaryArraySearch'\nimport { correctItemSize } from './utils/correctItemSize'\nimport { loggerSystem, Log, LogLevel } from './loggerSystem'\n\nexport interface SizeRange {\n  startIndex: number\n  endIndex: number\n  size: number\n}\n\nexport type Data = readonly unknown[] | undefined\n\nfunction rangeIncludes(refRange: SizeRange) {\n  const { size, startIndex, endIndex } = refRange\n  return (range: Range<number>) => {\n    return range.start === startIndex && (range.end === endIndex || range.end === Infinity) && range.value === size\n  }\n}\n\nexport function insertRanges(sizeTree: AANode<number>, ranges: SizeRange[]) {\n  let syncStart = empty(sizeTree) ? 0 : Infinity\n\n  for (const range of ranges) {\n    const { size, startIndex, endIndex } = range\n    syncStart = Math.min(syncStart, startIndex)\n\n    if (empty(sizeTree)) {\n      sizeTree = insert(sizeTree, 0, size)\n      continue\n    }\n\n    // extend the range in both directions, so that we can get adjacent neighbours.\n    // if the previous / next ones have the same value as the one we are about to insert,\n    // we 'merge' them.\n    const overlappingRanges = rangesWithin(sizeTree, startIndex - 1, endIndex + 1)\n\n    if (overlappingRanges.some(rangeIncludes(range))) {\n      continue\n    }\n\n    let firstPassDone = false\n    let shouldInsert = false\n    for (const { start: rangeStart, end: rangeEnd, value: rangeValue } of overlappingRanges) {\n      // previous range\n      if (!firstPassDone) {\n        shouldInsert = rangeValue !== size\n        firstPassDone = true\n      } else {\n        // remove the range if it starts within the new range OR if\n        // it has the same value as it, in order to perform a merge\n        if (endIndex >= rangeStart || size === rangeValue) {\n          sizeTree = remove(sizeTree, rangeStart)\n        }\n      }\n\n      // next range\n      if (rangeEnd > endIndex && endIndex >= rangeStart) {\n        if (rangeValue !== size) {\n          sizeTree = insert(sizeTree, endIndex + 1, rangeValue)\n        }\n      }\n    }\n\n    if (shouldInsert) {\n      sizeTree = insert(sizeTree, startIndex, size)\n    }\n  }\n  return [sizeTree, syncStart] as const\n}\n\nexport interface OffsetPoint {\n  offset: number\n  size: number\n  index: number\n}\n\nexport interface SizeState {\n  sizeTree: AANode<number>\n  offsetTree: Array<OffsetPoint>\n  groupOffsetTree: AANode<number>\n  lastIndex: number\n  lastOffset: number\n  lastSize: number\n  groupIndices: number[]\n}\n\nexport function initialSizeState(): SizeState {\n  return {\n    offsetTree: [],\n    sizeTree: newTree<number>(),\n    groupOffsetTree: newTree<number>(),\n    lastIndex: 0,\n    lastOffset: 0,\n    lastSize: 0,\n    groupIndices: [],\n  }\n}\n\nexport function indexComparator({ index: itemIndex }: OffsetPoint, index: number) {\n  return index === itemIndex ? 0 : index < itemIndex ? -1 : 1\n}\n\nexport function offsetComparator({ offset: itemOffset }: OffsetPoint, offset: number) {\n  return offset === itemOffset ? 0 : offset < itemOffset ? -1 : 1\n}\n\nfunction offsetPointParser(point: OffsetPoint) {\n  return { index: point.index, value: point }\n}\n\nexport function rangesWithinOffsets(\n  tree: Array<OffsetPoint>,\n  startOffset: number,\n  endOffset: number,\n  minStartIndex = 0\n): Array<{\n  start: number\n  end: number\n  value: {\n    size: number\n    offset: number\n    index: number\n  }\n}> {\n  if (minStartIndex > 0) {\n    startOffset = Math.max(startOffset, arrayBinarySearch.findClosestSmallerOrEqual(tree, minStartIndex, indexComparator).offset)\n  }\n\n  return arrayToRanges(arrayBinarySearch.findRange(tree, startOffset, endOffset, offsetComparator), offsetPointParser)\n}\n\nexport function sizeStateReducer(state: SizeState, [ranges, groupIndices, log]: [SizeRange[], number[], Log]) {\n  if (ranges.length > 0) {\n    log('received item sizes', ranges, LogLevel.DEBUG)\n  }\n  const sizeTree = state.sizeTree\n  let offsetTree = state.offsetTree\n  let newSizeTree: AANode<number> = sizeTree\n  let syncStart = 0\n\n  // We receive probe item results from a group probe,\n  // which should always pass an item and a group\n  // the results contain two ranges, which we consider to mean that groups and items have different size\n  if (groupIndices.length > 0 && empty(sizeTree) && ranges.length === 2) {\n    const groupSize = ranges[0].size\n    const itemSize = ranges[1].size\n    newSizeTree = groupIndices.reduce((tree, groupIndex) => {\n      return insert(insert(tree, groupIndex, groupSize), groupIndex + 1, itemSize)\n    }, newSizeTree)\n  } else {\n    ;[newSizeTree, syncStart] = insertRanges(newSizeTree, ranges)\n  }\n\n  if (newSizeTree === sizeTree) {\n    return state\n  }\n\n  let prevIndex = 0\n  let prevSize = 0\n\n  let prevAOffset = 0\n  let startAIndex = 0\n\n  if (syncStart !== 0) {\n    startAIndex = arrayBinarySearch.findIndexOfClosestSmallerOrEqual(offsetTree, syncStart - 1, indexComparator)\n    const offsetInfo = offsetTree[startAIndex]\n    prevAOffset = offsetInfo.offset\n    const kv = findMaxKeyValue(newSizeTree, syncStart - 1)\n    prevIndex = kv[0]\n    prevSize = kv[1]!\n\n    if (offsetTree.length && offsetTree[startAIndex].size === findMaxKeyValue(newSizeTree, syncStart)[1]) {\n      startAIndex -= 1\n    }\n\n    offsetTree = offsetTree.slice(0, startAIndex + 1)\n  } else {\n    offsetTree = []\n  }\n\n  for (const { start: startIndex, value } of rangesWithin(newSizeTree, syncStart, Infinity)) {\n    const aOffset = (startIndex - prevIndex) * prevSize + prevAOffset\n    offsetTree.push({\n      offset: aOffset,\n      size: value,\n      index: startIndex,\n    })\n    prevIndex = startIndex\n    prevAOffset = aOffset\n    prevSize = value\n  }\n\n  return {\n    sizeTree: newSizeTree,\n    offsetTree,\n    groupOffsetTree: groupIndices.reduce((tree, index) => {\n      return insert(tree, index, offsetOf(index, offsetTree))\n    }, newTree<number>()),\n    lastIndex: prevIndex,\n    lastOffset: prevAOffset,\n    lastSize: prevSize,\n    groupIndices,\n  }\n}\n\nexport function offsetOf(index: number, tree: Array<OffsetPoint>) {\n  if (tree.length === 0) {\n    return 0\n  }\n\n  const { offset, index: startIndex, size } = arrayBinarySearch.findClosestSmallerOrEqual(tree, index, indexComparator)\n  return size * (index - startIndex) + offset\n}\n\nexport function originalIndexFromItemIndex(itemIndex: number, sizes: SizeState) {\n  if (!hasGroups(sizes)) {\n    return itemIndex\n  }\n\n  let groupOffset = 0\n  while (sizes.groupIndices[groupOffset] <= itemIndex + groupOffset) {\n    groupOffset++\n  }\n  // we find the real item index, offsetting it by the number of group items before it\n  return itemIndex + groupOffset\n}\n\nexport function hasGroups(sizes: SizeState) {\n  return !empty(sizes.groupOffsetTree)\n}\n\ntype OptionalNumber = number | undefined\n\nconst SIZE_MAP = {\n  offsetHeight: 'height',\n  offsetWidth: 'width',\n} as const\n\n/** Calculates the height of `el`, which will be the `Item` element in the DOM. */\nexport type SizeFunction = (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\nexport const sizeSystem = u.system(\n  ([{ log }]) => {\n    const sizeRanges = u.stream<SizeRange[]>()\n    const totalCount = u.stream<number>()\n    const unshiftWith = u.stream<number>()\n    const firstItemIndex = u.statefulStream(0)\n    const groupIndices = u.statefulStream([] as number[])\n    const fixedItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const defaultItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const itemSize = u.statefulStream<SizeFunction>((el, field) => correctItemSize(el, SIZE_MAP[field]))\n    const data = u.statefulStream<Data>(undefined)\n    const initial = initialSizeState()\n\n    const sizes = u.statefulStreamFromEmitter(\n      u.pipe(sizeRanges, u.withLatestFrom(groupIndices, log), u.scan(sizeStateReducer, initial), u.distinctUntilChanged()),\n      initial\n    )\n\n    u.connect(\n      u.pipe(\n        groupIndices,\n        u.filter((indexes) => indexes.length > 0),\n        u.withLatestFrom(sizes),\n        u.map(([groupIndices, sizes]) => {\n          const groupOffsetTree = groupIndices.reduce((tree, index, idx) => {\n            return insert(tree, index, offsetOf(index, sizes.offsetTree) || idx)\n          }, newTree<number>())\n\n          return {\n            ...sizes,\n            groupIndices,\n            groupOffsetTree,\n          }\n        })\n      ),\n      sizes\n    )\n\n    // decreasing the total count should remove any existing entries\n    // beyond the last index - do this by publishing the default size as a range over them.\n    u.connect(\n      u.pipe(\n        totalCount,\n        u.withLatestFrom(sizes),\n        u.filter(([totalCount, { lastIndex }]) => {\n          return totalCount < lastIndex\n        }),\n        u.map(([totalCount, { lastIndex, lastSize }]) => {\n          return [\n            {\n              startIndex: totalCount,\n              endIndex: lastIndex,\n              size: lastSize,\n            },\n          ] as SizeRange[]\n        })\n      ),\n      sizeRanges\n    )\n\n    u.connect(fixedItemSize, defaultItemSize)\n\n    const trackItemSizes = u.statefulStreamFromEmitter(\n      u.pipe(\n        fixedItemSize,\n        u.map((size) => size === undefined)\n      ),\n      true\n    )\n\n    u.connect(\n      u.pipe(\n        defaultItemSize,\n        u.filter((value) => {\n          return value !== undefined && empty(u.getValue(sizes).sizeTree)\n        }),\n        u.map((size) => [{ startIndex: 0, endIndex: 0, size }] as SizeRange[])\n      ),\n      sizeRanges\n    )\n\n    const listRefresh = u.streamFromEmitter(\n      u.pipe(\n        sizeRanges,\n        u.withLatestFrom(sizes),\n        u.scan(\n          ({ sizes: oldSizes }, [_, newSizes]) => {\n            return {\n              changed: newSizes !== oldSizes,\n              sizes: newSizes,\n            }\n          },\n          { changed: false, sizes: initial }\n        ),\n        u.map((value) => value.changed)\n      )\n    )\n\n    u.connect(\n      u.pipe(\n        firstItemIndex,\n        u.scan(\n          (prev, next) => {\n            return { diff: prev.prev - next, prev: next }\n          },\n          { diff: 0, prev: 0 }\n        ),\n        u.map((val) => val.diff),\n        u.filter((value) => value > 0)\n      ),\n      unshiftWith\n    )\n\n    u.subscribe(u.pipe(firstItemIndex, u.withLatestFrom(log)), ([index, log]) => {\n      if (index < 0) {\n        log(\n          \"`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value\",\n          { firstItemIndex },\n          LogLevel.ERROR\n        )\n      }\n    })\n\n    // Capture the current list top item before the sizes get refreshed\n    const beforeUnshiftWith = u.streamFromEmitter(unshiftWith)\n\n    u.connect(\n      u.pipe(\n        unshiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([unshiftWith, sizes]) => {\n          if (sizes.groupIndices.length > 0) {\n            throw new Error('Virtuoso: prepending items does not work with groups')\n          }\n\n          return walk(sizes.sizeTree).reduce(\n            (acc, { k: index, v: size }) => {\n              return {\n                ranges: [...acc.ranges, { startIndex: acc.prevIndex, endIndex: index + unshiftWith - 1, size: acc.prevSize }],\n                prevIndex: index + unshiftWith,\n                prevSize: size,\n              }\n            },\n            {\n              ranges: [] as SizeRange[],\n              prevIndex: 0,\n              prevSize: sizes.lastSize,\n            }\n          ).ranges\n        })\n      ),\n      sizeRanges\n    )\n\n    return {\n      // input\n      data,\n      totalCount,\n      sizeRanges,\n      groupIndices,\n      defaultItemSize,\n      fixedItemSize,\n      unshiftWith,\n      beforeUnshiftWith,\n      firstItemIndex,\n\n      // output\n      sizes,\n      listRefresh,\n      trackItemSizes,\n      itemSize,\n    }\n  },\n  u.tup(loggerSystem),\n  { singleton: true }\n)\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromItemIndex, sizeSystem } from './sizeSystem'\nimport { IndexLocationWithAlign } from './interfaces'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\nexport type IndexLocation = number | IndexLocationWithAlign\n\nconst SUPPORTS_SCROLL_TO_OPTIONS = typeof document !== 'undefined' && 'scrollBehavior' in document.documentElement.style\n\nexport function normalizeIndexLocation(location: IndexLocation) {\n  const result: IndexLocationWithAlign = typeof location === 'number' ? { index: location } : location\n\n  if (!result.align) {\n    result.align = 'start'\n  }\n  if (!result.behavior || !SUPPORTS_SCROLL_TO_OPTIONS) {\n    result.behavior = 'auto'\n  }\n  if (!result.offset) {\n    result.offset = 0\n  }\n  return result as Required<IndexLocationWithAlign>\n}\n\nexport const scrollToIndexSystem = u.system(\n  ([\n    { sizes, totalCount, listRefresh },\n    { scrollingInProgress, viewportHeight, scrollTo, smoothScrollTargetReached, headerHeight, footerHeight },\n    { log },\n  ]) => {\n    const scrollToIndex = u.stream<IndexLocation>()\n    const topListHeight = u.statefulStream(0)\n\n    let unsubscribeNextListRefresh: any = null\n    let cleartTimeoutRef: any = null\n    let unsubscribeListRefresh: any = null\n\n    function cleanup() {\n      if (unsubscribeNextListRefresh) {\n        unsubscribeNextListRefresh()\n        unsubscribeNextListRefresh = null\n      }\n\n      if (unsubscribeListRefresh) {\n        unsubscribeListRefresh()\n        unsubscribeListRefresh = null\n      }\n\n      if (cleartTimeoutRef) {\n        clearTimeout(cleartTimeoutRef)\n        cleartTimeoutRef = null\n      }\n      u.publish(scrollingInProgress, false)\n    }\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log),\n        u.map(([location, sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log]) => {\n          const normalLocation = normalizeIndexLocation(location)\n          const { align, behavior, offset } = normalLocation\n          const lastIndex = totalCount - 1\n          let index = normalLocation.index\n          if (index === 'LAST') {\n            index = lastIndex\n          }\n\n          index = originalIndexFromItemIndex(index, sizes)\n\n          index = Math.max(0, index, Math.min(lastIndex, index))\n\n          let top = offsetOf(index, sizes.offsetTree) + headerHeight\n          if (align === 'end') {\n            top = Math.round(top - viewportHeight + findMaxKeyValue(sizes.sizeTree, index)[1]!)\n            if (index === lastIndex) {\n              top += footerHeight\n            }\n          } else if (align === 'center') {\n            top = Math.round(top - viewportHeight / 2 + findMaxKeyValue(sizes.sizeTree, index)[1]! / 2)\n          } else {\n            top -= topListHeight\n          }\n\n          if (offset) {\n            top += offset\n          }\n\n          const retry = (listChanged: boolean) => {\n            cleanup()\n            if (listChanged) {\n              log('retrying to scroll to', { location }, LogLevel.DEBUG)\n              u.publish(scrollToIndex, location)\n            } else {\n              log('list did not change, scroll successful', {}, LogLevel.DEBUG)\n            }\n          }\n\n          cleanup()\n\n          if (behavior === 'smooth') {\n            let listChanged = false\n            unsubscribeListRefresh = u.subscribe(listRefresh, (changed) => {\n              listChanged = listChanged || changed\n            })\n\n            unsubscribeNextListRefresh = u.handleNext(smoothScrollTargetReached, () => {\n              retry(listChanged)\n            })\n          } else {\n            unsubscribeNextListRefresh = u.handleNext(u.pipe(listRefresh, watchChangesFor(50)), retry)\n          }\n\n          // if the scroll jump is too small, the list won't get rerendered.\n          // clean this listener\n          cleartTimeoutRef = setTimeout(() => {\n            cleanup()\n          }, 1200)\n\n          u.publish(scrollingInProgress, true)\n          log('scrolling from index to', { index, top, behavior }, LogLevel.DEBUG)\n          return { top, behavior }\n        })\n      ),\n      scrollTo\n    )\n\n    return {\n      scrollToIndex,\n      topListHeight,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, loggerSystem),\n  { singleton: true }\n)\n\nfunction watchChangesFor(limit: number): u.Operator<boolean> {\n  return (done) => {\n    const timeoutRef = setTimeout(() => {\n      done(false)\n    }, limit)\n    return (value) => {\n      if (value) {\n        done(true)\n        clearTimeout(timeoutRef)\n      }\n    }\n  }\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { UP, DOWN, ScrollDirection } from './stateFlagsSystem'\nimport { tupleComparator } from './comparators'\n\nexport type NumberTuple = [number, number]\nexport type Overscan = number | { main: number; reverse: number }\nexport const TOP = 'top' as const\nexport const BOTTOM = 'bottom' as const\nexport const NONE = 'none' as const\nexport type ListEnd = typeof TOP | typeof BOTTOM\nexport type ViewportIncrease = number | { [k in ListEnd]?: number }\nexport type ChangeDirection = typeof UP | typeof DOWN | typeof NONE\n\nexport function getOverscan(overscan: Overscan, end: ListEnd, direction: ScrollDirection) {\n  if (typeof overscan === 'number') {\n    return (direction === UP && end === TOP) || (direction === DOWN && end === BOTTOM) ? overscan : 0\n  } else {\n    if (direction === UP) {\n      return end === TOP ? overscan.main : overscan.reverse\n    } else {\n      return end === BOTTOM ? overscan.main : overscan.reverse\n    }\n  }\n}\n\nfunction getViewportIncrease(value: ViewportIncrease, end: ListEnd) {\n  return typeof value === 'number' ? value : value[end] || 0\n}\n\nexport const sizeRangeSystem = u.system(\n  ([{ scrollTop, viewportHeight, deviation, headerHeight }]) => {\n    const listBoundary = u.stream<NumberTuple>()\n    const topListHeight = u.statefulStream(0)\n    const increaseViewportBy = u.statefulStream<ViewportIncrease>(0)\n    const overscan = u.statefulStream<Overscan>(0)\n\n    const visibleRange = (u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          u.duc(scrollTop),\n          u.duc(viewportHeight),\n          u.duc(headerHeight),\n          u.duc(listBoundary, tupleComparator),\n          u.duc(overscan),\n          u.duc(topListHeight),\n          u.duc(deviation),\n          u.duc(increaseViewportBy)\n        ),\n        u.map(\n          ([scrollTop, viewportHeight, headerHeight, [listTop, listBottom], overscan, topListHeight, deviation, increaseViewportBy]) => {\n            const top = scrollTop - deviation\n            const headerVisible = Math.max(headerHeight - top, 0)\n            let direction: ChangeDirection = NONE\n            const topViewportAddition = getViewportIncrease(increaseViewportBy, TOP)\n            const bottomViewportAddition = getViewportIncrease(increaseViewportBy, BOTTOM)\n\n            listTop -= deviation\n            listTop += headerHeight\n            listBottom += headerHeight\n            listBottom -= deviation\n\n            if (listTop > scrollTop + topListHeight - topViewportAddition) {\n              direction = UP\n            }\n\n            if (listBottom < scrollTop - headerVisible + viewportHeight + bottomViewportAddition) {\n              direction = DOWN\n            }\n\n            if (direction !== NONE) {\n              return [\n                Math.max(top - headerHeight - getOverscan(overscan, TOP, direction) - topViewportAddition, 0),\n                top - headerVisible + viewportHeight + getOverscan(overscan, BOTTOM, direction) + bottomViewportAddition,\n              ] as NumberTuple\n            }\n\n            return null\n          }\n        ),\n        u.filter((value) => value != null),\n        u.distinctUntilChanged(tupleComparator as any)\n      ),\n      [0, 0]\n    ) as unknown) as u.StatefulStream<NumberTuple>\n\n    return {\n      // input\n      listBoundary,\n      overscan,\n      topListHeight,\n      increaseViewportBy,\n\n      // output\n      visibleRange,\n    }\n  },\n  u.tup(domIOSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { WindowViewportInfo } from './interfaces'\n\nexport const windowScrollerSystem = u.system(([{ scrollTop, scrollTo }]) => {\n  const windowViewportRect = u.stream<WindowViewportInfo>()\n  const windowScrollTop = u.stream<number>()\n  const windowScrollTo = u.stream<ScrollToOptions>()\n  const useWindowScroll = u.statefulStream(false)\n\n  u.connect(\n    u.pipe(\n      u.combineLatest(windowScrollTop, windowViewportRect),\n      u.map(([windowScrollTop, { offsetTop }]) => {\n        return Math.max(0, windowScrollTop - offsetTop)\n      })\n    ),\n    scrollTop\n  )\n\n  u.connect(\n    u.pipe(\n      scrollTo,\n      u.withLatestFrom(windowViewportRect),\n      u.map(([scrollTo, { offsetTop }]) => {\n        return {\n          ...scrollTo,\n          top: scrollTo.top! + offsetTop,\n        }\n      })\n    ),\n    windowScrollTo\n  )\n\n  return {\n    // config\n    useWindowScroll,\n\n    // input\n    windowScrollTop,\n    windowViewportRect,\n\n    // signals\n    windowScrollTo,\n  }\n}, u.tup(domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { rangeComparator, tupleComparator } from './comparators'\nimport { domIOSystem } from './domIOSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { IndexLocation, normalizeIndexLocation } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\n\nexport interface ElementDimensions {\n  width: number\n  height: number\n}\n\nexport interface GridItem {\n  index: number\n}\n\nexport interface GridLayout {\n  top: number\n  bottom: number\n}\n\nexport interface GridState extends GridLayout {\n  items: GridItem[]\n  offsetTop: number\n  offsetBottom: number\n  itemHeight: number\n  itemWidth: number\n}\n\nconst INITIAL_GRID_STATE: GridState = {\n  items: [],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst PROBE_GRID_STATE: GridState = {\n  items: [{ index: 0 }],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst { ceil, floor, min, max } = Math\n\nfunction hackFloor(val: number) {\n  return ceil(val) - val < 0.03 ? ceil(val) : floor(val)\n}\n\nfunction buildItems(startIndex: number, endIndex: number) {\n  return Array.from({ length: endIndex - startIndex + 1 }).map((_, i) => ({ index: i + startIndex } as GridItem))\n}\nexport const gridSystem = u.system(\n  ([\n    { overscan, visibleRange, listBoundary },\n    { scrollTop, viewportHeight, scrollBy, scrollTo, smoothScrollTargetReached },\n    stateFlags,\n    scrollSeek,\n    { propsReady, didMount },\n    { windowViewportRect, windowScrollTo, useWindowScroll, windowScrollTop },\n  ]) => {\n    const totalCount = u.statefulStream(0)\n    const initialItemCount = u.statefulStream(0)\n    const gridState = u.statefulStream(INITIAL_GRID_STATE)\n    const viewportDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const itemDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const scrollToIndex = u.stream<IndexLocation>()\n    const scrollHeight = u.stream<number>()\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.map(([, count]) => {\n          return {\n            items: buildItems(0, count - 1),\n            top: 0,\n            bottom: 0,\n            offsetBottom: 0,\n            offsetTop: 0,\n            itemHeight: 0,\n            itemWidth: 0,\n          }\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(\n          u.duc(totalCount),\n          visibleRange,\n          u.duc(itemDimensions, (prev, next) => prev && prev.width === next.width && prev.height === next.height)\n        ),\n        u.withLatestFrom(viewportDimensions),\n        u.map(([[totalCount, [startOffset, endOffset], item], viewport]) => {\n          const { height: itemHeight, width: itemWidth } = item\n          const { width: viewportWidth } = viewport\n\n          if (totalCount === 0 || viewportWidth === 0) {\n            return INITIAL_GRID_STATE\n          }\n\n          if (itemWidth === 0) {\n            return PROBE_GRID_STATE\n          }\n\n          const perRow = hackFloor(viewportWidth / itemWidth)\n          let startIndex = perRow * floor(startOffset / itemHeight)\n          let endIndex = perRow * ceil(endOffset / itemHeight) - 1\n          endIndex = min(totalCount - 1, endIndex)\n          startIndex = min(endIndex, max(0, startIndex))\n\n          const items = buildItems(startIndex, endIndex)\n          const { top, bottom } = gridLayout(viewport, item, items)\n          const totalHeight = ceil(totalCount / perRow) * itemHeight\n          const offsetBottom = totalHeight - bottom\n\n          return { items, offsetTop: top, offsetBottom, top, bottom, itemHeight, itemWidth } as GridState\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        viewportDimensions,\n        u.map(({ height }) => height)\n      ),\n      viewportHeight\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(viewportDimensions, itemDimensions, gridState),\n        u.map(([viewportDimensions, item, { items }]) => {\n          const { top, bottom } = gridLayout(viewportDimensions, item, items)\n\n          return [top, bottom] as [number, number]\n        }),\n        u.distinctUntilChanged(tupleComparator)\n      ),\n      listBoundary\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].index === totalCount - 1),\n        u.map(([, totalCount]) => totalCount - 1),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => {\n          return items.length > 0 && items[0].index === 0\n        }),\n        u.mapTo(0),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index,\n          }\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    u.connect(rangeChanged, scrollSeek.scrollSeekRangeChanged)\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(viewportDimensions, itemDimensions, totalCount),\n        u.map(([location, viewport, item, totalCount]) => {\n          const normalLocation = normalizeIndexLocation(location)\n          const { align, behavior, offset } = normalLocation\n          let index = normalLocation.index\n          if (index === 'LAST') {\n            index = totalCount - 1\n          }\n\n          index = Math.max(0, index, Math.min(totalCount - 1, index))\n\n          let top = itemTop(viewport, item, index)\n\n          if (align === 'end') {\n            top = Math.round(top - viewport.height + item.height)\n          } else if (align === 'center') {\n            top = Math.round(top - viewport.height / 2 + item.height / 2)\n          }\n\n          if (offset) {\n            top += offset\n          }\n\n          return { top, behavior }\n        })\n      ),\n      scrollTo\n    )\n\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        gridState,\n        u.map((gridState) => {\n          return gridState.offsetBottom + gridState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(\n      u.pipe(\n        windowViewportRect,\n        u.map((viewportInfo) => ({ width: viewportInfo.visibleWidth, height: viewportInfo.visibleHeight }))\n      ),\n      viewportDimensions\n    )\n\n    return {\n      // input\n      totalCount,\n      viewportDimensions,\n      itemDimensions,\n      scrollTop,\n      scrollHeight,\n      overscan,\n      scrollBy,\n      scrollTo,\n      scrollToIndex,\n      smoothScrollTargetReached,\n      windowViewportRect,\n      windowScrollTo,\n      useWindowScroll,\n      windowScrollTop,\n      initialItemCount,\n      ...scrollSeek,\n\n      // output\n      gridState,\n      totalListHeight,\n      ...stateFlags,\n      startReached,\n      endReached,\n      rangeChanged,\n      propsReady,\n    }\n  },\n  u.tup(sizeRangeSystem, domIOSystem, stateFlagsSystem, scrollSeekSystem, propsReadySystem, windowScrollerSystem)\n)\n\nfunction gridLayout(viewport: ElementDimensions, item: ElementDimensions, items: GridItem[]): GridLayout {\n  const { height: itemHeight } = item\n  if (itemHeight === undefined || items.length === 0) {\n    return { top: 0, bottom: 0 }\n  }\n\n  const top = itemTop(viewport, item, items[0].index)\n  const bottom = itemTop(viewport, item, items[items.length - 1].index) + itemHeight\n  return { top, bottom }\n}\n\nfunction itemTop(viewport: ElementDimensions, item: ElementDimensions, index: number) {\n  const perRow = itemsPerRow(viewport.width, item.width)\n  return floor(index / perRow) * item.height\n}\n\nfunction itemsPerRow(viewportWidth: number, itemWidth: number) {\n  return hackFloor(viewportWidth / itemWidth)\n}\n","import { useRef } from 'react'\n\nexport type CallbackRefParam = HTMLElement | null\n\nexport function useSizeWithElRef(callback: (e: HTMLElement) => void, enabled = true) {\n  const ref = useRef<CallbackRefParam>(null)\n\n  let callbackRef = (_el: CallbackRefParam) => {\n    void 0\n  }\n\n  if (typeof ResizeObserver !== 'undefined') {\n    const observer = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n      const element = entries[0].target as HTMLElement\n      // Revert the RAF below - it causes a blink in the upward scrolling fix\n      // See e2e/chat example\n      // Avoid Resize loop limit exceeded error\n      // https://github.com/edunad/react-virtuoso/commit/581d4558f2994adea375291b76fe59605556c08f\n      // requestAnimationFrame(() => {\n      //\n      // if display: none, the element won't have an offsetParent\n      // measuring it at this mode is not going to work\n      // https://stackoverflow.com/a/21696585/1009797\n      if (element.offsetParent !== null) {\n        callback(element)\n      }\n      // })\n    })\n\n    callbackRef = (elRef: CallbackRefParam) => {\n      if (elRef && enabled) {\n        observer.observe(elRef)\n        ref.current = elRef\n      } else {\n        if (ref.current) {\n          observer.unobserve(ref.current)\n        }\n        ref.current = null\n      }\n    }\n  }\n\n  return { ref, callbackRef }\n}\n\nexport default function useSize(callback: (e: HTMLElement) => void, enabled = true) {\n  return useSizeWithElRef(callback, enabled).callbackRef\n}\n","import { useEffect, useRef, useCallback } from 'react'\nimport { useSizeWithElRef } from './useSize'\nimport { WindowViewportInfo } from '../interfaces'\n\nexport default function useWindowViewportRectRef(callback: (info: WindowViewportInfo) => void) {\n  const viewportInfo = useRef<WindowViewportInfo | null>(null)\n\n  const calculateInfo = useCallback(\n    (element: HTMLElement | null) => {\n      if (element === null) {\n        return\n      }\n      const rect = element.getBoundingClientRect()\n      const visibleHeight = window.innerHeight - Math.max(0, rect.top)\n\n      const visibleWidth = rect.width\n      const offsetTop = rect.top + window.pageYOffset\n      viewportInfo.current = {\n        offsetTop,\n        visibleHeight,\n        visibleWidth,\n      }\n      callback(viewportInfo.current)\n    },\n    [callback]\n  )\n\n  const { callbackRef, ref } = useSizeWithElRef(calculateInfo)\n\n  const windowEH = useCallback(() => {\n    calculateInfo(ref.current)\n  }, [calculateInfo, ref])\n\n  useEffect(() => {\n    window.addEventListener('scroll', windowEH)\n    window.addEventListener('resize', windowEH)\n    return () => {\n      window.removeEventListener('scroll', windowEH)\n      window.removeEventListener('resize', windowEH)\n    }\n  }, [windowEH])\n\n  return callbackRef\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import { useRef, useCallback, useEffect } from 'react'\nimport * as u from '@virtuoso.dev/urx'\nimport { correctItemSize } from '../utils/correctItemSize'\n\nexport type ScrollerRef = Window | HTMLElement | null\n\nfunction approximatelyEqual(num1: number, num2: number) {\n  return Math.abs(num1 - num2) < 1.01\n}\n\nexport default function useScrollTop(\n  scrollTopCallback: (scrollTop: number) => void,\n  smoothScrollTargetReached: (yes: true) => void,\n  scrollerElement: any,\n  scrollerRefCallback: (ref: ScrollerRef) => void = u.noop,\n  scrollHeightCallback: (height: number) => void = u.noop\n) {\n  const scrollerRef = useRef<HTMLElement | null | Window>(null)\n  const scrollTopTarget = useRef<any>(null)\n  const timeoutRef = useRef<any>(null)\n\n  const handler = useCallback(\n    (ev: Event) => {\n      const el = ev.target as HTMLElement\n      const scrollTop =\n        (el as any) === window || (el as any) === document ? window.pageYOffset || document.documentElement.scrollTop : el.scrollTop\n      const scrollHeight = (el as any) === window ? document.documentElement.scrollHeight : el.scrollHeight\n\n      scrollHeightCallback(scrollHeight)\n      scrollTopCallback(Math.max(scrollTop, 0))\n\n      if (scrollTopTarget.current !== null) {\n        if (scrollTop === scrollTopTarget.current || scrollTop <= 0 || scrollTop === el.scrollHeight - correctItemSize(el, 'height')) {\n          scrollTopTarget.current = null\n          smoothScrollTargetReached(true)\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current)\n            timeoutRef.current = null\n          }\n        }\n      }\n    },\n    [scrollTopCallback, smoothScrollTargetReached, scrollHeightCallback]\n  )\n\n  useEffect(() => {\n    const localRef = scrollerRef.current!\n\n    scrollerRefCallback(scrollerRef.current)\n    handler(({ target: localRef } as unknown) as Event)\n    localRef.addEventListener('scroll', handler, { passive: true })\n\n    return () => {\n      scrollerRefCallback(null)\n      localRef.removeEventListener('scroll', handler)\n    }\n  }, [scrollerRef, handler, scrollerElement, scrollerRefCallback])\n\n  function scrollToCallback(location: ScrollToOptions) {\n    const scrollerElement = scrollerRef.current\n    if (!scrollerElement || ('offsetHeight' in scrollerElement && scrollerElement.offsetHeight === 0)) {\n      return\n    }\n\n    const isSmooth = location.behavior === 'smooth'\n\n    let offsetHeight: number\n    let scrollHeight: number\n    let scrollTop: number\n\n    if (scrollerElement === window) {\n      // this is not a mistake\n      scrollHeight = Math.max(correctItemSize(document.documentElement, 'height'), document.documentElement.scrollHeight)\n      offsetHeight = window.innerHeight\n      scrollTop = document.documentElement.scrollTop\n    } else {\n      scrollHeight = (scrollerElement as HTMLElement).scrollHeight\n      offsetHeight = correctItemSize(scrollerElement as HTMLElement, 'height')\n      scrollTop = (scrollerElement as HTMLElement).scrollTop\n    }\n\n    const maxScrollTop = scrollHeight - offsetHeight\n    location.top = Math.max(Math.min(maxScrollTop, location.top!), 0)\n\n    // avoid system hanging because the DOM never called back\n    // with the scrollTop\n    // scroller is already at this location\n    if (approximatelyEqual(offsetHeight, scrollHeight) || location.top === scrollTop) {\n      scrollTopCallback(scrollTop)\n      if (isSmooth) {\n        smoothScrollTargetReached(true)\n      }\n      return\n    }\n\n    if (isSmooth) {\n      scrollTopTarget.current = location.top\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current)\n      }\n\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null\n        scrollTopTarget.current = null\n        smoothScrollTargetReached(true)\n      }, 1000)\n    } else {\n      scrollTopTarget.current = null\n    }\n\n    scrollerElement.scrollTo(location)\n  }\n\n  function scrollByCallback(location: ScrollToOptions) {\n    if (scrollTopTarget.current === null) {\n      scrollerRef.current!.scrollBy(location)\n    }\n  }\n\n  return { scrollerRef, scrollByCallback, scrollToCallback }\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { empty } from './AATree'\nimport { sizeSystem } from './sizeSystem'\nimport { domIOSystem } from './domIOSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { propsReadySystem } from './propsReadySystem'\n\nexport const initialTopMostItemIndexSystem = u.system(\n  ([{ sizes, listRefresh, defaultItemSize }, { scrollTop }, { scrollToIndex }, { didMount }]) => {\n    const scrolledToInitialItem = u.statefulStream(true)\n    const initialTopMostItemIndex = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialTopMostItemIndex),\n        u.filter(([_, index]) => index !== 0),\n        u.mapTo(false)\n      ),\n      scrolledToInitialItem\n    )\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(listRefresh, didMount),\n        u.withLatestFrom(scrolledToInitialItem, sizes, defaultItemSize),\n        u.filter(([[, didMount], scrolledToInitialItem, { sizeTree }, defaultItemSize]) => {\n          return didMount && (!empty(sizeTree) || defaultItemSize !== undefined) && !scrolledToInitialItem\n        }),\n        u.withLatestFrom(initialTopMostItemIndex)\n      ),\n      ([, initialTopMostItemIndex]) => {\n        setTimeout(() => {\n          u.handleNext(scrollTop, () => {\n            u.publish(scrolledToInitialItem, true)\n          })\n          u.publish(scrollToIndex, initialTopMostItemIndex)\n        })\n      }\n    )\n\n    return {\n      scrolledToInitialItem,\n      initialTopMostItemIndex,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, propsReadySystem),\n  { singleton: true }\n)\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { FollowOutput, FollowOutputScalarType } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { loggerSystem, LogLevel } from './loggerSystem'\nimport { domIOSystem } from './domIOSystem'\n\nfunction normalizeFollowOutput(follow: FollowOutputScalarType): FollowOutputScalarType {\n  if (!follow) {\n    return false\n  }\n  return follow === 'smooth' ? 'smooth' : 'auto'\n}\n\nconst behaviorFromFollowOutput = (follow: FollowOutput, isAtBottom: boolean) => {\n  if (typeof follow === 'function') {\n    return normalizeFollowOutput(follow(isAtBottom))\n  }\n  return isAtBottom && normalizeFollowOutput(follow)\n}\n\nexport const followOutputSystem = u.system(\n  ([\n    { totalCount, listRefresh },\n    { isAtBottom, atBottomState },\n    { scrollToIndex },\n    { scrolledToInitialItem },\n    { propsReady, didMount },\n    { log },\n    { scrollingInProgress },\n  ]) => {\n    const followOutput = u.statefulStream<FollowOutput>(false)\n    let pendingScrollHandle: any = null\n\n    function scrollToBottom(followOutputBehavior: FollowOutputScalarType) {\n      u.publish(scrollToIndex, {\n        index: 'LAST',\n        align: 'end',\n        behavior: followOutputBehavior,\n      })\n    }\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.pipe(u.duc(totalCount), u.skip(1)), didMount),\n        u.withLatestFrom(u.duc(followOutput), isAtBottom, scrolledToInitialItem, scrollingInProgress),\n        u.map(([[totalCount, didMount], followOutput, isAtBottom, scrolledToInitialItem, scrollingInProgress]) => {\n          let shouldFollow = didMount && scrolledToInitialItem\n          let followOutputBehavior: FollowOutputScalarType = 'auto'\n\n          if (shouldFollow) {\n            // if scrolling to index is in progress,\n            // assume that a previous followOutput response is going\n            followOutputBehavior = behaviorFromFollowOutput(followOutput, isAtBottom || scrollingInProgress)\n            shouldFollow = shouldFollow && !!followOutputBehavior\n          }\n\n          return { totalCount, shouldFollow, followOutputBehavior }\n        }),\n        u.filter(({ shouldFollow }) => shouldFollow)\n      ),\n      ({ totalCount, followOutputBehavior }) => {\n        if (pendingScrollHandle) {\n          pendingScrollHandle()\n          pendingScrollHandle = null\n        }\n\n        pendingScrollHandle = u.handleNext(listRefresh, () => {\n          u.getValue(log)('following output to ', { totalCount }, LogLevel.DEBUG)\n          scrollToBottom(followOutputBehavior)\n          pendingScrollHandle = null\n        })\n      }\n    )\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.duc(followOutput), totalCount, propsReady),\n        u.filter(([follow, , ready]) => follow && ready),\n        u.scan(\n          ({ value }, [, next]) => {\n            return { refreshed: value === next, value: next }\n          },\n          { refreshed: false, value: 0 }\n        ),\n        u.filter(({ refreshed }) => refreshed),\n        u.withLatestFrom(followOutput, totalCount)\n      ),\n      ([, followOutput]) => {\n        const cancel = u.handleNext(atBottomState, (state) => {\n          if (followOutput && !state.atBottom && state.notAtBottomBecause === 'SIZE_INCREASED' && !pendingScrollHandle) {\n            u.getValue(log)('scrolling to bottom due to increased size', LogLevel.DEBUG)\n            scrollToBottom('auto')\n          }\n        })\n        setTimeout(cancel, 100)\n      }\n    )\n\n    u.subscribe(u.combineLatest(u.duc(followOutput), atBottomState), ([followOutput, state]) => {\n      if (followOutput && !state.atBottom && state.notAtBottomBecause === 'VIEWPORT_HEIGHT_DECREASING') {\n        scrollToBottom('auto')\n      }\n    })\n\n    return { followOutput }\n  },\n  u.tup(sizeSystem, stateFlagsSystem, scrollToIndexSystem, initialTopMostItemIndexSystem, propsReadySystem, loggerSystem, domIOSystem)\n)\n","import {\n  combineLatest,\n  connect,\n  distinctUntilChanged,\n  system,\n  filter,\n  map,\n  pipe,\n  prop,\n  stream,\n  streamFromEmitter,\n  tup,\n} from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { sizeSystem, hasGroups } from './sizeSystem'\nexport interface GroupIndexesAndCount {\n  totalCount: number\n  groupIndices: number[]\n}\n\nexport function groupCountsToIndicesAndCount(counts: number[]) {\n  return counts.reduce(\n    (acc, groupCount) => {\n      acc.groupIndices.push(acc.totalCount)\n      acc.totalCount += groupCount + 1\n      return acc\n    },\n    {\n      totalCount: 0,\n      groupIndices: [],\n    } as GroupIndexesAndCount\n  )\n}\n\nexport const groupedListSystem = system(([{ totalCount, groupIndices, sizes }, { scrollTop, headerHeight }]) => {\n  const groupCounts = stream<number[]>()\n  const topItemsIndexes = stream<[number]>()\n  const groupIndicesAndCount = streamFromEmitter(pipe(groupCounts, map(groupCountsToIndicesAndCount)))\n  connect(pipe(groupIndicesAndCount, map(prop('totalCount'))), totalCount)\n  connect(pipe(groupIndicesAndCount, map(prop('groupIndices'))), groupIndices)\n\n  connect(\n    pipe(\n      combineLatest(scrollTop, sizes, headerHeight),\n      filter(([_, sizes]) => hasGroups(sizes)),\n      map(([scrollTop, state, headerHeight]) => findMaxKeyValue(state.groupOffsetTree, Math.max(scrollTop - headerHeight, 0), 'v')[0]),\n      distinctUntilChanged(),\n      map((index) => [index])\n    ),\n    topItemsIndexes\n  )\n\n  return { groupCounts, topItemsIndexes }\n}, tup(sizeSystem, domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { empty, findMaxKeyValue, Range, rangesWithin } from './AATree'\nimport { groupedListSystem } from './groupedListSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { Item, ListItem, ListRange } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { Data, originalIndexFromItemIndex, SizeState, sizeSystem, hasGroups, rangesWithinOffsets } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { rangeComparator, tupleComparator } from './comparators'\n\nexport type ListItems = ListItem<unknown>[]\nexport interface TopListState {\n  items: ListItems\n  listHeight: number\n}\n\nexport interface ListState {\n  items: ListItems\n  topItems: ListItems\n  topListHeight: number\n  offsetTop: number\n  offsetBottom: number\n  top: number\n  bottom: number\n  totalCount: number\n}\n\nfunction probeItemSet(index: number, sizes: SizeState, data: Data) {\n  if (hasGroups(sizes)) {\n    const itemIndex = originalIndexFromItemIndex(index, sizes)\n    const groupIndex = findMaxKeyValue(sizes.groupOffsetTree, itemIndex)[0]\n\n    return [\n      { index: groupIndex, size: 0, offset: 0 },\n      { index: itemIndex, size: 0, offset: 0, data: data && data[0] },\n    ]\n  }\n  return [{ index, size: 0, offset: 0, data: data && data[0] }]\n}\n\nconst EMPTY_LIST_STATE: ListState = {\n  items: [] as ListItems,\n  topItems: [] as ListItems,\n  offsetTop: 0,\n  offsetBottom: 0,\n  top: 0,\n  bottom: 0,\n  topListHeight: 0,\n  totalCount: 0,\n}\n\nfunction transposeItems(items: Item<any>[], sizes: SizeState, firstItemIndex: number): ListItems {\n  if (items.length === 0) {\n    return []\n  }\n\n  if (!hasGroups(sizes)) {\n    return items.map((item) => ({ ...item, index: item.index + firstItemIndex, originalIndex: item.index }))\n  }\n\n  const startIndex = items[0].index\n  const endIndex = items[items.length - 1].index\n\n  const transposedItems = [] as ListItems\n  const groupRanges = rangesWithin(sizes.groupOffsetTree, startIndex, endIndex)\n  let currentRange: Range<number> | undefined = undefined\n  let currentGroupIndex = 0\n\n  for (const item of items) {\n    if (!currentRange || currentRange.end < item.index) {\n      currentRange = groupRanges.shift()!\n      currentGroupIndex = sizes.groupIndices.indexOf(currentRange.start)\n    }\n\n    let transposedItem: { type: 'group'; index: number } | { index: number; groupIndex: number }\n\n    if (item.index === currentRange.start) {\n      transposedItem = {\n        type: 'group' as const,\n        index: currentGroupIndex,\n      }\n    } else {\n      transposedItem = {\n        index: item.index - (currentGroupIndex + 1) + firstItemIndex,\n        groupIndex: currentGroupIndex,\n      }\n    }\n\n    transposedItems.push({\n      ...transposedItem,\n      size: item.size,\n      offset: item.offset,\n      originalIndex: item.index,\n      data: item.data,\n    })\n  }\n\n  return transposedItems\n}\n\nexport function buildListState(\n  items: Item<any>[],\n  topItems: Item<any>[],\n  totalCount: number,\n  sizes: SizeState,\n  firstItemIndex: number\n): ListState {\n  const { lastSize, lastOffset, lastIndex } = sizes\n  let offsetTop = 0\n  let bottom = 0\n\n  if (items.length > 0) {\n    offsetTop = items[0].offset\n    const lastItem = items[items.length - 1]\n    bottom = lastItem.offset + lastItem.size\n  }\n\n  const total = lastOffset + (totalCount - lastIndex) * lastSize\n  const top = offsetTop\n  const offsetBottom = total - bottom\n\n  return {\n    items: transposeItems(items, sizes, firstItemIndex),\n    topItems: transposeItems(topItems, sizes, firstItemIndex),\n    topListHeight: topItems.reduce((height, item) => item.size + height, 0),\n    offsetTop,\n    offsetBottom,\n    top,\n    bottom,\n    totalCount,\n  }\n}\n\nexport const listStateSystem = u.system(\n  ([\n    { sizes, totalCount, data, firstItemIndex },\n    groupedListSystem,\n    { visibleRange, listBoundary, topListHeight: rangeTopListHeight },\n    { scrolledToInitialItem, initialTopMostItemIndex },\n    { topListHeight },\n    stateFlags,\n    { didMount },\n  ]) => {\n    const topItemsIndexes = u.statefulStream<Array<number>>([])\n    const itemsRendered = u.stream<ListItems>()\n\n    u.connect(groupedListSystem.topItemsIndexes, topItemsIndexes)\n\n    const listState = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          didMount,\n          u.duc(visibleRange),\n          u.duc(totalCount),\n          u.duc(sizes),\n          u.duc(initialTopMostItemIndex),\n          scrolledToInitialItem,\n          u.duc(topItemsIndexes),\n          u.duc(firstItemIndex),\n          data\n        ),\n        u.filter(([mount]) => mount),\n        u.map(\n          ([\n            ,\n            [startOffset, endOffset],\n            totalCount,\n            sizes,\n            initialTopMostItemIndex,\n            scrolledToInitialItem,\n            topItemsIndexes,\n            firstItemIndex,\n            data,\n          ]) => {\n            const sizesValue = sizes\n            const { sizeTree, offsetTree } = sizesValue\n\n            if (totalCount === 0 || (startOffset === 0 && endOffset === 0)) {\n              return EMPTY_LIST_STATE\n            }\n\n            if (empty(sizeTree)) {\n              return buildListState(probeItemSet(initialTopMostItemIndex, sizesValue, data), [], totalCount, sizesValue, firstItemIndex)\n            }\n\n            const topItems = [] as Item<any>[]\n\n            if (topItemsIndexes.length > 0) {\n              const startIndex = topItemsIndexes[0]\n              const endIndex = topItemsIndexes[topItemsIndexes.length - 1]\n              let offset = 0\n              for (const range of rangesWithin(sizeTree, startIndex, endIndex)) {\n                const size = range.value\n                const rangeStartIndex = Math.max(range.start, startIndex)\n                const rangeEndIndex = Math.min(range.end, endIndex)\n                for (let i = rangeStartIndex; i <= rangeEndIndex; i++) {\n                  topItems.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size\n                }\n              }\n            }\n\n            // If the list hasn't scrolled to the initial item because the initial item was set,\n            // render empty list.\n            //\n            // This is a condition to be evaluated past the probe check, do not merge\n            // with the totalCount check above\n            if (!scrolledToInitialItem) {\n              return buildListState([], topItems, totalCount, sizesValue, firstItemIndex)\n            }\n\n            const minStartIndex = topItemsIndexes.length > 0 ? topItemsIndexes[topItemsIndexes.length - 1] + 1 : 0\n\n            const offsetPointRanges = rangesWithinOffsets(offsetTree, startOffset, endOffset, minStartIndex)\n            if (offsetPointRanges.length === 0) {\n              return null\n            }\n\n            const maxIndex = totalCount - 1\n\n            const items = u.tap([] as Item<any>[], (result) => {\n              for (const range of offsetPointRanges) {\n                const point = range.value\n                let offset = point.offset\n                let rangeStartIndex = range.start\n                const size = point.size\n\n                if (point.offset < startOffset) {\n                  rangeStartIndex += Math.floor((startOffset - point.offset) / size)\n                  offset += (rangeStartIndex - range.start) * size\n                }\n\n                if (rangeStartIndex < minStartIndex) {\n                  offset += (minStartIndex - rangeStartIndex) * size\n                  rangeStartIndex = minStartIndex\n                }\n\n                const endIndex = Math.min(range.end, maxIndex)\n\n                for (let i = rangeStartIndex; i <= endIndex; i++) {\n                  if (offset >= endOffset) {\n                    break\n                  }\n\n                  result.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size\n                }\n              }\n            })\n\n            return buildListState(items, topItems, totalCount, sizesValue, firstItemIndex)\n          }\n        ),\n        //@ts-expect-error filter needs to be fixed\n        u.filter((value) => value !== null),\n        u.distinctUntilChanged()\n      ),\n      EMPTY_LIST_STATE\n    )\n\n    u.connect(\n      u.pipe(\n        data,\n        u.filter((data) => data !== undefined),\n        u.map((data) => data!.length)\n      ),\n      totalCount\n    )\n\n    u.connect(u.pipe(listState, u.map(u.prop('topListHeight'))), topListHeight)\n    u.connect(topListHeight, rangeTopListHeight)\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => [state.top, state.bottom])\n      ),\n      listBoundary\n    )\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => state.items)\n      ),\n      itemsRendered\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount, data),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].originalIndex === totalCount - 1),\n        u.map(([, totalCount, data]) => [totalCount - 1, data] as [number, unknown[]]),\n        u.distinctUntilChanged(tupleComparator),\n        u.map(([count]) => count as number)\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.throttleTime(200),\n        u.filter(({ items, topItems }) => {\n          return items.length > 0 && items[0].originalIndex === topItems.length\n        }),\n        u.map(({ items }) => items[0].index),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index,\n          } as ListRange\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    return { listState, topItemsIndexes, endReached, startReached, rangeChanged, itemsRendered, ...stateFlags }\n  },\n  u.tup(\n    sizeSystem,\n    groupedListSystem,\n    sizeRangeSystem,\n    initialTopMostItemIndexSystem,\n    scrollToIndexSystem,\n    stateFlagsSystem,\n    propsReadySystem\n  ),\n  { singleton: true }\n)\n","export function simpleMemoize<T extends () => any>(func: T): T {\n  let called = false\n  let result: unknown\n\n  return (() => {\n    if (!called) {\n      called = true\n      result = func()\n    }\n    return result\n  }) as T\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem, buildListState } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { propsReadySystem } from './propsReadySystem'\n\nexport const initialItemCountSystem = u.system(\n  ([{ sizes, firstItemIndex, data }, { listState }, { didMount }]) => {\n    const initialItemCount = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.withLatestFrom(sizes, firstItemIndex, data),\n        u.map(([[, count], sizes, firstItemIndex, data = []]) => {\n          let includedGroupsCount = 0\n          if (sizes.groupIndices.length > 0) {\n            for (const index of sizes.groupIndices) {\n              if (index - includedGroupsCount >= count) {\n                break\n              }\n              includedGroupsCount++\n            }\n          }\n          const adjustedCount = count + includedGroupsCount\n          const items = Array.from({ length: adjustedCount }).map((_, index) => ({ index, size: 0, offset: 0, data: data[index] }))\n          return buildListState(items, [], adjustedCount, sizes, firstItemIndex)\n        })\n      ),\n      listState\n    )\n\n    return { initialItemCount }\n  },\n  u.tup(sizeSystem, listStateSystem, propsReadySystem),\n  { singleton: true }\n)\n","import { connect, system, map, pipe, statefulStream, tup, filter } from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\n\nexport const topItemCountSystem = system(([{ topItemsIndexes }]) => {\n  const topItemCount = statefulStream(0)\n\n  connect(\n    pipe(\n      topItemCount,\n      filter((length) => length > 0),\n      map((length) => Array.from({ length }).map((_, index) => index))\n    ),\n    topItemsIndexes\n  )\n  return { topItemCount }\n}, tup(listStateSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const totalListHeightSystem = u.system(\n  ([{ footerHeight, headerHeight }, { listState }]) => {\n    const totalListHeightChanged = u.stream<number>()\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(footerHeight, headerHeight, listState),\n        u.map(([footerHeight, headerHeight, listState]) => {\n          return footerHeight + headerHeight + listState.offsetBottom + listState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(u.duc(totalListHeight), totalListHeightChanged)\n\n    return { totalListHeight, totalListHeightChanged }\n  },\n  u.tup(domIOSystem, listStateSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { UP, stateFlagsSystem } from './stateFlagsSystem'\nimport { ListItem } from './interfaces'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\n/**\n * Fixes upward scrolling by calculating and compensation from changed item heights, using scrollBy.\n */\nexport const upwardScrollFixSystem = u.system(\n  ([\n    { scrollBy, scrollTop, deviation, scrollingInProgress },\n    { isScrolling, isAtBottom, scrollDirection },\n    { listState },\n    { beforeUnshiftWith, sizes },\n    { log },\n  ]) => {\n    const deviationOffset = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.scan(\n          ([, prevItems], { items }) => {\n            let newDev = 0\n            if (prevItems.length > 0 && items.length > 0) {\n              const firstItemIndex = items[0].originalIndex\n              const prevFirstItemIndex = prevItems[0].originalIndex\n              const atStart = firstItemIndex === 0 && prevFirstItemIndex === 0\n\n              if (!atStart) {\n                // Handles an item taller than the viewport\n                if (firstItemIndex === prevFirstItemIndex) {\n                  newDev = items[0].size - prevItems[0].size\n                } else {\n                  for (let index = items.length - 1; index >= 0; index--) {\n                    const item = items[index]\n\n                    const prevItem = prevItems.find((pItem) => pItem.originalIndex === item.originalIndex)\n\n                    if (!prevItem) {\n                      continue\n                    }\n\n                    if (item.offset !== prevItem.offset) {\n                      newDev = item.offset - prevItem.offset\n                      break\n                    }\n                  }\n                }\n              }\n            }\n            return [newDev, items] as [number, ListItem<any>[]]\n          },\n          [0, []] as [number, ListItem<any>[]]\n        ),\n        u.filter(([amount]) => amount !== 0),\n        u.withLatestFrom(scrollTop, scrollDirection, scrollingInProgress, log, isAtBottom),\n        u.filter(([[amount], scrollTop, scrollDirection, scrollingInProgress, , isAtBottom]) => {\n          return !scrollingInProgress && scrollTop !== 0 && scrollDirection === UP && (isAtBottom ? amount > 0 : true)\n        }),\n        u.map(([[amount], , , , log]) => {\n          log('Upward scrolling compensation', { amount }, LogLevel.DEBUG)\n          return amount\n        })\n      )\n    )\n\n    u.connect(\n      u.pipe(\n        deviationOffset,\n        u.withLatestFrom(deviation),\n        u.map(([amount, deviation]) => deviation - amount)\n      ),\n      deviation\n    )\n\n    // when the browser stops scrolling,\n    // restore the position and reset the glitching\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.statefulStreamFromEmitter(isScrolling, false), deviation),\n        u.filter(([is, deviation]) => !is && deviation !== 0),\n        u.map(([_, deviation]) => deviation),\n        u.throttleTime(1)\n      ),\n      (offset) => {\n        if (offset > 0) {\n          u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n          u.publish(deviation, 0)\n        } else {\n          u.publish(deviation, 0)\n          u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n        }\n      }\n    )\n\n    u.connect(\n      u.pipe(\n        beforeUnshiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([offset, { lastSize }]) => offset * lastSize)\n      ),\n      deviationOffset\n    )\n\n    return { deviation }\n  },\n  u.tup(domIOSystem, stateFlagsSystem, listStateSystem, sizeSystem, loggerSystem)\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const initialScrollTopSystem = u.system(\n  ([{ totalListHeight }, { didMount }, { scrollTo }]) => {\n    const initialScrollTop = u.statefulStream(0)\n\n    u.subscribe(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialScrollTop),\n        u.filter(([, offset]) => offset !== 0),\n        u.map(([, offset]) => ({ top: offset }))\n      ),\n      (location) => {\n        u.handleNext(\n          u.pipe(\n            totalListHeight,\n            u.filter((val) => val !== 0)\n          ),\n          () => {\n            setTimeout(() => {\n              u.publish(scrollTo, location)\n            })\n          }\n        )\n      }\n    )\n\n    return {\n      initialScrollTop,\n    }\n  },\n  u.tup(totalListHeightSystem, propsReadySystem, domIOSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const alignToBottomSystem = u.system(\n  ([{ viewportHeight }, { totalListHeight }]) => {\n    const alignToBottom = u.statefulStream(false)\n\n    const paddingTopAddition = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(alignToBottom, viewportHeight, totalListHeight),\n        u.filter(([enabled]) => enabled),\n        u.map(([, viewportHeight, totalListHeight]) => {\n          return Math.max(0, viewportHeight - totalListHeight)\n        }),\n        u.distinctUntilChanged()\n      ),\n      0\n    )\n\n    return { alignToBottom, paddingTopAddition }\n  },\n  u.tup(domIOSystem, totalListHeightSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromItemIndex, sizeSystem } from './sizeSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { listStateSystem } from './listStateSystem'\n\nexport interface ScrollIntoViewLocation {\n  index: number\n  behavior?: 'auto' | 'smooth'\n  done?: () => void\n}\n\nexport const scrollIntoViewSystem = u.system(\n  ([{ sizes, totalCount }, { scrollTop, viewportHeight, headerHeight, scrollingInProgress }, { scrollToIndex }]) => {\n    const scrollIntoView = u.stream<ScrollIntoViewLocation>()\n\n    u.connect(\n      u.pipe(\n        scrollIntoView,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, headerHeight, scrollTop),\n        u.map(([{ index, behavior = 'auto', done }, sizes, viewportHeight, totalCount, headerHeight, scrollTop]) => {\n          const lastIndex = totalCount - 1\n          let location = null\n          index = originalIndexFromItemIndex(index, sizes)\n          index = Math.max(0, index, Math.min(lastIndex, index))\n\n          const itemTop = offsetOf(index, sizes.offsetTree) + headerHeight\n          if (itemTop < scrollTop) {\n            location = { index, behavior, align: 'start' }\n          } else {\n            const itemBottom = itemTop + findMaxKeyValue(sizes.sizeTree, index)[1]!\n\n            if (itemBottom > scrollTop + viewportHeight) {\n              location = { index, behavior, align: 'end' }\n            }\n          }\n\n          if (location) {\n            done &&\n              u.handleNext(\n                u.pipe(\n                  scrollingInProgress,\n                  u.skip(1),\n                  u.filter((value) => value === false)\n                ),\n                done\n              )\n          } else {\n            done && done()\n          }\n\n          return location\n        }),\n        u.filter((value) => value !== null)\n      ),\n      scrollToIndex\n    )\n\n    return {\n      scrollIntoView,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, listStateSystem, loggerSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { followOutputSystem } from './followOutputSystem'\nimport { groupedListSystem } from './groupedListSystem'\nimport { initialItemCountSystem } from './initialItemCountSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { topItemCountSystem } from './topItemCountSystem'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { upwardScrollFixSystem } from './upwardScrollFixSystem'\nimport { initialScrollTopSystem } from './initialScrollTopSystem'\nimport { alignToBottomSystem } from './alignToBottomSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { scrollIntoViewSystem } from './scrollIntoViewSystem'\n\n// workaround the growing list of systems below\n// fix this with 4.1 recursive conditional types\nconst featureGroup1System = u.system(\n  ([\n    sizeRange,\n    initialItemCount,\n    propsReady,\n    scrollSeek,\n    totalListHeight,\n    initialScrollTopSystem,\n    alignToBottom,\n    windowScroller,\n    scrollIntoView,\n  ]) => {\n    return {\n      ...sizeRange,\n      ...initialItemCount,\n      ...propsReady,\n      ...scrollSeek,\n      ...totalListHeight,\n      ...initialScrollTopSystem,\n      ...alignToBottom,\n      ...windowScroller,\n      ...scrollIntoView,\n    }\n  },\n  u.tup(\n    sizeRangeSystem,\n    initialItemCountSystem,\n    propsReadySystem,\n    scrollSeekSystem,\n    totalListHeightSystem,\n    initialScrollTopSystem,\n    alignToBottomSystem,\n    windowScrollerSystem,\n    scrollIntoViewSystem\n  )\n)\n\nexport const listSystem = u.system(\n  ([\n    { totalCount, sizeRanges, fixedItemSize, defaultItemSize, trackItemSizes, itemSize, data, firstItemIndex, groupIndices },\n    { initialTopMostItemIndex, scrolledToInitialItem },\n    domIO,\n    followOutput,\n    { listState, topItemsIndexes, ...flags },\n    { scrollToIndex },\n    _,\n    { topItemCount },\n    { groupCounts },\n    featureGroup1,\n    log,\n  ]) => {\n    u.connect(flags.rangeChanged, featureGroup1.scrollSeekRangeChanged)\n    u.connect(u.pipe(featureGroup1.windowViewportRect, u.map(u.prop('visibleHeight'))), domIO.viewportHeight)\n\n    return {\n      // input\n      totalCount,\n      data,\n      firstItemIndex,\n      sizeRanges,\n      initialTopMostItemIndex,\n      scrolledToInitialItem,\n      topItemsIndexes,\n      topItemCount,\n      groupCounts,\n      fixedItemHeight: fixedItemSize,\n      defaultItemHeight: defaultItemSize,\n      ...followOutput,\n\n      // output\n      listState,\n      scrollToIndex,\n      trackItemSizes,\n      itemSize,\n      groupIndices,\n\n      // exported from stateFlagsSystem\n      ...flags,\n      // the bag of IO from featureGroup1System\n      ...featureGroup1,\n      ...domIO,\n      ...log,\n    }\n  },\n  u.tup(\n    sizeSystem,\n    initialTopMostItemIndexSystem,\n    domIOSystem,\n    followOutputSystem,\n    listStateSystem,\n    scrollToIndexSystem,\n    upwardScrollFixSystem,\n    topItemCountSystem,\n    groupedListSystem,\n    featureGroup1System,\n    loggerSystem\n  )\n)\n","import { simpleMemoize } from './simpleMemoize'\n\nconst WEBKIT_STICKY = '-webkit-sticky'\nconst STICKY = 'sticky'\n\nexport const positionStickyCssValue = simpleMemoize(() => {\n  if (typeof document === 'undefined') {\n    return STICKY\n  }\n  const node = document.createElement('div')\n  node.style.position = WEBKIT_STICKY\n  return node.style.position === WEBKIT_STICKY ? WEBKIT_STICKY : STICKY\n})\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\nimport {\n  compose,\n  connect,\n  getValue,\n  map,\n  pipe,\n  publish,\n  statefulStream,\n  stream,\n  Stream,\n  subscribe,\n  system,\n  tup,\n  withLatestFrom,\n  statefulStreamFromEmitter,\n  distinctUntilChanged,\n  noop,\n} from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, CSSProperties, FC } from 'react'\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect'\nimport useChangedListContentsSizes from './hooks/useChangedChildSizes'\nimport useScrollTop from './hooks/useScrollTop'\nimport useSize from './hooks/useSize'\nimport { Components, ComputeItemKey, GroupContent, GroupItemContent, ItemContent, ListRootProps } from './interfaces'\nimport { listSystem } from './listSystem'\nimport { positionStickyCssValue } from './utils/positionStickyCssValue'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { correctItemSize } from './utils/correctItemSize'\n\nexport function identity<T>(value: T) {\n  return value\n}\n\nconst listComponentPropsSystem = system(() => {\n  const itemContent = statefulStream<ItemContent<any> | GroupItemContent<any>>((index: number) => `Item ${index}`)\n  const groupContent = statefulStream<GroupContent>((index: number) => `Group ${index}`)\n  const components = statefulStream<Components>({})\n  const computeItemKey = statefulStream<ComputeItemKey<any>>(identity)\n  const headerFooterTag = statefulStream('div')\n  const scrollerRef = statefulStream<(ref: HTMLElement | Window | null) => void>(noop)\n\n  const distinctProp = <K extends keyof Components>(propName: K, defaultValue: Components[K] | null | 'div' = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components) => components[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    itemContent,\n    groupContent,\n    components,\n    computeItemKey,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp('Footer'),\n    HeaderComponent: distinctProp('Header'),\n    TopItemListComponent: distinctProp('TopItemList'),\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    GroupComponent: distinctProp('Group', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    EmptyPlaceholder: distinctProp('EmptyPlaceholder'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder'),\n  }\n})\n\nexport function addDeprecatedAlias<T>(prop: Stream<T>, message: string) {\n  const alias = stream<T>()\n  subscribe(alias, () =>\n    console.warn(`react-virtuoso: You are using a deprecated property. ${message}`, 'color: red;', 'color: inherit;', 'color: blue;')\n  )\n  connect(alias, prop)\n  return alias\n}\n\nconst combinedSystem = system(([listSystem, propsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(propsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    group: addDeprecatedAlias(propsSystem.groupContent, 'Rename the %cgroup%c prop to %cgroupContent.'),\n    topItems: addDeprecatedAlias(listSystem.topItemCount, 'Rename the %ctopItems%c prop to %ctopItemCount.'),\n    itemHeight: addDeprecatedAlias(listSystem.fixedItemHeight, 'Rename the %citemHeight%c prop to %cfixedItemHeight.'),\n    scrollingStateChange: addDeprecatedAlias(listSystem.isScrolling, 'Rename the %cscrollingStateChange%c prop to %cisScrolling.'),\n    adjustForPrependedItems: stream<any>(),\n    maxHeightCacheSize: stream<any>(),\n    footer: stream<any>(),\n    header: stream<any>(),\n    HeaderContainer: stream<any>(),\n    FooterContainer: stream<any>(),\n    ItemContainer: stream<any>(),\n    ScrollContainer: stream<any>(),\n    GroupContainer: stream<any>(),\n    ListContainer: stream<any>(),\n    emptyComponent: stream<any>(),\n    scrollSeek: stream<any>(),\n  }\n\n  subscribe(deprecatedProps.adjustForPrependedItems, () => {\n    console.warn(\n      `react-virtuoso: adjustForPrependedItems is no longer supported. Use the firstItemIndex property instead - https://virtuoso.dev/prepend-items.`,\n      'color: red;',\n      'color: inherit;',\n      'color: blue;'\n    )\n  })\n\n  subscribe(deprecatedProps.maxHeightCacheSize, () => {\n    console.warn(`react-virtuoso: maxHeightCacheSize is no longer necessary. Setting it has no effect - remove it from your code.`)\n  })\n\n  subscribe(deprecatedProps.HeaderContainer, () => {\n    console.warn(\n      `react-virtuoso: HeaderContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the header component and pass components.Header to change its contents.`\n    )\n  })\n\n  subscribe(deprecatedProps.FooterContainer, () => {\n    console.warn(\n      `react-virtuoso: FooterContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the footer component and pass components.Footer to change its contents.`\n    )\n  })\n\n  function deprecateComponentProp(stream: Stream<any>, componentName: string, propName: string) {\n    connect(\n      pipe(\n        stream,\n        withLatestFrom(propsSystem.components),\n        map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      propsSystem.components\n    )\n  }\n\n  subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    publish(propsSystem.components, { ...getValue(propsSystem.components), ScrollSeekPlaceholder: placeholder })\n    publish(listSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.footer, 'Footer', 'footer')\n  deprecateComponentProp(deprecatedProps.header, 'Header', 'header')\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n  deprecateComponentProp(deprecatedProps.emptyComponent, 'EmptyPlaceholder', 'emptyComponent')\n  deprecateComponentProp(deprecatedProps.GroupContainer, 'Group', 'GroupContainer')\n\n  return { ...listSystem, ...propsSystem, ...deprecatedProps }\n}, tup(listSystem, listComponentPropsSystem))\n\nconst DefaultScrollSeekPlaceholder = ({ height }: { height: number }) => <div style={{ height }}></div>\n\nconst GROUP_STYLE = { position: positionStickyCssValue(), zIndex: 1 }\n\nexport const Items = React.memo(function VirtuosoItems({ showTopList = false }: { showTopList?: boolean }) {\n  const listState = useEmitterValue('listState')\n  const deviation = useEmitterValue('deviation')\n  const sizeRanges = usePublisher('sizeRanges')\n  const scrollHeightCallback = usePublisher('scrollHeight')\n  const itemContent = useEmitterValue('itemContent')\n  const groupContent = useEmitterValue('groupContent')\n  const trackItemSizes = useEmitterValue('trackItemSizes')\n  const itemSize = useEmitterValue('itemSize')\n  const log = useEmitterValue('log')\n\n  const ref = useChangedListContentsSizes(sizeRanges, itemSize, trackItemSizes, showTopList ? noop : scrollHeightCallback, log)\n  const EmptyPlaceholder = useEmitterValue('EmptyPlaceholder')\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder') || DefaultScrollSeekPlaceholder\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const GroupComponent = useEmitterValue('GroupComponent')!\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const hasGroups = useEmitterValue('groupIndices').length > 0\n  const paddingTopAddition = useEmitterValue('paddingTopAddition')\n  const scrolledToInitialItem = useEmitterValue('scrolledToInitialItem')\n  const firstItemIndex = useEmitterValue('firstItemIndex')\n\n  // const calculatedHeight = listState.offsetBottom + listState.bottom\n  const containerStyle: CSSProperties = showTopList\n    ? {}\n    : {\n        boxSizing: 'border-box',\n        paddingTop: listState.offsetTop + paddingTopAddition,\n        paddingBottom: listState.offsetBottom,\n        marginTop: deviation,\n        // height: calculatedHeight,\n      }\n\n  if (!showTopList && listState.items.length === 0 && EmptyPlaceholder && scrolledToInitialItem) {\n    return createElement(EmptyPlaceholder)\n  }\n\n  return createElement(\n    ListComponent,\n    { ref, style: containerStyle, 'data-test-id': showTopList ? 'virtuoso-top-item-list' : 'virtuoso-item-list' },\n    (showTopList ? listState.topItems : listState.items).map((item) => {\n      const index = item.originalIndex!\n      const key = computeItemKey(index + firstItemIndex, item.data)\n\n      if (isSeeking) {\n        return createElement(ScrollSeekPlaceholder, { key, index: item.index, height: item.size })\n      }\n\n      if (item.type === 'group') {\n        return createElement(\n          GroupComponent,\n          {\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            style: GROUP_STYLE,\n          } as any,\n          groupContent(item.index)\n        )\n      } else {\n        return createElement(\n          ItemComponent,\n          {\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            'data-item-group-index': item.groupIndex,\n            style: { overflowAnchor: 'none' },\n          } as any,\n          hasGroups\n            ? (itemContent as GroupItemContent<any>)(item.index, item.groupIndex!, item.data)\n            : (itemContent as ItemContent<any>)(item.index, item.data)\n        )\n      }\n    })\n  )\n})\n\nexport const scrollerStyle: CSSProperties = {\n  height: '100%',\n  outline: 'none',\n  overflowY: 'auto',\n  position: 'relative',\n  WebkitOverflowScrolling: 'touch',\n}\n\nexport const viewportStyle: CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n  top: 0,\n}\n\nconst topItemListStyle: CSSProperties = {\n  width: '100%',\n  position: positionStickyCssValue(),\n  top: 0,\n}\n\nconst Header: FC = React.memo(function VirtuosoHeader() {\n  const Header = useEmitterValue('HeaderComponent')\n  const headerHeight = usePublisher('headerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => headerHeight(correctItemSize(el, 'height')))\n  return Header ? createElement(headerFooterTag, { ref }, createElement(Header)) : null\n})\n\nconst Footer: FC = React.memo(function VirtuosoFooter() {\n  const Footer = useEmitterValue('FooterComponent')\n  const footerHeight = usePublisher('footerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => footerHeight(correctItemSize(el, 'height')))\n  return Footer ? createElement(headerFooterTag, { ref }, createElement(Footer)) : null\n})\n\nexport interface Hooks {\n  usePublisher: typeof usePublisher\n  useEmitterValue: typeof useEmitterValue\n  useEmitter: typeof useEmitter\n}\n\nexport function buildScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: Components['Scroller'] = React.memo(function VirtuosoScroller({ style, children, ...props }) {\n    const scrollTopCallback = usePublisher('scrollTop')\n    const scrollHeightCallback = usePublisher('scrollHeight')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const scrollerRefCallback = useEmitterValue('scrollerRef')\n\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollTopCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      scrollerRefCallback,\n      scrollHeightCallback\n    )\n\n    useEmitter('scrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        ref: scrollerRef as React.MutableRefObject<HTMLDivElement | null>,\n        style: { ...scrollerStyle, ...style },\n        tabIndex: 0,\n        ...props,\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nexport function buildWindowScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: Components['Scroller'] = React.memo(function VirtuosoWindowScroller({ style, children, ...props }) {\n    const scrollTopCallback = usePublisher('windowScrollTop')\n    const scrollHeightCallback = usePublisher('scrollHeight')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const totalListHeight = useEmitterValue('totalListHeight')\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollTopCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      noop,\n      scrollHeightCallback\n    )\n\n    useIsomorphicLayoutEffect(() => {\n      scrollerRef.current = window\n      return () => {\n        scrollerRef.current = null\n      }\n    }, [scrollerRef])\n\n    useEmitter('windowScrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        style: { position: 'relative', ...style, ...(totalListHeight !== 0 ? { height: totalListHeight } : {}) },\n        ...props,\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nconst Viewport: FC = ({ children }) => {\n  const viewportHeight = usePublisher('viewportHeight')\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, 'height')))\n\n  return (\n    <div style={viewportStyle} ref={viewportRef}>\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle}>\n      {children}\n    </div>\n  )\n}\n\nconst TopItemListContainer: FC = ({ children }) => {\n  const TopItemList = useEmitterValue('TopItemListComponent')\n  const headerHeight = useEmitterValue('headerHeight')\n  const style = { ...topItemListStyle, marginTop: `${headerHeight}px` }\n  return createElement(TopItemList || 'div', { style }, children)\n}\n\nconst ListRoot: FC<ListRootProps> = React.memo(function VirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const showTopList = useEmitterValue('topItemsIndexes').length > 0\n  const TheScroller = useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = useWindowScroll ? WindowViewport : Viewport\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <Header />\n        <Items />\n        <Footer />\n      </TheViewport>\n      {showTopList && (\n        <TopItemListContainer>\n          <Items showTopList={true} />\n        </TopItemListContainer>\n      )}\n    </TheScroller>\n  )\n})\n\nexport type ListHandle = RefHandle<typeof List>\n\nexport const { Component: List, usePublisher, useEmitterValue, useEmitter } = systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      followOutput: 'followOutput',\n      firstItemIndex: 'firstItemIndex',\n      itemContent: 'itemContent',\n      groupContent: 'groupContent',\n      overscan: 'overscan',\n      increaseViewportBy: 'increaseViewportBy',\n      totalCount: 'totalCount',\n      topItemCount: 'topItemCount',\n      initialTopMostItemIndex: 'initialTopMostItemIndex',\n      components: 'components',\n      groupCounts: 'groupCounts',\n      atBottomThreshold: 'atBottomThreshold',\n      computeItemKey: 'computeItemKey',\n      defaultItemHeight: 'defaultItemHeight',\n      fixedItemHeight: 'fixedItemHeight',\n      itemSize: 'itemSize',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      headerFooterTag: 'headerFooterTag',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      initialScrollTop: 'initialScrollTop',\n      alignToBottom: 'alignToBottom',\n      useWindowScroll: 'useWindowScroll',\n      scrollerRef: 'scrollerRef',\n      logLevel: 'logLevel',\n\n      // deprecated\n      item: 'item',\n      group: 'group',\n      topItems: 'topItems',\n      itemHeight: 'itemHeight',\n      scrollingStateChange: 'scrollingStateChange',\n      maxHeightCacheSize: 'maxHeightCacheSize',\n      footer: 'footer',\n      header: 'header',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      GroupContainer: 'GroupContainer',\n      emptyComponent: 'emptyComponent',\n      HeaderContainer: 'HeaderContainer',\n      FooterContainer: 'FooterContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollToIndex: 'scrollToIndex',\n      scrollIntoView: 'scrollIntoView',\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      adjustForPrependedItems: 'adjustForPrependedItems',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n      totalListHeightChanged: 'totalListHeightChanged',\n      itemsRendered: 'itemsRendered',\n      groupIndices: 'groupIndices',\n    },\n  },\n  ListRoot\n)\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { Log, LogLevel } from '../loggerSystem'\nimport { SizeFunction, SizeRange } from '../sizeSystem'\nimport useSize from './useSize'\n\nexport default function useChangedListContentsSizes(\n  callback: (ranges: SizeRange[]) => void,\n  itemSize: SizeFunction,\n  enabled: boolean,\n  scrollHeightCallback: (height: number) => void,\n  log: Log\n) {\n  return useSize((el: HTMLElement) => {\n    const ranges = getChangedChildSizes(el.children, itemSize, 'offsetHeight', log)\n    const scrollableElement = el.parentElement!.parentElement!\n    scrollHeightCallback(scrollableElement.scrollHeight)\n    if (ranges !== null) {\n      callback(ranges)\n    }\n  }, enabled)\n}\n\nfunction getChangedChildSizes(children: HTMLCollection, itemSize: SizeFunction, field: 'offsetHeight' | 'offsetWidth', log: Log) {\n  const length = children.length\n\n  if (length === 0) {\n    return null\n  }\n\n  const results: SizeRange[] = []\n\n  for (let i = 0; i < length; i++) {\n    const child = children.item(i) as HTMLElement\n\n    if (!child || child.dataset.index === undefined) {\n      continue\n    }\n\n    const index = parseInt(child.dataset.index!)\n    const knownSize = parseFloat(child.dataset.knownSize!)\n    const size = itemSize(child, field)\n\n    if (size === 0) {\n      log('Zero-sized element, this should not happen', { child }, LogLevel.ERROR)\n    }\n\n    if (size === knownSize) {\n      continue\n    }\n\n    const lastResult = results[results.length - 1]\n    if (results.length === 0 || lastResult.size !== size || lastResult.endIndex !== index - 1) {\n      results.push({ startIndex: index, endIndex: index, size })\n    } else {\n      results[results.length - 1].endIndex++\n    }\n  }\n\n  return results\n}\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\n\nimport * as u from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, FC } from 'react'\nimport { gridSystem } from './gridSystem'\nimport useSize from './hooks/useSize'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { GridComponents, GridComputeItemKey, GridItemContent, GridRootProps } from './interfaces'\nimport { addDeprecatedAlias, buildScroller, buildWindowScroller, identity, viewportStyle } from './List'\n\nconst gridComponentPropsSystem = u.system(() => {\n  const itemContent = u.statefulStream<GridItemContent>((index) => `Item ${index}`)\n  const components = u.statefulStream<GridComponents>({})\n  const itemClassName = u.statefulStream('virtuoso-grid-item')\n  const listClassName = u.statefulStream('virtuoso-grid-list')\n  const computeItemKey = u.statefulStream<GridComputeItemKey>(identity)\n  const scrollerRef = u.statefulStream<(ref: HTMLElement | null) => void>(u.noop)\n\n  const distinctProp = <K extends keyof GridComponents>(propName: K, defaultValue: GridComponents[K] | null | 'div' = null) => {\n    return u.statefulStreamFromEmitter(\n      u.pipe(\n        components,\n        u.map((components) => components[propName]),\n        u.distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    itemContent,\n    components,\n    computeItemKey,\n    itemClassName,\n    listClassName,\n    scrollerRef,\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder', 'div'),\n  }\n})\n\nconst combinedSystem = u.system(([gridSystem, gridComponentPropsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(gridComponentPropsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    ItemContainer: u.stream<any>(),\n    ScrollContainer: u.stream<any>(),\n    ListContainer: u.stream<any>(),\n    emptyComponent: u.stream<any>(),\n    scrollSeek: u.stream<any>(),\n  }\n\n  function deprecateComponentProp(stream: u.Stream<any>, componentName: string, propName: string) {\n    u.connect(\n      u.pipe(\n        stream,\n        u.withLatestFrom(gridComponentPropsSystem.components),\n        u.map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      gridComponentPropsSystem.components\n    )\n  }\n\n  u.subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    u.publish(gridComponentPropsSystem.components, {\n      ...u.getValue(gridComponentPropsSystem.components),\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      ScrollSeekPlaceholder: placeholder,\n    })\n    u.publish(gridSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n\n  return { ...gridSystem, ...gridComponentPropsSystem, ...deprecatedProps }\n}, u.tup(gridSystem, gridComponentPropsSystem))\n\nconst GridItems: FC = React.memo(function GridItems() {\n  const gridState = useEmitterValue('gridState')\n  const listClassName = useEmitterValue('listClassName')\n  const itemClassName = useEmitterValue('itemClassName')\n  const itemContent = useEmitterValue('itemContent')\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const scrollHeightCallback = usePublisher('scrollHeight')\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder')!\n\n  const itemDimensions = usePublisher('itemDimensions')\n\n  const listRef = useSize((el) => {\n    const scrollHeight = el.parentElement!.parentElement!.scrollHeight\n    scrollHeightCallback(scrollHeight)\n    const firstItem = el.firstChild as HTMLElement\n    if (firstItem) {\n      itemDimensions(firstItem.getBoundingClientRect())\n    }\n  })\n\n  return createElement(\n    ListComponent,\n    { ref: listRef, className: listClassName, style: { paddingTop: gridState.offsetTop, paddingBottom: gridState.offsetBottom } },\n    gridState.items.map((item) => {\n      const key = computeItemKey(item.index)\n      return isSeeking\n        ? createElement(ScrollSeekPlaceholder, { key, index: item.index, height: gridState.itemHeight, width: gridState.itemWidth })\n        : createElement(ItemComponent, { className: itemClassName, 'data-index': item.index, key }, itemContent(item.index))\n    })\n  )\n})\n\nconst Viewport: FC = ({ children }) => {\n  const viewportDimensions = usePublisher('viewportDimensions')\n\n  const viewportRef = useSize((el) => {\n    viewportDimensions(el.getBoundingClientRect())\n  })\n\n  return (\n    <div style={viewportStyle} ref={viewportRef}>\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle}>\n      {children}\n    </div>\n  )\n}\n\nconst GridRoot: FC<GridRootProps> = React.memo(function GridRoot({ ...props }) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const TheScroller = useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = useWindowScroll ? WindowViewport : Viewport\n\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <GridItems />\n      </TheViewport>\n    </TheScroller>\n  )\n})\n\nconst { Component: Grid, usePublisher, useEmitterValue, useEmitter } = systemToComponent(\n  combinedSystem,\n  {\n    optional: {\n      totalCount: 'totalCount',\n      overscan: 'overscan',\n      itemContent: 'itemContent',\n      components: 'components',\n      computeItemKey: 'computeItemKey',\n      initialItemCount: 'initialItemCount',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      listClassName: 'listClassName',\n      itemClassName: 'itemClassName',\n      useWindowScroll: 'useWindowScroll',\n      scrollerRef: 'scrollerRef',\n\n      // deprecated\n      item: 'item',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      scrollToIndex: 'scrollToIndex',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n    },\n  },\n  GridRoot\n)\n\nexport type foo<T> = T extends React.ForwardRefExoticComponent<React.RefAttributes<infer Handle>> ? Handle : never\n\nexport type GridHandle = RefHandle<typeof Grid>\nexport { Grid }\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { ForwardRefExoticComponent, ReactElement, Ref } from 'react'\nimport { Grid, GridHandle } from './Grid'\n\nimport {\n  Components,\n  ComputeItemKey,\n  FollowOutput,\n  GridComponents,\n  GridComputeItemKey,\n  GridItemContent,\n  GroupContent,\n  GroupItemContent,\n  IndexLocationWithAlign,\n  ItemContent,\n  ListItem,\n  ListRange,\n  ScrollSeekConfiguration,\n} from './interfaces'\nimport { List, ListHandle } from './List'\nimport { ScrollIntoViewLocation } from './scrollIntoViewSystem'\ntype CompProps<T> = T extends ForwardRefExoticComponent<infer R> ? R : never\ntype ListProps = CompProps<typeof List>\ntype GridProps = CompProps<typeof Grid>\n\nexport interface VirtuosoProps<D> extends Omit<ListProps, 'groupCounts' | 'groupContent' | 'itemsRendered'> {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   * See the `increaseViewportBy` property for a similar behavior (equivalent to the `overscan` in `react-window`).\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * Set the increaseViewportBy property to artificially increase the viewport size, causing items to be rendered before outside of the viewport.\n   * The property causes the component to render more items than the necessary, but can help with slow loading content.\n   * Using `{ top?: number, bottom?: number }` lets you set the increase for each end separately.\n   */\n  increaseViewportBy?: number | { top: number; bottom: number }\n\n  /**\n   * Set the amount of items to remain fixed at the top of the list.\n   *\n   * For a header that scrolls away when scrolling, check the `components.Header` property.\n   */\n  topItemCount?: number\n\n  /**\n   * Set to a value between 0 and totalCount - 1 to make the list start scrolled to that item.\n   */\n  initialTopMostItemIndex?: number\n\n  /**\n   * Set this value to offset the initial location of the list.\n   * Warning: using this property will still run a render cycle at the scrollTop: 0 list window.\n   * If possible, avoid using it and stick to `initialTopMostItemIndex` instead.\n   */\n  initialScrollTop?: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: Components\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: ItemContent<D>\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: ComputeItemKey<D>\n\n  /**\n   * By default, the component assumes the default item height from the first rendered item (rendering it as a \"probe\").\n   *\n   * If the first item turns out to be an outlier (very short or tall), the rest of the rendering will be slower,\n   * as multiple passes of rendering should happen for the list to fill the viewport.\n   *\n   * Setting `defaultItemHeight` causes the component to skip the \"probe\" rendering and use the property\n   * value as default height instead.\n   */\n  defaultItemHeight?: number\n\n  /**\n   * Allows customizing the height/width calculation of `Item` elements.\n   *\n   * The default implementation reads `el.getBoundingClientRect().height` and `el.getBoundingClientRect().width`.\n   */\n  itemSize?: (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\n  /**\n   * Can be used to improve performance if the rendered items are of known size.\n   * Setting it causes the component to skip item measurements.\n   */\n  fixedItemHeight?: number\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * If set to `true`, the list automatically scrolls to bottom if the total count is changed.\n   * Set to `\"smooth\"` for an animated scrolling.\n   *\n   * By default, `followOutput` scrolls down only if the list is already at the bottom.\n   * To implement an arbitrary logic behind that, pass a function:\n   *\n   * ```tsx\n   * <Virtuoso\n   *  followOutput={(isAtBottom: boolean) => {\n   *    if (expression) {\n   *      return 'smooth' // can be 'auto' or false to avoid scrolling\n   *    } else {\n   *      return false\n   *    }\n   *  }} />\n   * ```\n   */\n  followOutput?: FollowOutput\n\n  /**\n   * Set to customize the wrapper tag for the header and footer components (default is `div`).\n   */\n  headerFooterTag?: string\n\n  /**\n   * Use when implementing inverse infinite scrolling - decrease the value this property\n   * in combination with  `data` or `totalCount` to prepend items to the top of the list.\n   *\n   * Warning: the firstItemIndex should **be a positive number**, based on the total amount of items to be displayed.\n   */\n  firstItemIndex?: number\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Called when the total list height is changed due to new items or viewport resize.\n   */\n  totalListHeightChanged?: (height: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  itemsRendered?: (items: ListItem<D>[]) => void\n\n  /**\n   * Setting `alignToBottom` to `true` aligns the items to the bottom of the list if the list is shorter than the viewport.\n   * Use `followOutput` property to keep the list aligned when new items are appended.\n   */\n  alignToBottom?: boolean\n\n  /**\n   * Uses the document scroller rather than wrapping the list in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | Window | null) => any\n\n  /**\n   * By default `4`. Redefine to change how much away from the bottom the scroller can be before the list is not considered not at bottom.\n   */\n  atBottomThreshold?: number\n}\n\nexport interface GroupedVirtuosoProps<D>\n  extends Omit<VirtuosoProps<D>, 'totalCount' | 'itemContent'>,\n    Pick<ListProps, 'groupCounts' | 'groupContent'> {\n  /**\n   * Specifies the amount of items in each group (and, actually, how many groups are there).\n   * For example, passing [20, 30] will display 2 groups with 20 and 30 items each.\n   */\n  groupCounts?: number[]\n\n  /**\n   * Specifies how each each group header gets rendered. The callback receives the zero-based index of the group.\n   */\n  groupContent?: GroupContent\n\n  /**\n   * Specifies how each each item gets rendered.\n   */\n  itemContent?: GroupItemContent<D>\n}\n\nexport interface VirtuosoGridProps extends GridProps {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount: number\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: GridItemContent\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: GridComponents\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: GridComputeItemKey\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | null) => any\n\n  /**\n   * Sets the className for the list DOM element\n   */\n  listClassName?: string\n\n  /**\n   * Sets the grid items' className\n   */\n  itemClassName?: string\n\n  /**\n   * Uses the document scroller rather than wrapping the grid in its own.\n   */\n  useWindowScroll?: boolean\n}\n\nexport interface VirtuosoHandle extends ListHandle {\n  /**\n   * Scrolls the component to the specified item index. See {{IndexLocationWithAlign}} for more options.\n   */\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  /**\n   * Scrolls the item into view if necessary. See [the website example](http://virtuoso.dev/keyboard-navigation/) for an implementation.\n   */\n  scrollIntoView(location: ScrollIntoViewLocation): void\n  /**\n   * Scrolls the component to the specified location. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollTo(location: ScrollToOptions): void\n  /**\n   * Scrolls the component with the specified amount. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface GroupedVirtuosoHandle extends ListHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface VirtuosoGridHandle extends GridHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport const Virtuoso = List as <D extends unknown = any>(props: VirtuosoProps<D> & { ref?: Ref<VirtuosoHandle> }) => ReactElement\nexport const GroupedVirtuoso = List as <D extends unknown = any>(\n  props: GroupedVirtuosoProps<D> & { ref?: Ref<GroupedVirtuosoHandle> }\n) => ReactElement\nexport const VirtuosoGrid = Grid as (props: VirtuosoGridProps & { ref?: Ref<VirtuosoGridHandle> }) => ReactElement\n"],"names":["tupleComparator","prev","current","rangeComparator","next","startIndex","endIndex","LogLevel","domIOSystem","u","scrollTop","deviation","smoothScrollTargetReached","statefulScrollTop","viewportHeight","scrollHeight","headerHeight","footerHeight","scrollTo","scrollBy","scrollingInProgress","singleton","CONSOLE_METHOD_MAP","DEBUG","INFO","WARN","ERROR","loggerSystem","logLevel","log","label","message","level","globalThis","window","console","propsReadySystem","propsReady","didMount","ready","value","getValue","tup","UP","INITIAL_BOTTOM_STATE","atBottom","notAtBottomBecause","state","offsetBottom","stateFlagsSystem","isAtBottom","isAtTop","atBottomStateChange","atTopStateChange","atBottomThreshold","isScrolling","top","atBottomState","setTimeout","scrollDirection","acc","direction","prevScrollTop","scrollSeekSystem","system","scrollVelocity","statefulStream","isSeeking","rangeChanged","stream","scrollSeekConfiguration","connect","pipe","filter","mapTo","throttleTime","withLatestFrom","scan","map","speed","config","range","enter","exit","distinctUntilChanged","subscribe","combineLatest","change","scrollSeekRangeChanged","NIL_NODE","lvl","newAANode","k","v","l","r","empty","node","newTree","remove","key","last","adjust","clone","deleteLast","findMaxKeyValue","field","Infinity","undefined","insert","split","skew","rebalance","walkWithin","start","end","result","concat","push","walk","args","isSingle","Error","rl","rlvl","rangesWithin","arrayToRanges","index","items","parser","length","i","nextIndex","nextValue","findIndexOfClosestSmallerOrEqual","comparator","Math","floor","match","join","findClosestSmallerOrEqual","correctItemSize","el","dimension","round","getBoundingClientRect","rangeIncludes","refRange","size","indexComparator","itemIndex","offsetComparator","offset","itemOffset","offsetPointParser","point","sizeStateReducer","ranges","groupIndices","sizeTree","offsetTree","newSizeTree","syncStart","groupSize","itemSize","reduce","tree","groupIndex","min","overlappingRanges","some","firstPassDone","shouldInsert","rangeStart","rangeEnd","rangeValue","insertRanges","prevIndex","prevSize","prevAOffset","startAIndex","arrayBinarySearch","kv","slice","aOffset","groupOffsetTree","offsetOf","lastIndex","lastOffset","lastSize","originalIndexFromItemIndex","sizes","hasGroups","groupOffset","SIZE_MAP","offsetHeight","offsetWidth","sizeSystem","sizeRanges","totalCount","unshiftWith","firstItemIndex","fixedItemSize","defaultItemSize","data","initial","indexes","idx","trackItemSizes","listRefresh","newSizes","changed","diff","val","beforeUnshiftWith","SUPPORTS_SCROLL_TO_OPTIONS","document","documentElement","style","normalizeIndexLocation","location","align","behavior","scrollToIndexSystem","scrollToIndex","topListHeight","unsubscribeNextListRefresh","cleartTimeoutRef","unsubscribeListRefresh","cleanup","clearTimeout","normalLocation","max","retry","listChanged","done","timeoutRef","getOverscan","overscan","main","reverse","getViewportIncrease","sizeRangeSystem","listBoundary","increaseViewportBy","visibleRange","listTop","listBottom","headerVisible","topViewportAddition","bottomViewportAddition","windowScrollerSystem","windowViewportRect","windowScrollTop","windowScrollTo","useWindowScroll","offsetTop","INITIAL_GRID_STATE","bottom","itemHeight","itemWidth","PROBE_GRID_STATE","ceil","hackFloor","buildItems","Array","from","_","gridSystem","stateFlags","scrollSeek","initialItemCount","gridState","viewportDimensions","height","width","itemDimensions","startOffset","endOffset","item","viewport","viewportWidth","perRow","gridLayout","endReached","startReached","itemTop","totalListHeight","viewportInfo","visibleWidth","visibleHeight","useSizeWithElRef","callback","enabled","ref","useRef","callbackRef","_el","ResizeObserver","observer","entries","element","target","offsetParent","elRef","observe","unobserve","useSize","useWindowViewportRectRef","calculateInfo","useCallback","rect","innerHeight","pageYOffset","windowEH","useEffect","addEventListener","removeEventListener","useIsomorphicLayoutEffect","useLayoutEffect","useScrollTop","scrollTopCallback","scrollerElement","scrollerRefCallback","scrollHeightCallback","scrollerRef","scrollTopTarget","handler","ev","localRef","passive","scrollByCallback","scrollToCallback","isSmooth","abs","initialTopMostItemIndexSystem","scrolledToInitialItem","initialTopMostItemIndex","normalizeFollowOutput","follow","followOutputSystem","followOutput","pendingScrollHandle","scrollToBottom","followOutputBehavior","shouldFollow","behaviorFromFollowOutput","refreshed","cancel","groupCountsToIndicesAndCount","counts","groupCount","groupedListSystem","groupCounts","topItemsIndexes","groupIndicesAndCount","streamFromEmitter","prop","EMPTY_LIST_STATE","topItems","transposeItems","originalIndex","transposedItems","groupRanges","currentRange","currentGroupIndex","shift","indexOf","type","buildListState","lastItem","func","called","listStateSystem","rangeTopListHeight","itemsRendered","listState","sizesValue","probeItemSet","rangeStartIndex","rangeEndIndex","minStartIndex","offsetPointRanges","endValue","rangesWithinOffsets","maxIndex","initialItemCountSystem","count","includedGroupsCount","adjustedCount","topItemCountSystem","topItemCount","totalListHeightSystem","totalListHeightChanged","upwardScrollFixSystem","deviationOffset","prevItems","newDev","prevFirstItemIndex","prevItem","find","pItem","amount","initialScrollTopSystem","initialScrollTop","alignToBottomSystem","alignToBottom","paddingTopAddition","scrollIntoViewSystem","scrollIntoView","featureGroup1System","listSystem","domIO","flags","featureGroup1","fixedItemHeight","defaultItemHeight","positionStickyCssValue","createElement","position","identity","listComponentPropsSystem","itemContent","groupContent","components","computeItemKey","headerFooterTag","noop","distinctProp","propName","defaultValue","statefulStreamFromEmitter","FooterComponent","HeaderComponent","TopItemListComponent","ListComponent","ItemComponent","GroupComponent","ScrollerComponent","EmptyPlaceholder","ScrollSeekPlaceholder","addDeprecatedAlias","alias","warn","combinedSystem","propsSystem","deprecatedProps","group","scrollingStateChange","adjustForPrependedItems","maxHeightCacheSize","footer","header","HeaderContainer","FooterContainer","ItemContainer","ScrollContainer","GroupContainer","ListContainer","emptyComponent","deprecateComponentProp","componentName","comp","placeholder","publish","DefaultScrollSeekPlaceholder","React","GROUP_STYLE","zIndex","Items","showTopList","useEmitterValue","usePublisher","children","results","child","dataset","parseInt","knownSize","parseFloat","lastResult","getChangedChildSizes","parentElement","useChangedListContentsSizes","containerStyle","boxSizing","paddingTop","paddingBottom","marginTop","data-test-id","data-index","data-known-size","data-item-index","data-item-group-index","overflowAnchor","scrollerStyle","outline","overflowY","WebkitOverflowScrolling","viewportStyle","topItemListStyle","Header","Footer","buildScroller","useEmitter","props","tabIndex","buildWindowScroller","Viewport","viewportRef","compose","WindowViewport","TopItemListContainer","TopItemList","ListRoot","TheViewport","WindowScroller","Scroller","systemToComponent","required","optional","methods","events","List","Component","gridComponentPropsSystem","itemClassName","listClassName","GridItems","listRef","firstItem","firstChild","className","GridRoot","Grid","Virtuoso","VirtuosoGrid"],"mappings":"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"}
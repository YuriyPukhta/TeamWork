{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\QQMerged\\\\ClientApp\\\\src\\\\components\\\\GeneralQueue.jsx\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Cookies from 'js-cookie';\nimport { Virtuoso } from 'react-virtuoso';\nimport CustomScrollbar from \"./CustomScroller\";\nimport \"overlayscrollbars/css/OverlayScrollbars.css\";\nimport './GeneralQueue.scss';\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport { AppContext } from './AppContext.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class GeneralQueue extends Component {\n  constructor(props) {\n    super(props);\n    this.intervalID = 0;\n    this.state = {\n      qname: \"\",\n      queue: [],\n      qonline: true,\n      loading: true,\n      id: this.props.match.params.id,\n      isOdmen: false,\n      redirect: false,\n      clicker: 0\n    };\n    this.handleNext = this.handleNext.bind(this);\n    this.click = this.click.bind(this);\n    this.handleFreeze = this.handleFreeze.bind(this);\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => {\n      this.qupdate();\n    }, 3000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  async handleNext() {\n    console.log(\"next\");\n\n    if (this.state.isOdmen) {\n      const token = \"Bearer \" + Cookies.get('JWT');\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Authorization': token\n        }\n      };\n      const response = await fetch(`/queue/${this.state.id}/moder/next`, requestOptions);\n\n      if (response.ok) {\n        this.qupdate();\n      }\n    } else {\n      this.setState({\n        redirect: true\n      });\n    }\n  }\n\n  async handleFreeze() {\n    if (this.state.isOdmen) {\n      const token = \"Bearer \" + Cookies.get('JWT');\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Authorization': token\n        }\n      };\n\n      if (this.state.qonline) {\n        const response = await fetch(`/queue/${this.state.id}/moder/close`, requestOptions);\n      } else {\n        const response = await fetch(`/queue/${this.state.id}/moder/open`, requestOptions);\n      }\n      /*close/open*/\n\n\n      if (response.ok) {\n        this.qupdate();\n      }\n    } else {\n      this.setState({\n        redirect: true\n      });\n    }\n  }\n\n  async qupdate() {\n    if (this.context[\"auth\"]) {\n      const token = \"Bearer \" + Cookies.get('JWT');\n      const qrequestOptions = {\n        method: 'GET',\n        headers: {\n          'Authorization': token\n        }\n      };\n      const qownresp = await fetch(`IOwner/${this.state.id}`, qrequestOptions);\n\n      if (qownresp.ok) {\n        const qown = await qownresp.json();\n        this.setState({\n          isOdmen: qown\n        });\n      }\n\n      const qresponse = await fetch(`event/${this.state.id}`, qrequestOptions);\n\n      if (qresponse.ok) {\n        const qdata = await qresponse.json();\n        this.setState({\n          qname: qdata[\"title\"],\n          qonline: !qdata[\"isSuspended\"]\n        });\n      }\n\n      const qlistresponse = await fetch(`get_queue/${this.state.id}`, qrequestOptions);\n\n      if (qlistresponse.ok) {\n        const qlist = await qlistresponse.json();\n        this.setState({\n          queue: qlist,\n          loading: false\n        });\n      }\n    } else {\n      this.setState({\n        redirect: true\n      });\n    }\n  }\n\n  alert() {\n    alert('Button clicked');\n  }\n\n  click() {\n    this.setState({\n      clicker: this.state.clicker + 1\n    });\n  }\n\n  async qgen() {\n    for (var i = 10; i < 100; i++) {\n      const username = \"user\" + i;\n      const email = username + \"@gmail.com\";\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"email\": email,\n          \"username\": username,\n          \"password\": \"11111111\",\n          \"phoneNumber\": \"11111111\"\n        })\n      };\n      const response1 = await fetch('/register', requestOptions);\n      const response2 = await fetch('/login', requestOptions);\n      const token = await response2.text();\n      const token2 = \"Bearer \" + token;\n      const requestOptions2 = {\n        method: 'POST',\n        headers: {\n          'Authorization': token2\n        }\n      };\n      const response3 = await fetch('/queue/enter/6', requestOptions2);\n      console.log(response3);\n    }\n  }\n\n  render() {\n    let queue = this.state.queue;\n    let qname = this.state.qname;\n    let qsize = this.state.queue.length;\n    let qid = this.state.id;\n    let clicker = this.state.clicker;\n    let isOdmen = this.state.isOdmen;\n    let qstate = this.state.qonline;\n\n    const Button1 = () => {\n      if (isOdmen) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"next_button\",\n          onClick: this.handleNext,\n          children: \"NEXT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 24\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"join_button\",\n          onClick: this.alert,\n          children: \"JOIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 24\n        }, this);\n      }\n    };\n\n    const Button2 = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ppl_inqueue\",\n        children: qsize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 20\n      }, this);\n    };\n\n    const Button3 = () => {\n      if (isOdmen) {\n        if (qstate) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"freeze_button\",\n            onClick: this.handleFreeze,\n            children: [\"Freeze\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 93\n            }, this), \"queue\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 28\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: \"#CCCCCC\"\n            },\n            className: \"freeze_button\",\n            onClick: this.handleFreeze,\n            children: [\"Freeze\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 130\n            }, this), \"queue\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 28\n          }, this);\n        }\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"your_place\",\n          onClick: this.alert,\n          children: [\"0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 74\n          }, this), \"Your place\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 24\n        }, this);\n      }\n    };\n\n    const Button4 = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clicker\",\n        onClick: this.click,\n        children: [clicker, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 75\n        }, this), \"Click!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 20\n      }, this);\n    };\n\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        push: true,\n        to: `/`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_block\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"queue_name\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              style: {\n                width: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xs: \"9\",\n                children: qname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: \"3\",\n                className: \"col3_custom\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    backgroundColor: qstate ? \"#82FF9D\" : \"#CCCCCC\"\n                  },\n                  className: \"queue_state\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"queue_edit_button\",\n                  onClick: this.alert\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"queue_block\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: \"8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"queue\",\n              children: /*#__PURE__*/_jsxDEV(Virtuoso, {\n                components: {\n                  Scroller: CustomScrollbar\n                },\n                className: \"QList\",\n                data: queue,\n                itemContent: (index, Queue) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"QItem\",\n                  style: {\n                    backgroundColor: index == 0 ? \"#82FF9D\" : \"white\"\n                  },\n                  children: Queue.user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 68\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"buttons\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                className: \"button\",\n                children: Button1()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                className: \"button\",\n                children: Button2()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                className: \"button\",\n                children: Button3()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                className: \"button\",\n                children: Button4()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nGeneralQueue.displayName = GeneralQueue.name;\nGeneralQueue.contextType = AppContext;\nexport default _c = withRouter(GeneralQueue);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/project/QQMerged/ClientApp/src/components/GeneralQueue.jsx"],"names":["React","Component","Container","Row","Col","Cookies","Virtuoso","CustomScrollbar","Link","Redirect","withRouter","AppContext","GeneralQueue","constructor","props","intervalID","state","qname","queue","qonline","loading","id","match","params","isOdmen","redirect","clicker","handleNext","bind","click","handleFreeze","componentDidMount","setInterval","qupdate","componentWillUnmount","clearInterval","console","log","token","get","requestOptions","method","headers","response","fetch","ok","setState","context","qrequestOptions","qownresp","qown","json","qresponse","qdata","qlistresponse","qlist","alert","qgen","i","username","email","body","JSON","stringify","response1","response2","text","token2","requestOptions2","response3","render","qsize","length","qid","qstate","Button1","Button2","Button3","backgroundColor","Button4","width","Scroller","index","Queue","user","displayName","name","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Row, Col} from 'reactstrap';\r\nimport Cookies from 'js-cookie'\r\nimport { Virtuoso } from 'react-virtuoso';\r\nimport CustomScrollbar from \"./CustomScroller\";\r\nimport \"overlayscrollbars/css/OverlayScrollbars.css\";\r\nimport './GeneralQueue.scss';\r\nimport {Link, Redirect, withRouter} from \"react-router-dom\";\r\nimport {AppContext} from './AppContext.jsx';\r\n\r\nexport class GeneralQueue extends Component {\r\n    static displayName = GeneralQueue.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.intervalID = 0;\r\n        this.state = { qname: \"\", queue: [], qonline: true, loading: true, id: this.props.match.params.id, isOdmen: false, redirect: false, clicker: 0};\r\n\r\n        this.handleNext = this.handleNext.bind(this);\r\n        this.click = this.click.bind(this);\r\n        this.handleFreeze = this.handleFreeze.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.intervalID = setInterval(() => { this.qupdate(); }, 3000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n    async handleNext() {\r\n        console.log(\"next\");\r\n        if (this.state.isOdmen) {\r\n\r\n            const token = \"Bearer \" + Cookies.get('JWT');\r\n            const requestOptions = {\r\n                method: 'PUT',\r\n                headers: { 'Authorization': token }\r\n            };\r\n\r\n            const response = await fetch(`/queue/${this.state.id}/moder/next`, requestOptions);\r\n\r\n            if (response.ok) {\r\n                this.qupdate();\r\n            }\r\n        }\r\n        else {\r\n            this.setState({ redirect: true });\r\n        }\r\n    }\r\n\r\n\r\n    async handleFreeze() {\r\n        if (this.state.isOdmen) {\r\n            const token = \"Bearer \" + Cookies.get('JWT');\r\n            const requestOptions = {\r\n                method: 'PUT',\r\n                headers: { 'Authorization': token }\r\n            };\r\n\r\n            if (this.state.qonline) {\r\n                const response = await fetch(`/queue/${this.state.id}/moder/close`, requestOptions);\r\n            } else {\r\n                const response = await fetch(`/queue/${this.state.id}/moder/open`, requestOptions);\r\n            }\r\n\r\n            /*close/open*/\r\n            if (response.ok) {\r\n                this.qupdate();\r\n            }\r\n        }\r\n        else {\r\n            this.setState({ redirect: true });\r\n        }\r\n    }\r\n\r\n\r\n    async qupdate() {\r\n        if (this.context[\"auth\"]) {\r\n            const token = \"Bearer \" + Cookies.get('JWT');\r\n\r\n            const qrequestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Authorization': token }\r\n            };\r\n\r\n            const qownresp = await fetch(`IOwner/${this.state.id}`, qrequestOptions);\r\n            if (qownresp.ok) {\r\n                const qown = await qownresp.json();\r\n                this.setState({ isOdmen: qown });\r\n            }\r\n\r\n            const qresponse = await fetch(`event/${this.state.id}`, qrequestOptions);\r\n            if (qresponse.ok) {\r\n                const qdata = await qresponse.json();\r\n                this.setState({ qname: qdata[\"title\"], qonline: !qdata[\"isSuspended\"] });\r\n            }\r\n\r\n            const qlistresponse = await fetch(`get_queue/${this.state.id}`, qrequestOptions);\r\n            if (qlistresponse.ok) {\r\n                const qlist = await qlistresponse.json();\r\n                this.setState({ queue: qlist, loading: false });\r\n            }\r\n        }\r\n        else {\r\n            this.setState({ redirect: true });\r\n        }\r\n    }\r\n\r\n    alert() {\r\n        alert('Button clicked');\r\n    }\r\n\r\n    click() {\r\n        this.setState({ clicker: this.state.clicker + 1 });\r\n    }\r\n\r\n\r\n    async qgen() {\r\n        for (var i = 10; i < 100; i++) {\r\n            const username = \"user\" + i;\r\n            const email = username + \"@gmail.com\"\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(\r\n                    {\r\n                        \"email\": email,\r\n                        \"username\": username,\r\n                        \"password\": \"11111111\",\r\n                        \"phoneNumber\": \"11111111\"\r\n                    })\r\n            };\r\n\r\n            const response1 = await fetch('/register', requestOptions)\r\n            const response2 = await fetch('/login', requestOptions)\r\n            const token = await response2.text();\r\n            const token2 = \"Bearer \" + token;\r\n            const requestOptions2 = {\r\n                method: 'POST',\r\n                headers: { 'Authorization': token2 }\r\n            };\r\n\r\n            const response3 = await fetch('/queue/enter/6', requestOptions2)\r\n            console.log(response3);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let queue = this.state.queue\r\n        let qname = this.state.qname\r\n        let qsize = this.state.queue.length\r\n        let qid = this.state.id\r\n        let clicker = this.state.clicker\r\n        let isOdmen = this.state.isOdmen;\r\n        let qstate = this.state.qonline;\r\n\r\n        const Button1 = () => {\r\n            if ( isOdmen ) {\r\n                return <div className=\"next_button\" onClick={this.handleNext}>NEXT</div>;\r\n            } else {\r\n                return <div className=\"join_button\" onClick={this.alert}>JOIN</div>;\r\n            }\r\n        }\r\n\r\n        const Button2 = () => {\r\n            return <div className=\"ppl_inqueue\">{qsize}</div>;\r\n        }\r\n\r\n        const Button3 = () => {\r\n            if (isOdmen) {\r\n                if (qstate) {\r\n                    return <div className=\"freeze_button\" onClick={this.handleFreeze}>Freeze<br />queue</div>;\r\n                } else {\r\n                    return <div style={{backgroundColor: \"#CCCCCC\"}} className=\"freeze_button\" onClick={this.handleFreeze}>Freeze<br />queue</div>;\r\n                }\r\n            } else {\r\n                return <div className=\"your_place\" onClick={this.alert}>0<br />Your place</div>;\r\n            }\r\n        }\r\n\r\n        const Button4 = () => {\r\n            return <div className=\"clicker\" onClick={this.click}>{clicker}<br />Click!</div>;\r\n        }\r\n\r\n\r\n        if (this.state.redirect) {\r\n            return (<Redirect push to={`/`} />);\r\n        }\r\n\r\n        return (\r\n            <Container fluid>\r\n                <div className=\"main_block\">\r\n                    <Row>\r\n                        <div className=\"queue_name\">\r\n                            <Row style={{width:\"100%\"}}>\r\n                                <Col xs=\"9\">\r\n                                    {qname}\r\n                                </Col>\r\n                                <Col xs=\"3\" className=\"col3_custom\">\r\n                                    <div style={{backgroundColor: qstate ? \"#82FF9D\":\"#CCCCCC\"}} className=\"queue_state\"></div>\r\n                                    <div className=\"queue_edit_button\" onClick={this.alert}></div>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Row>\r\n\r\n                    <Row className=\"queue_block\">\r\n                        <Col sm=\"8\">\r\n                            <div className=\"queue\">\r\n                                <Virtuoso\r\n                                    components={{Scroller: CustomScrollbar}}\r\n                                    className=\"QList\"\r\n                                    data={queue}\r\n                                    itemContent={(index, Queue) => <div className=\"QItem\" style={{backgroundColor: index == 0? \"#82FF9D\":\"white\"}}>{Queue.user}</div>}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n\r\n                        <Col sm=\"4\">\r\n                            <Row className=\"buttons\">\r\n                                <Col sm=\"6\" className=\"button\">\r\n                                    {Button1()}\r\n                                </Col>\r\n                                <Col sm=\"6\" className=\"button\">\r\n                                    {Button2()}\r\n                                </Col>\r\n                                <Col sm=\"6\" className=\"button\">\r\n                                    {Button3()}\r\n                                </Col>\r\n                                <Col sm=\"6\" className=\"button\">\r\n                                    {Button4()}\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nGeneralQueue.contextType = AppContext;\r\nexport default withRouter(GeneralQueue);"]},"metadata":{},"sourceType":"module"}
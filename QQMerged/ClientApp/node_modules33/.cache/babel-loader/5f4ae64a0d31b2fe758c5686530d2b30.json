{"ast":null,"code":"/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) define(function () {\n    return factory(global, global.document, undefined);\n  });else if (typeof module === 'object' && typeof module.exports === 'object') module.exports = factory(global, global.document, undefined);else factory(global, global.document, undefined);\n})(typeof window !== 'undefined' ? window : this, function (window, document, undefined) {\n  'use strict';\n\n  var PLUGINNAME = 'OverlayScrollbars';\n  var TYPES = {\n    o: 'object',\n    f: 'function',\n    a: 'array',\n    s: 'string',\n    b: 'boolean',\n    n: 'number',\n    u: 'undefined',\n    z: 'null' //d : 'date',\n    //e : 'error',\n    //r : 'regexp',\n    //y : 'symbol'\n\n  };\n  var LEXICON = {\n    c: 'class',\n    s: 'style',\n    i: 'id',\n    l: 'length',\n    p: 'prototype',\n    ti: 'tabindex',\n    oH: 'offsetHeight',\n    cH: 'clientHeight',\n    sH: 'scrollHeight',\n    oW: 'offsetWidth',\n    cW: 'clientWidth',\n    sW: 'scrollWidth',\n    hOP: 'hasOwnProperty',\n    bCR: 'getBoundingClientRect'\n  };\n\n  var VENDORS = function () {\n    //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n    var jsCache = {};\n    var cssCache = {};\n    var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\n    var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\n\n    function firstLetterToUpper(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n    return {\n      _cssPrefixes: cssPrefixes,\n      _jsPrefixes: jsPrefixes,\n      _cssProperty: function (name) {\n        var result = cssCache[name];\n        if (cssCache[LEXICON.hOP](name)) return result;\n        var uppercasedName = firstLetterToUpper(name);\n        var elmStyle = document.createElement('div')[LEXICON.s];\n        var resultPossibilities;\n        var i = 0;\n        var v;\n        var currVendorWithoutDashes;\n\n        for (; i < cssPrefixes.length; i++) {\n          currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\n          resultPossibilities = [name, //transition\n          cssPrefixes[i] + name, //-webkit-transition\n          currVendorWithoutDashes + uppercasedName, //webkitTransition\n          firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\n          ];\n\n          for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\n            if (elmStyle[resultPossibilities[v]] !== undefined) {\n              result = resultPossibilities[v];\n              break;\n            }\n          }\n        }\n\n        cssCache[name] = result;\n        return result;\n      },\n      _cssPropertyValue: function (property, values, suffix) {\n        var name = property + ' ' + values;\n        var result = cssCache[name];\n        if (cssCache[LEXICON.hOP](name)) return result;\n        var dummyStyle = document.createElement('div')[LEXICON.s];\n        var possbleValues = values.split(' ');\n        var preparedSuffix = suffix || '';\n        var i = 0;\n        var v = -1;\n        var prop;\n\n        for (; i < possbleValues[LEXICON.l]; i++) {\n          for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\n            prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\n            dummyStyle.cssText = property + ':' + prop + preparedSuffix;\n\n            if (dummyStyle[LEXICON.l]) {\n              result = prop;\n              break;\n            }\n          }\n        }\n\n        cssCache[name] = result;\n        return result;\n      },\n      _jsAPI: function (name, isInterface, fallback) {\n        var i = 0;\n        var result = jsCache[name];\n\n        if (!jsCache[LEXICON.hOP](name)) {\n          result = window[name];\n\n          for (; i < jsPrefixes[LEXICON.l]; i++) result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\n\n          jsCache[name] = result;\n        }\n\n        return result || fallback;\n      }\n    };\n  }();\n\n  var COMPATIBILITY = function () {\n    function windowSize(x) {\n      return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\n    }\n\n    function bind(func, thisObj) {\n      if (typeof func != TYPES.f) {\n        throw \"Can't bind function!\"; // closest thing possible to the ECMAScript 5\n        // internal IsCallable function\n        //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n      }\n\n      var proto = LEXICON.p;\n      var aArgs = Array[proto].slice.call(arguments, 2);\n\n      var fNOP = function () {};\n\n      var fBound = function () {\n        return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));\n      };\n\n      if (func[proto]) fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\n\n      fBound[proto] = new fNOP();\n      return fBound;\n    }\n\n    return {\n      /**\r\n       * Gets the current window width.\r\n       * @returns {Number|number} The current window width in pixel.\r\n       */\n      wW: bind(windowSize, 0, true),\n\n      /**\r\n       * Gets the current window height.\r\n       * @returns {Number|number} The current window height in pixel.\r\n       */\n      wH: bind(windowSize, 0),\n\n      /**\r\n       * Gets the MutationObserver Object or undefined if not supported.\r\n       * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n       */\n      mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\n\n      /**\r\n       * Gets the ResizeObserver Object or undefined if not supported.\r\n       * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n       */\n      rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\n\n      /**\r\n       * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n       * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n       */\n      rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) {\n        return window.setTimeout(func, 1000 / 60);\n      }),\n\n      /**\r\n       * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n       * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n       */\n      cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) {\n        return window.clearTimeout(id);\n      }),\n\n      /**\r\n       * Gets the current time.\r\n       * @returns {number} The current time.\r\n       */\n      now: function () {\n        return Date.now && Date.now() || new Date().getTime();\n      },\n\n      /**\r\n       * Stops the propagation of the given event.\r\n       * @param event The event of which the propagation shall be stoped.\r\n       */\n      stpP: function (event) {\n        if (event.stopPropagation) event.stopPropagation();else event.cancelBubble = true;\n      },\n\n      /**\r\n       * Prevents the default action of the given event.\r\n       * @param event The event of which the default action shall be prevented.\r\n       */\n      prvD: function (event) {\n        if (event.preventDefault && event.cancelable) event.preventDefault();else event.returnValue = false;\n      },\n\n      /**\r\n       * Gets the pageX and pageY values of the given mouse event.\r\n       * @param event The mouse event of which the pageX and pageX shall be got.\r\n       * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n       */\n      page: function (event) {\n        event = event.originalEvent || event;\n        var strPage = 'page';\n        var strClient = 'client';\n        var strX = 'X';\n        var strY = 'Y';\n        var target = event.target || event.srcElement || document;\n        var eventDoc = target.ownerDocument || document;\n        var doc = eventDoc.documentElement;\n        var body = eventDoc.body; //if touch event return return pageX/Y of it\n\n        if (event.touches !== undefined) {\n          var touch = event.touches[0];\n          return {\n            x: touch[strPage + strX],\n            y: touch[strPage + strY]\n          };\n        } // Calculate pageX/Y if not native supported\n\n\n        if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\n          return {\n            x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),\n            y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)\n          };\n        }\n\n        return {\n          x: event[strPage + strX],\n          y: event[strPage + strY]\n        };\n      },\n\n      /**\r\n       * Gets the clicked mouse button of the given mouse event.\r\n       * @param event The mouse event of which the clicked button shal be got.\r\n       * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n       */\n      mBtn: function (event) {\n        var button = event.button;\n        if (!event.which && button !== undefined) return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;else return event.which;\n      },\n\n      /**\r\n       * Checks whether a item is in the given array and returns its index.\r\n       * @param item The item of which the position in the array shall be determined.\r\n       * @param arr The array.\r\n       * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n       */\n      inA: function (item, arr) {\n        for (var i = 0; i < arr[LEXICON.l]; i++) //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\n        try {\n          if (arr[i] === item) return i;\n        } catch (e) {}\n\n        return -1;\n      },\n\n      /**\r\n       * Returns true if the given value is a array.\r\n       * @param arr The potential array.\r\n       * @returns {boolean} True if the given value is a array, false otherwise.\r\n       */\n      isA: function (arr) {\n        var def = Array.isArray;\n        return def ? def(arr) : this.type(arr) == TYPES.a;\n      },\n\n      /**\r\n       * Determine the internal JavaScript [[Class]] of the given object.\r\n       * @param obj The object of which the type shall be determined.\r\n       * @returns {string} The type of the given object.\r\n       */\n      type: function (obj) {\n        if (obj === undefined) return obj + '';\n        if (obj === null) return obj + '';\n        return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n      },\n      bind: bind\n      /**\r\n       * Gets the vendor-prefixed CSS property by the given name.\r\n       * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n       * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n       * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n       * @param propName The unprefixed CSS property name.\r\n       * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n        cssProp: function(propName) {\r\n          return VENDORS._cssProperty(propName);\r\n      }\r\n      */\n\n    };\n  }();\n\n  var MATH = Math;\n  var JQUERY = window.jQuery;\n\n  var EASING = function () {\n    var _easingsMath = {\n      p: MATH.PI,\n      c: MATH.cos,\n      s: MATH.sin,\n      w: MATH.pow,\n      t: MATH.sqrt,\n      n: MATH.asin,\n      a: MATH.abs,\n      o: 1.70158\n    };\n    /*\r\n     x : current percent (0 - 1),\r\n     t : current time (duration * percent),\r\n     b : start value (from),\r\n     c : end value (to),\r\n     d : duration\r\n       easingName : function(x, t, b, c, d) { return easedValue; }\r\n     */\n\n    return {\n      swing: function (x, t, b, c, d) {\n        return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\n      },\n      linear: function (x, t, b, c, d) {\n        return x;\n      },\n      easeInQuad: function (x, t, b, c, d) {\n        return c * (t /= d) * t + b;\n      },\n      easeOutQuad: function (x, t, b, c, d) {\n        return -c * (t /= d) * (t - 2) + b;\n      },\n      easeInOutQuad: function (x, t, b, c, d) {\n        return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;\n      },\n      easeInCubic: function (x, t, b, c, d) {\n        return c * (t /= d) * t * t + b;\n      },\n      easeOutCubic: function (x, t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t + 1) + b;\n      },\n      easeInOutCubic: function (x, t, b, c, d) {\n        return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\n      },\n      easeInQuart: function (x, t, b, c, d) {\n        return c * (t /= d) * t * t * t + b;\n      },\n      easeOutQuart: function (x, t, b, c, d) {\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n      },\n      easeInOutQuart: function (x, t, b, c, d) {\n        return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n      },\n      easeInQuint: function (x, t, b, c, d) {\n        return c * (t /= d) * t * t * t * t + b;\n      },\n      easeOutQuint: function (x, t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n      },\n      easeInOutQuint: function (x, t, b, c, d) {\n        return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n      },\n      easeInSine: function (x, t, b, c, d) {\n        return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\n      },\n      easeOutSine: function (x, t, b, c, d) {\n        return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\n      },\n      easeInOutSine: function (x, t, b, c, d) {\n        return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\n      },\n      easeInExpo: function (x, t, b, c, d) {\n        return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\n      },\n      easeOutExpo: function (x, t, b, c, d) {\n        return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\n      },\n      easeInOutExpo: function (x, t, b, c, d) {\n        if (t == 0) return b;\n        if (t == d) return b + c;\n        if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\n        return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\n      },\n      easeInCirc: function (x, t, b, c, d) {\n        return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\n      },\n      easeOutCirc: function (x, t, b, c, d) {\n        return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\n      },\n      easeInOutCirc: function (x, t, b, c, d) {\n        return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\n      },\n      easeInElastic: function (x, t, b, c, d) {\n        var s = _easingsMath.o;\n        var p = 0;\n        var a = c;\n        if (t == 0) return b;\n        if ((t /= d) == 1) return b + c;\n        if (!p) p = d * .3;\n\n        if (a < _easingsMath.a(c)) {\n          a = c;\n          s = p / 4;\n        } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n        return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n      },\n      easeOutElastic: function (x, t, b, c, d) {\n        var s = _easingsMath.o;\n        var p = 0;\n        var a = c;\n        if (t == 0) return b;\n        if ((t /= d) == 1) return b + c;\n        if (!p) p = d * .3;\n\n        if (a < _easingsMath.a(c)) {\n          a = c;\n          s = p / 4;\n        } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n        return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\n      },\n      easeInOutElastic: function (x, t, b, c, d) {\n        var s = _easingsMath.o;\n        var p = 0;\n        var a = c;\n        if (t == 0) return b;\n        if ((t /= d / 2) == 2) return b + c;\n        if (!p) p = d * (.3 * 1.5);\n\n        if (a < _easingsMath.a(c)) {\n          a = c;\n          s = p / 4;\n        } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n        if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n        return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\n      },\n      easeInBack: function (x, t, b, c, d, s) {\n        s = s || _easingsMath.o;\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\n      },\n      easeOutBack: function (x, t, b, c, d, s) {\n        s = s || _easingsMath.o;\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n      },\n      easeInOutBack: function (x, t, b, c, d, s) {\n        s = s || _easingsMath.o;\n        return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n      },\n      easeInBounce: function (x, t, b, c, d) {\n        return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\n      },\n      easeOutBounce: function (x, t, b, c, d) {\n        var o = 7.5625;\n\n        if ((t /= d) < 1 / 2.75) {\n          return c * (o * t * t) + b;\n        } else if (t < 2 / 2.75) {\n          return c * (o * (t -= 1.5 / 2.75) * t + .75) + b;\n        } else if (t < 2.5 / 2.75) {\n          return c * (o * (t -= 2.25 / 2.75) * t + .9375) + b;\n        } else {\n          return c * (o * (t -= 2.625 / 2.75) * t + .984375) + b;\n        }\n      },\n      easeInOutBounce: function (x, t, b, c, d) {\n        return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n      }\n    };\n    /*\r\n     *\r\n     * TERMS OF USE - EASING EQUATIONS\r\n     * \r\n     * Open source under the BSD License. \r\n     * \r\n     * Copyright Â© 2001 Robert Penner\r\n     * All rights reserved.\r\n     * \r\n     * Redistribution and use in source and binary forms, with or without modification, \r\n     * are permitted provided that the following conditions are met:\r\n     * \r\n     * Redistributions of source code must retain the above copyright notice, this list of \r\n     * conditions and the following disclaimer.\r\n     * Redistributions in binary form must reproduce the above copyright notice, this list \r\n     * of conditions and the following disclaimer in the documentation and/or other materials \r\n     * provided with the distribution.\r\n     * \r\n     * Neither the name of the author nor the names of contributors may be used to endorse \r\n     * or promote products derived from this software without specific prior written permission.\r\n     * \r\n     * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n     * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n     * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n     *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n     *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n     *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n     * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n     *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n     * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n     *\r\n     */\n  }();\n\n  var FRAMEWORK = function () {\n    var _rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n    var _strSpace = ' ';\n    var _strEmpty = '';\n    var _strScrollLeft = 'scrollLeft';\n    var _strScrollTop = 'scrollTop';\n    var _animations = [];\n    var _type = COMPATIBILITY.type;\n    var _cssNumber = {\n      animationIterationCount: true,\n      columnCount: true,\n      fillOpacity: true,\n      flexGrow: true,\n      flexShrink: true,\n      fontWeight: true,\n      lineHeight: true,\n      opacity: true,\n      order: true,\n      orphans: true,\n      widows: true,\n      zIndex: true,\n      zoom: true\n    };\n\n    function extend() {\n      var src,\n          copyIsArray,\n          copy,\n          name,\n          options,\n          clone,\n          target = arguments[0] || {},\n          i = 1,\n          length = arguments[LEXICON.l],\n          deep = false; // Handle a deep copy situation\n\n      if (_type(target) == TYPES.b) {\n        deep = target;\n        target = arguments[1] || {}; // skip the boolean and the target\n\n        i = 2;\n      } // Handle case when target is a string or something (possible in deep copy)\n\n\n      if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\n        target = {};\n      } // extend jQuery itself if only one argument is passed\n\n\n      if (length === i) {\n        target = FakejQuery;\n        --i;\n      }\n\n      for (; i < length; i++) {\n        // Only deal with non-null/undefined values\n        if ((options = arguments[i]) != null) {\n          // Extend the base object\n          for (name in options) {\n            src = target[name];\n            copy = options[name]; // Prevent never-ending loop\n\n            if (target === copy) {\n              continue;\n            } // Recurse if we're merging plain objects or arrays\n\n\n            if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\n              if (copyIsArray) {\n                copyIsArray = false;\n                clone = src && COMPATIBILITY.isA(src) ? src : [];\n              } else {\n                clone = src && isPlainObject(src) ? src : {};\n              } // Never move original objects, clone them\n\n\n              target[name] = extend(deep, clone, copy); // Don't bring in undefined values\n            } else if (copy !== undefined) {\n              target[name] = copy;\n            }\n          }\n        }\n      } // Return the modified object\n\n\n      return target;\n    }\n\n    ;\n\n    function inArray(item, arr, fromIndex) {\n      for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++) if (arr[i] === item) return i;\n\n      return -1;\n    }\n\n    function isFunction(obj) {\n      return _type(obj) == TYPES.f;\n    }\n\n    ;\n\n    function isEmptyObject(obj) {\n      for (var name in obj) return false;\n\n      return true;\n    }\n\n    ;\n\n    function isPlainObject(obj) {\n      if (!obj || _type(obj) != TYPES.o) return false;\n      var key;\n      var proto = LEXICON.p;\n      var hasOwnProperty = Object[proto].hasOwnProperty;\n      var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\n      var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\n\n      if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n        return false;\n      }\n\n      for (key in obj) {\n        /**/\n      }\n\n      return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\n    }\n\n    ;\n\n    function each(obj, callback) {\n      var i = 0;\n\n      if (isArrayLike(obj)) {\n        for (; i < obj[LEXICON.l]; i++) {\n          if (callback.call(obj[i], i, obj[i]) === false) break;\n        }\n      } else {\n        for (i in obj) {\n          if (callback.call(obj[i], i, obj[i]) === false) break;\n        }\n      }\n\n      return obj;\n    }\n\n    ;\n\n    function isArrayLike(obj) {\n      var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\n\n      var t = _type(obj);\n\n      return isFunction(t) ? false : t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && length - 1 in obj;\n    }\n\n    function stripAndCollapse(value) {\n      var tokens = value.match(_rnothtmlwhite) || [];\n      return tokens.join(_strSpace);\n    }\n\n    function matches(elem, selector) {\n      var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\n      var i = nodeList[LEXICON.l];\n\n      while (i--) if (nodeList[i] == elem) return true;\n\n      return false;\n    }\n\n    function insertAdjacentElement(el, strategy, child) {\n      if (COMPATIBILITY.isA(child)) {\n        for (var i = 0; i < child[LEXICON.l]; i++) insertAdjacentElement(el, strategy, child[i]);\n      } else if (_type(child) == TYPES.s) el.insertAdjacentHTML(strategy, child);else el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\n    }\n\n    function setCSSVal(el, prop, val) {\n      try {\n        if (el[LEXICON.s][prop] !== undefined) el[LEXICON.s][prop] = parseCSSVal(prop, val);\n      } catch (e) {}\n    }\n\n    function parseCSSVal(prop, val) {\n      if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n) val += 'px';\n      return val;\n    }\n\n    function startNextAnimationInQ(animObj, removeFromQ) {\n      var index;\n      var nextAnim;\n      if (removeFromQ !== false) animObj.q.splice(0, 1);\n\n      if (animObj.q[LEXICON.l] > 0) {\n        nextAnim = animObj.q[0];\n        animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\n      } else {\n        index = inArray(animObj, _animations);\n        if (index > -1) _animations.splice(index, 1);\n      }\n    }\n\n    function setAnimationValue(el, prop, value) {\n      if (prop === _strScrollLeft || prop === _strScrollTop) el[prop] = value;else setCSSVal(el, prop, value);\n    }\n\n    function animate(el, props, options, easing, complete, guaranteedNext) {\n      var hasOptions = isPlainObject(options);\n      var from = {};\n      var to = {};\n      var i = 0;\n      var key;\n      var animObj;\n      var start;\n      var progress;\n      var step;\n      var specialEasing;\n      var duration;\n\n      if (hasOptions) {\n        easing = options.easing;\n        start = options.start;\n        progress = options.progress;\n        step = options.step;\n        specialEasing = options.specialEasing;\n        complete = options.complete;\n        duration = options.duration;\n      } else duration = options;\n\n      specialEasing = specialEasing || {};\n      duration = duration || 400;\n      easing = easing || 'swing';\n      guaranteedNext = guaranteedNext || false;\n\n      for (; i < _animations[LEXICON.l]; i++) {\n        if (_animations[i].el === el) {\n          animObj = _animations[i];\n          break;\n        }\n      }\n\n      if (!animObj) {\n        animObj = {\n          el: el,\n          q: []\n        };\n\n        _animations.push(animObj);\n      }\n\n      for (key in props) {\n        if (key === _strScrollLeft || key === _strScrollTop) from[key] = el[key];else from[key] = FakejQuery(el).css(key);\n      }\n\n      for (key in from) {\n        if (from[key] !== props[key] && props[key] !== undefined) to[key] = props[key];\n      }\n\n      if (!isEmptyObject(to)) {\n        var timeNow;\n        var end;\n        var percent;\n        var fromVal;\n        var toVal;\n        var easedVal;\n        var timeStart;\n        var frame;\n        var elapsed;\n        var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\n        var qObj = {\n          props: to,\n          duration: hasOptions ? options : duration,\n          easing: easing,\n          complete: complete\n        };\n\n        if (qPos === -1) {\n          qPos = animObj.q[LEXICON.l];\n          animObj.q.push(qObj);\n        }\n\n        if (qPos === 0) {\n          if (duration > 0) {\n            timeStart = COMPATIBILITY.now();\n\n            frame = function () {\n              timeNow = COMPATIBILITY.now();\n              elapsed = timeNow - timeStart;\n              end = qObj.stop || elapsed >= duration;\n              percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);\n\n              for (key in to) {\n                fromVal = parseFloat(from[key]);\n                toVal = parseFloat(to[key]);\n                easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\n                setAnimationValue(el, key, easedVal);\n\n                if (isFunction(step)) {\n                  step(easedVal, {\n                    elem: el,\n                    prop: key,\n                    start: fromVal,\n                    now: easedVal,\n                    end: toVal,\n                    pos: percent,\n                    options: {\n                      easing: easing,\n                      speacialEasing: specialEasing,\n                      duration: duration,\n                      complete: complete,\n                      step: step\n                    },\n                    startTime: timeStart\n                  });\n                }\n              }\n\n              if (isFunction(progress)) progress({}, percent, MATH.max(0, duration - elapsed));\n\n              if (end) {\n                startNextAnimationInQ(animObj);\n                if (isFunction(complete)) complete();\n              } else qObj.frame = COMPATIBILITY.rAF()(frame);\n            };\n\n            qObj.frame = COMPATIBILITY.rAF()(frame);\n          } else {\n            for (key in to) setAnimationValue(el, key, to[key]);\n\n            startNextAnimationInQ(animObj);\n          }\n        }\n      } else if (guaranteedNext) startNextAnimationInQ(animObj);\n    }\n\n    function stop(el, clearQ, jumpToEnd) {\n      var animObj;\n      var qObj;\n      var key;\n      var i = 0;\n\n      for (; i < _animations[LEXICON.l]; i++) {\n        animObj = _animations[i];\n\n        if (animObj.el === el) {\n          if (animObj.q[LEXICON.l] > 0) {\n            qObj = animObj.q[0];\n            qObj.stop = true;\n            COMPATIBILITY.cAF()(qObj.frame);\n            animObj.q.splice(0, 1);\n            if (jumpToEnd) for (key in qObj.props) setAnimationValue(el, key, qObj.props[key]);\n            if (clearQ) animObj.q = [];else startNextAnimationInQ(animObj, false);\n          }\n\n          break;\n        }\n      }\n    }\n\n    function elementIsVisible(el) {\n      return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n    }\n\n    function FakejQuery(selector) {\n      if (arguments[LEXICON.l] === 0) return this;\n      var base = new FakejQuery();\n      var elements = selector;\n      var i = 0;\n      var elms;\n      var el;\n\n      if (_type(selector) == TYPES.s) {\n        elements = [];\n\n        if (selector.charAt(0) === '<') {\n          el = document.createElement('div');\n          el.innerHTML = selector;\n          elms = el.children;\n        } else {\n          elms = document.querySelectorAll(selector);\n        }\n\n        for (; i < elms[LEXICON.l]; i++) elements.push(elms[i]);\n      }\n\n      if (elements) {\n        if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self)) elements = [elements];\n\n        for (i = 0; i < elements[LEXICON.l]; i++) base[i] = elements[i];\n\n        base[LEXICON.l] = elements[LEXICON.l];\n      }\n\n      return base;\n    }\n\n    ;\n    FakejQuery[LEXICON.p] = {\n      //EVENTS:\n      on: function (eventName, handler) {\n        eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n        var eventNameLength = eventName[LEXICON.l];\n        var i = 0;\n        var el;\n        return this.each(function () {\n          el = this;\n\n          try {\n            if (el.addEventListener) {\n              for (; i < eventNameLength; i++) el.addEventListener(eventName[i], handler);\n            } else if (el.detachEvent) {\n              for (; i < eventNameLength; i++) el.attachEvent('on' + eventName[i], handler);\n            }\n          } catch (e) {}\n        });\n      },\n      off: function (eventName, handler) {\n        eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n        var eventNameLength = eventName[LEXICON.l];\n        var i = 0;\n        var el;\n        return this.each(function () {\n          el = this;\n\n          try {\n            if (el.removeEventListener) {\n              for (; i < eventNameLength; i++) el.removeEventListener(eventName[i], handler);\n            } else if (el.detachEvent) {\n              for (; i < eventNameLength; i++) el.detachEvent('on' + eventName[i], handler);\n            }\n          } catch (e) {}\n        });\n      },\n      one: function (eventName, handler) {\n        eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n        return this.each(function () {\n          var el = FakejQuery(this);\n          FakejQuery.each(eventName, function (i, oneEventName) {\n            var oneHandler = function (e) {\n              handler.call(this, e);\n              el.off(oneEventName, oneHandler);\n            };\n\n            el.on(oneEventName, oneHandler);\n          });\n        });\n      },\n      trigger: function (eventName) {\n        var el;\n        var event;\n        return this.each(function () {\n          el = this;\n\n          if (document.createEvent) {\n            event = document.createEvent('HTMLEvents');\n            event.initEvent(eventName, true, false);\n            el.dispatchEvent(event);\n          } else {\n            el.fireEvent('on' + eventName);\n          }\n        });\n      },\n      //DOM NODE INSERTING / REMOVING:\n      append: function (child) {\n        return this.each(function () {\n          insertAdjacentElement(this, 'beforeend', child);\n        });\n      },\n      prepend: function (child) {\n        return this.each(function () {\n          insertAdjacentElement(this, 'afterbegin', child);\n        });\n      },\n      before: function (child) {\n        return this.each(function () {\n          insertAdjacentElement(this, 'beforebegin', child);\n        });\n      },\n      after: function (child) {\n        return this.each(function () {\n          insertAdjacentElement(this, 'afterend', child);\n        });\n      },\n      remove: function () {\n        return this.each(function () {\n          var el = this;\n          var parentNode = el.parentNode;\n          if (parentNode != null) parentNode.removeChild(el);\n        });\n      },\n      unwrap: function () {\n        var parents = [];\n        var i;\n        var el;\n        var parent;\n        this.each(function () {\n          parent = this.parentNode;\n          if (inArray(parent, parents) === -1) parents.push(parent);\n        });\n\n        for (i = 0; i < parents[LEXICON.l]; i++) {\n          el = parents[i];\n          parent = el.parentNode;\n\n          while (el.firstChild) parent.insertBefore(el.firstChild, el);\n\n          parent.removeChild(el);\n        }\n\n        return this;\n      },\n      wrapAll: function (wrapperHTML) {\n        var i;\n        var nodes = this;\n        var wrapper = FakejQuery(wrapperHTML)[0];\n        var deepest = wrapper;\n        var parent = nodes[0].parentNode;\n        var previousSibling = nodes[0].previousSibling;\n\n        while (deepest.childNodes[LEXICON.l] > 0) deepest = deepest.childNodes[0];\n\n        for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++) deepest.appendChild(nodes[i]);\n\n        var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\n        parent.insertBefore(wrapper, nextSibling);\n        return this;\n      },\n      wrapInner: function (wrapperHTML) {\n        return this.each(function () {\n          var el = FakejQuery(this);\n          var contents = el.contents();\n          if (contents[LEXICON.l]) contents.wrapAll(wrapperHTML);else el.append(wrapperHTML);\n        });\n      },\n      wrap: function (wrapperHTML) {\n        return this.each(function () {\n          FakejQuery(this).wrapAll(wrapperHTML);\n        });\n      },\n      //DOM NODE MANIPULATION / INFORMATION:\n      css: function (styles, val) {\n        var el;\n        var key;\n        var cptStyle;\n        var getCptStyle = window.getComputedStyle;\n\n        if (_type(styles) == TYPES.s) {\n          if (val === undefined) {\n            el = this[0];\n            cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles]; //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\n\n            return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\n          } else {\n            return this.each(function () {\n              setCSSVal(this, styles, val);\n            });\n          }\n        } else {\n          return this.each(function () {\n            for (key in styles) setCSSVal(this, key, styles[key]);\n          });\n        }\n      },\n      hasClass: function (className) {\n        var elem,\n            i = 0;\n        var classNamePrepared = _strSpace + className + _strSpace;\n        var classList;\n\n        while (elem = this[i++]) {\n          classList = elem.classList;\n          if (classList && classList.contains(className)) return true;else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1) return true;\n        }\n\n        return false;\n      },\n      addClass: function (className) {\n        var classes;\n        var elem;\n        var cur;\n        var curValue;\n        var clazz;\n        var finalValue;\n        var supportClassList;\n        var elmClassList;\n        var i = 0;\n        var v = 0;\n\n        if (className) {\n          classes = className.match(_rnothtmlwhite) || [];\n\n          while (elem = this[i++]) {\n            elmClassList = elem.classList;\n            if (supportClassList === undefined) supportClassList = elmClassList !== undefined;\n\n            if (supportClassList) {\n              while (clazz = classes[v++]) elmClassList.add(clazz);\n            } else {\n              curValue = elem.className + _strEmpty;\n              cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n              if (cur) {\n                while (clazz = classes[v++]) if (cur.indexOf(_strSpace + clazz + _strSpace) < 0) cur += clazz + _strSpace;\n\n                finalValue = stripAndCollapse(cur);\n                if (curValue !== finalValue) elem.className = finalValue;\n              }\n            }\n          }\n        }\n\n        return this;\n      },\n      removeClass: function (className) {\n        var classes;\n        var elem;\n        var cur;\n        var curValue;\n        var clazz;\n        var finalValue;\n        var supportClassList;\n        var elmClassList;\n        var i = 0;\n        var v = 0;\n\n        if (className) {\n          classes = className.match(_rnothtmlwhite) || [];\n\n          while (elem = this[i++]) {\n            elmClassList = elem.classList;\n            if (supportClassList === undefined) supportClassList = elmClassList !== undefined;\n\n            if (supportClassList) {\n              while (clazz = classes[v++]) elmClassList.remove(clazz);\n            } else {\n              curValue = elem.className + _strEmpty;\n              cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n              if (cur) {\n                while (clazz = classes[v++]) while (cur.indexOf(_strSpace + clazz + _strSpace) > -1) cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\n\n                finalValue = stripAndCollapse(cur);\n                if (curValue !== finalValue) elem.className = finalValue;\n              }\n            }\n          }\n        }\n\n        return this;\n      },\n      hide: function () {\n        return this.each(function () {\n          this[LEXICON.s].display = 'none';\n        });\n      },\n      show: function () {\n        return this.each(function () {\n          this[LEXICON.s].display = 'block';\n        });\n      },\n      attr: function (attrName, value) {\n        var i = 0;\n        var el;\n\n        while (el = this[i++]) {\n          if (value === undefined) return el.getAttribute(attrName);\n          el.setAttribute(attrName, value);\n        }\n\n        return this;\n      },\n      removeAttr: function (attrName) {\n        return this.each(function () {\n          this.removeAttribute(attrName);\n        });\n      },\n      offset: function () {\n        var el = this[0];\n        var rect = el[LEXICON.bCR]();\n        var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\n        var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\n        return {\n          top: rect.top + scrollTop,\n          left: rect.left + scrollLeft\n        };\n      },\n      position: function () {\n        var el = this[0];\n        return {\n          top: el.offsetTop,\n          left: el.offsetLeft\n        };\n      },\n      scrollLeft: function (value) {\n        var i = 0;\n        var el;\n\n        while (el = this[i++]) {\n          if (value === undefined) return el[_strScrollLeft];\n          el[_strScrollLeft] = value;\n        }\n\n        return this;\n      },\n      scrollTop: function (value) {\n        var i = 0;\n        var el;\n\n        while (el = this[i++]) {\n          if (value === undefined) return el[_strScrollTop];\n          el[_strScrollTop] = value;\n        }\n\n        return this;\n      },\n      val: function (value) {\n        var el = this[0];\n        if (!value) return el.value;\n        el.value = value;\n        return this;\n      },\n      //DOM TRAVERSAL / FILTERING:\n      first: function () {\n        return this.eq(0);\n      },\n      last: function () {\n        return this.eq(-1);\n      },\n      eq: function (index) {\n        return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\n      },\n      find: function (selector) {\n        var children = [];\n        var i;\n        this.each(function () {\n          var el = this;\n          var ch = el.querySelectorAll(selector);\n\n          for (i = 0; i < ch[LEXICON.l]; i++) children.push(ch[i]);\n        });\n        return FakejQuery(children);\n      },\n      children: function (selector) {\n        var children = [];\n        var el;\n        var ch;\n        var i;\n        this.each(function () {\n          ch = this.children;\n\n          for (i = 0; i < ch[LEXICON.l]; i++) {\n            el = ch[i];\n\n            if (selector) {\n              if (el.matches && el.matches(selector) || matches(el, selector)) children.push(el);\n            } else children.push(el);\n          }\n        });\n        return FakejQuery(children);\n      },\n      parent: function (selector) {\n        var parents = [];\n        var parent;\n        this.each(function () {\n          parent = this.parentNode;\n          if (selector ? FakejQuery(parent).is(selector) : true) parents.push(parent);\n        });\n        return FakejQuery(parents);\n      },\n      is: function (selector) {\n        var el;\n        var i;\n\n        for (i = 0; i < this[LEXICON.l]; i++) {\n          el = this[i];\n          if (selector === ':visible') return elementIsVisible(el);\n          if (selector === ':hidden') return !elementIsVisible(el);\n          if (el.matches && el.matches(selector) || matches(el, selector)) return true;\n        }\n\n        return false;\n      },\n      contents: function () {\n        var contents = [];\n        var childs;\n        var i;\n        this.each(function () {\n          childs = this.childNodes;\n\n          for (i = 0; i < childs[LEXICON.l]; i++) contents.push(childs[i]);\n        });\n        return FakejQuery(contents);\n      },\n      each: function (callback) {\n        return each(this, callback);\n      },\n      //ANIMATION:\n      animate: function (props, duration, easing, complete) {\n        return this.each(function () {\n          animate(this, props, duration, easing, complete);\n        });\n      },\n      stop: function (clearQ, jump) {\n        return this.each(function () {\n          stop(this, clearQ, jump);\n        });\n      }\n    };\n    extend(FakejQuery, {\n      extend: extend,\n      inArray: inArray,\n      isEmptyObject: isEmptyObject,\n      isPlainObject: isPlainObject,\n      each: each\n    });\n    return FakejQuery;\n  }();\n\n  var INSTANCES = function () {\n    var _targets = [];\n    var _instancePropertyString = '__overlayScrollbars__';\n    /**\r\n     * Register, unregister or get a certain (or all) instances.\r\n     * Register: Pass the target and the instance.\r\n     * Unregister: Pass the target and null.\r\n     * Get Instance: Pass the target from which the instance shall be got.\r\n     * Get Targets: Pass no arguments.\r\n     * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n     * @param instance The instance.\r\n     * @returns {*|void} Returns the instance from the given target.\r\n     */\n\n    return function (target, instance) {\n      var argLen = arguments[LEXICON.l];\n\n      if (argLen < 1) {\n        //return all targets\n        return _targets;\n      } else {\n        if (instance) {\n          //register instance\n          target[_instancePropertyString] = instance;\n\n          _targets.push(target);\n        } else {\n          var index = COMPATIBILITY.inA(target, _targets);\n\n          if (index > -1) {\n            if (argLen > 1) {\n              //unregister instance\n              delete target[_instancePropertyString];\n\n              _targets.splice(index, 1);\n            } else {\n              //get instance from target\n              return _targets[index][_instancePropertyString];\n            }\n          }\n        }\n      }\n    };\n  }();\n\n  var PLUGIN = function () {\n    var _plugin;\n\n    var _pluginsGlobals;\n\n    var _pluginsAutoUpdateLoop;\n\n    var _pluginsExtensions = [];\n\n    var _pluginsOptions = function () {\n      var type = COMPATIBILITY.type;\n      var possibleTemplateTypes = [TYPES.b, //boolean\n      TYPES.n, //number\n      TYPES.s, //string\n      TYPES.a, //array\n      TYPES.o, //object\n      TYPES.f, //function\n      TYPES.z //null\n      ];\n      var restrictedStringsSplit = ' ';\n      var restrictedStringsPossibilitiesSplit = ':';\n      var classNameAllowedValues = [TYPES.z, TYPES.s];\n      var numberAllowedValues = TYPES.n;\n      var booleanNullAllowedValues = [TYPES.z, TYPES.b];\n      var booleanTrueTemplate = [true, TYPES.b];\n      var booleanFalseTemplate = [false, TYPES.b];\n      var callbackTemplate = [null, [TYPES.z, TYPES.f]];\n      var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\n      var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\n      var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\n      var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\n      var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\n      var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\n      var optionsDefaultsAndTemplate = {\n        className: ['os-theme-dark', classNameAllowedValues],\n        //null || string\n        resize: ['none', resizeAllowedValues],\n        //none || both  || horizontal || vertical || n || b || h || v\n        sizeAutoCapable: booleanTrueTemplate,\n        //true || false\n        clipAlways: booleanTrueTemplate,\n        //true || false\n        normalizeRTL: booleanTrueTemplate,\n        //true || false\n        paddingAbsolute: booleanFalseTemplate,\n        //true || false\n        autoUpdate: [null, booleanNullAllowedValues],\n        //true || false || null\n        autoUpdateInterval: [33, numberAllowedValues],\n        //number\n        updateOnLoad: updateOnLoadTemplate,\n        //string || array || null\n        nativeScrollbarsOverlaid: {\n          showNativeScrollbars: booleanFalseTemplate,\n          //true || false\n          initialize: booleanTrueTemplate //true || false\n\n        },\n        overflowBehavior: {\n          x: ['scroll', overflowBehaviorAllowedValues],\n          //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n          y: ['scroll', overflowBehaviorAllowedValues] //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n\n        },\n        scrollbars: {\n          visibility: ['auto', scrollbarsVisibilityAllowedValues],\n          //visible || hidden || auto || v || h || a\n          autoHide: ['never', scrollbarsAutoHideAllowedValues],\n          //never || scroll || leave || move || n || s || l || m\n          autoHideDelay: [800, numberAllowedValues],\n          //number\n          dragScrolling: booleanTrueTemplate,\n          //true || false\n          clickScrolling: booleanFalseTemplate,\n          //true || false\n          touchSupport: booleanTrueTemplate,\n          //true || false\n          snapHandle: booleanFalseTemplate //true || false\n\n        },\n        textarea: {\n          dynWidth: booleanFalseTemplate,\n          //true || false\n          dynHeight: booleanFalseTemplate,\n          //true || false\n          inheritedAttrs: inheritedAttrsTemplate //string || array || null\n\n        },\n        callbacks: {\n          onInitialized: callbackTemplate,\n          //null || function\n          onInitializationWithdrawn: callbackTemplate,\n          //null || function\n          onDestroyed: callbackTemplate,\n          //null || function\n          onScrollStart: callbackTemplate,\n          //null || function\n          onScroll: callbackTemplate,\n          //null || function\n          onScrollStop: callbackTemplate,\n          //null || function\n          onOverflowChanged: callbackTemplate,\n          //null || function\n          onOverflowAmountChanged: callbackTemplate,\n          //null || function\n          onDirectionChanged: callbackTemplate,\n          //null || function\n          onContentSizeChanged: callbackTemplate,\n          //null || function\n          onHostSizeChanged: callbackTemplate,\n          //null || function\n          onUpdated: callbackTemplate //null || function\n\n        }\n      };\n\n      var convert = function (template) {\n        var recursive = function (obj) {\n          var key;\n          var val;\n          var valType;\n\n          for (key in obj) {\n            if (!obj[LEXICON.hOP](key)) continue;\n            val = obj[key];\n            valType = type(val);\n            if (valType == TYPES.a) obj[key] = val[template ? 1 : 0];else if (valType == TYPES.o) obj[key] = recursive(val);\n          }\n\n          return obj;\n        };\n\n        return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\n      };\n\n      return {\n        _defaults: convert(),\n        _template: convert(true),\n\n        /**\r\n         * Validates the passed object by the passed template.\r\n         * @param obj The object which shall be validated.\r\n         * @param template The template which defines the allowed values and types.\r\n         * @param writeErrors True if errors shall be logged to the console.\r\n         * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n         * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n         */\n        _validate: function (obj, template, writeErrors, diffObj) {\n          var validatedOptions = {};\n          var validatedOptionsPrepared = {};\n          var objectCopy = FRAMEWORK.extend(true, {}, obj);\n          var inArray = FRAMEWORK.inArray;\n          var isEmptyObj = FRAMEWORK.isEmptyObject;\n\n          var checkObjectProps = function (data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\n            for (var prop in template) {\n              if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\n                var isValid = false;\n                var isDiff = false;\n                var templateValue = template[prop];\n                var templateValueType = type(templateValue);\n                var templateIsComplex = templateValueType == TYPES.o;\n                var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\n                var dataDiffValue = diffData[prop];\n                var dataValue = data[prop];\n                var dataValueType = type(dataValue);\n                var propPrefix = prevPropName ? prevPropName + '.' : '';\n                var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\n                var errorPossibleTypes = [];\n                var errorRestrictedStrings = [];\n                var restrictedStringValuesSplit;\n                var restrictedStringValuesPossibilitiesSplit;\n                var isRestrictedValue;\n                var mainPossibility;\n                var currType;\n                var i;\n                var v;\n                var j;\n                dataDiffValue = dataDiffValue === undefined ? {} : dataDiffValue; //if the template has a object as value, it means that the options are complex (verschachtelt)\n\n                if (templateIsComplex && dataValueType == TYPES.o) {\n                  validatedOptions[prop] = {};\n                  validatedOptionsPrepared[prop] = {};\n                  checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\n                  FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\n                    if (isEmptyObj(value[prop])) {\n                      delete value[prop];\n                    }\n                  });\n                } else if (!templateIsComplex) {\n                  for (i = 0; i < templateTypes[LEXICON.l]; i++) {\n                    currType = templateTypes[i];\n                    templateValueType = type(currType); //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\n\n                    isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\n\n                    if (isRestrictedValue) {\n                      errorPossibleTypes.push(TYPES.s); //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\n\n                      restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\n                      errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\n\n                      for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\n                        //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\n                        restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\n                        mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\n\n                        for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\n                          //if any possibility matches with the dataValue, its valid\n                          if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\n                            isValid = true;\n                            break;\n                          }\n                        }\n\n                        if (isValid) break;\n                      }\n                    } else {\n                      errorPossibleTypes.push(currType);\n\n                      if (dataValueType === currType) {\n                        isValid = true;\n                        break;\n                      }\n                    }\n                  }\n\n                  if (isValid) {\n                    isDiff = dataValue !== dataDiffValue;\n                    if (isDiff) validatedOptions[prop] = dataValue;\n                    if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff) validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\n                  } else if (writeErrors) {\n                    console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" + \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" + (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\n                  }\n\n                  delete data[prop];\n                }\n              }\n            }\n          };\n\n          checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared); //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\n\n          /*\r\n          if(keepForeignProps) {\r\n              FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n              FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n          }\r\n          */\n\n          if (!isEmptyObj(objectCopy) && writeErrors) console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\n          return {\n            _default: validatedOptions,\n            _prepared: validatedOptionsPrepared\n          };\n        }\n      };\n    }();\n    /**\r\n     * Initializes the object which contains global information about the plugin and each instance of it.\r\n     */\n\n\n    function initOverlayScrollbarsStatics() {\n      if (!_pluginsGlobals) _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\n      if (!_pluginsAutoUpdateLoop) _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\n    }\n    /**\r\n     * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n     * @param defaultOptions\r\n     * @constructor\r\n     */\n\n\n    function OverlayScrollbarsGlobals(defaultOptions) {\n      var _base = this;\n\n      var strOverflow = 'overflow';\n      var strHidden = 'hidden';\n      var strScroll = 'scroll';\n      var bodyElement = FRAMEWORK('body');\n      var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\n      var scrollbarDummyElement0 = scrollbarDummyElement[0];\n      var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\n      bodyElement.append(scrollbarDummyElement);\n      scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\n\n      var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\n      var nativeScrollbarIsOverlaid = {\n        x: nativeScrollbarSize.x === 0,\n        y: nativeScrollbarSize.y === 0\n      };\n\n      var msie = function () {\n        var ua = window.navigator.userAgent;\n        var strIndexOf = 'indexOf';\n        var strSubString = 'substring';\n        var msie = ua[strIndexOf]('MSIE ');\n        var trident = ua[strIndexOf]('Trident/');\n        var edge = ua[strIndexOf]('Edge/');\n        var rv = ua[strIndexOf]('rv:');\n        var result;\n        var parseIntFunc = parseInt; // IE 10 or older => return version number\n\n        if (msie > 0) result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10); // IE 11 => return version number\n        else if (trident > 0) result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10); // Edge (IE 12+) => return version number\n        else if (edge > 0) result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10); // other browser\n\n        return result;\n      }();\n\n      FRAMEWORK.extend(_base, {\n        defaultOptions: defaultOptions,\n        msie: msie,\n        autoUpdateLoop: false,\n        autoUpdateRecommended: !COMPATIBILITY.mO(),\n        nativeScrollbarSize: nativeScrollbarSize,\n        nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\n        nativeScrollbarStyling: function () {\n          var result = false;\n          scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\n\n          try {\n            result = scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\n          } catch (ex) {} //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\n          //and set overflow to scroll\n          //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\n          //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\n\n\n          return result;\n        }(),\n        overlayScrollbarDummySize: {\n          x: 30,\n          y: 30\n        },\n        cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\n        restrictedMeasuring: function () {\n          //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\n          //since 1.11.0 always false -> fixed via CSS (hopefully)\n          scrollbarDummyElement.css(strOverflow, strHidden);\n          var scrollSize = {\n            w: scrollbarDummyElement0[LEXICON.sW],\n            h: scrollbarDummyElement0[LEXICON.sH]\n          };\n          scrollbarDummyElement.css(strOverflow, 'visible');\n          var scrollSize2 = {\n            w: scrollbarDummyElement0[LEXICON.sW],\n            h: scrollbarDummyElement0[LEXICON.sH]\n          };\n          return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;\n        }(),\n        rtlScrollBehavior: function () {\n          scrollbarDummyElement.css({\n            'overflow-y': strHidden,\n            'overflow-x': strScroll,\n            'direction': 'rtl'\n          }).scrollLeft(0);\n          var dummyContainerOffset = scrollbarDummyElement.offset();\n          var dummyContainerChildOffset = dummyContainerChild.offset(); //https://github.com/KingSora/OverlayScrollbars/issues/187\n\n          scrollbarDummyElement.scrollLeft(-999);\n          var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\n          return {\n            //origin direction = determines if the zero scroll position is on the left or right side\n            //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\n            //true = on the left side\n            //false = on the right side\n            i: dummyContainerOffset.left === dummyContainerChildOffset.left,\n            //negative = determines if the maximum scroll is positive or negative\n            //'n' means 'negate' (n === true means that the axis must be negated to be correct)\n            //true = negative\n            //false = positive\n            n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\n          };\n        }(),\n        supportTransform: !!VENDORS._cssProperty('transform'),\n        supportTransition: !!VENDORS._cssProperty('transition'),\n        supportPassiveEvents: function () {\n          var supportsPassive = false;\n\n          try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n              get: function () {\n                supportsPassive = true;\n              }\n            }));\n          } catch (e) {}\n\n          return supportsPassive;\n        }(),\n        supportResizeObserver: !!COMPATIBILITY.rO(),\n        supportMutationObserver: !!COMPATIBILITY.mO()\n      });\n      scrollbarDummyElement.removeAttr(LEXICON.s).remove(); //Catch zoom event:\n\n      (function () {\n        if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y) return;\n        var abs = MATH.abs;\n        var windowWidth = COMPATIBILITY.wW();\n        var windowHeight = COMPATIBILITY.wH();\n        var windowDpr = getWindowDPR();\n\n        var onResize = function () {\n          if (INSTANCES().length > 0) {\n            var newW = COMPATIBILITY.wW();\n            var newH = COMPATIBILITY.wH();\n            var deltaW = newW - windowWidth;\n            var deltaH = newH - windowHeight;\n            if (deltaW === 0 && deltaH === 0) return;\n            var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\n            var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\n            var absDeltaW = abs(deltaW);\n            var absDeltaH = abs(deltaH);\n            var absDeltaWRatio = abs(deltaWRatio);\n            var absDeltaHRatio = abs(deltaHRatio);\n            var newDPR = getWindowDPR();\n            var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\n            var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\n            var dprChanged = newDPR !== windowDpr && windowDpr > 0;\n            var isZoom = deltaIsBigger && difference && dprChanged;\n            var oldScrollbarSize = _base.nativeScrollbarSize;\n            var newScrollbarSize;\n\n            if (isZoom) {\n              bodyElement.append(scrollbarDummyElement);\n              newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\n              scrollbarDummyElement.remove();\n\n              if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\n                FRAMEWORK.each(INSTANCES(), function () {\n                  if (INSTANCES(this)) INSTANCES(this).update('zoom');\n                });\n              }\n            }\n\n            windowWidth = newW;\n            windowHeight = newH;\n            windowDpr = newDPR;\n          }\n        };\n\n        function differenceIsBiggerThanOne(valOne, valTwo) {\n          var absValOne = abs(valOne);\n          var absValTwo = abs(valTwo);\n          return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\n        }\n\n        function getWindowDPR() {\n          var dDPI = window.screen.deviceXDPI || 0;\n          var sDPI = window.screen.logicalXDPI || 1;\n          return window.devicePixelRatio || dDPI / sDPI;\n        }\n\n        FRAMEWORK(window).on('resize', onResize);\n      })();\n\n      function calcNativeScrollbarSize(measureElement) {\n        return {\n          x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\n          y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\n        };\n      }\n    }\n    /**\r\n     * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n     * @constructor\r\n     */\n\n\n    function OverlayScrollbarsAutoUpdateLoop(globals) {\n      var _base = this;\n\n      var _inArray = FRAMEWORK.inArray;\n      var _getNow = COMPATIBILITY.now;\n      var _strAutoUpdate = 'autoUpdate';\n\n      var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\n\n      var _strLength = LEXICON.l;\n      var _loopingInstances = [];\n      var _loopingInstancesIntervalCache = [];\n      var _loopIsActive = false;\n      var _loopIntervalDefault = 33;\n      var _loopInterval = _loopIntervalDefault;\n\n      var _loopTimeOld = _getNow();\n\n      var _loopID;\n      /**\r\n       * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n       */\n\n\n      var loop = function () {\n        if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\n          _loopID = COMPATIBILITY.rAF()(function () {\n            loop();\n          });\n\n          var timeNew = _getNow();\n\n          var timeDelta = timeNew - _loopTimeOld;\n          var lowestInterval;\n          var instance;\n          var instanceOptions;\n          var instanceAutoUpdateAllowed;\n          var instanceAutoUpdateInterval;\n          var now;\n\n          if (timeDelta > _loopInterval) {\n            _loopTimeOld = timeNew - timeDelta % _loopInterval;\n            lowestInterval = _loopIntervalDefault;\n\n            for (var i = 0; i < _loopingInstances[_strLength]; i++) {\n              instance = _loopingInstances[i];\n\n              if (instance !== undefined) {\n                instanceOptions = instance.options();\n                instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\n                instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\n                now = _getNow();\n\n                if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {\n                  instance.update('auto');\n                  _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\n                }\n\n                lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\n              }\n            }\n\n            _loopInterval = lowestInterval;\n          }\n        } else {\n          _loopInterval = _loopIntervalDefault;\n        }\n      };\n      /**\r\n       * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n       * @param instance The instance which shall be updated in a loop automatically.\r\n       */\n\n\n      _base.add = function (instance) {\n        if (_inArray(instance, _loopingInstances) === -1) {\n          _loopingInstances.push(instance);\n\n          _loopingInstancesIntervalCache.push(_getNow());\n\n          if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\n            _loopIsActive = true;\n            globals.autoUpdateLoop = _loopIsActive;\n            loop();\n          }\n        }\n      };\n      /**\r\n       * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n       * @param instance The instance which shall be updated in a loop automatically.\r\n       */\n\n\n      _base.remove = function (instance) {\n        var index = _inArray(instance, _loopingInstances);\n\n        if (index > -1) {\n          //remove from loopingInstances list\n          _loopingInstancesIntervalCache.splice(index, 1);\n\n          _loopingInstances.splice(index, 1); //correct update loop behavior\n\n\n          if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\n            _loopIsActive = false;\n            globals.autoUpdateLoop = _loopIsActive;\n\n            if (_loopID !== undefined) {\n              COMPATIBILITY.cAF()(_loopID);\n              _loopID = -1;\n            }\n          }\n        }\n      };\n    }\n    /**\r\n     * A object which manages the scrollbars visibility of the target element.\r\n     * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n     * @param options The custom options.\r\n     * @param extensions The custom extensions.\r\n     * @param globals\r\n     * @param autoUpdateLoop\r\n     * @returns {*}\r\n     * @constructor\r\n     */\n\n\n    function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\n      //shortcuts\n      var type = COMPATIBILITY.type;\n      var inArray = FRAMEWORK.inArray;\n      var each = FRAMEWORK.each; //make correct instanceof\n\n      var _base = new _plugin();\n\n      var _frameworkProto = FRAMEWORK[LEXICON.p]; //if passed element is no HTML element: skip and return\n\n      if (!isHTMLElement(pluginTargetElement)) return; //if passed element is already initialized: set passed options if there are any and return its instance\n\n      if (INSTANCES(pluginTargetElement)) {\n        var inst = INSTANCES(pluginTargetElement);\n        inst.options(options);\n        return inst;\n      } //globals:\n\n\n      var _nativeScrollbarIsOverlaid;\n\n      var _overlayScrollbarDummySize;\n\n      var _rtlScrollBehavior;\n\n      var _autoUpdateRecommended;\n\n      var _msieVersion;\n\n      var _nativeScrollbarStyling;\n\n      var _cssCalc;\n\n      var _nativeScrollbarSize;\n\n      var _supportTransition;\n\n      var _supportTransform;\n\n      var _supportPassiveEvents;\n\n      var _supportResizeObserver;\n\n      var _supportMutationObserver;\n\n      var _restrictedMeasuring; //general readonly:\n\n\n      var _initialized;\n\n      var _destroyed;\n\n      var _isTextarea;\n\n      var _isBody;\n\n      var _documentMixed;\n\n      var _domExists; //general:\n\n\n      var _isBorderBox;\n\n      var _sizeAutoObserverAdded;\n\n      var _paddingX;\n\n      var _paddingY;\n\n      var _borderX;\n\n      var _borderY;\n\n      var _marginX;\n\n      var _marginY;\n\n      var _isRTL;\n\n      var _sleeping;\n\n      var _contentBorderSize = {};\n      var _scrollHorizontalInfo = {};\n      var _scrollVerticalInfo = {};\n      var _viewportSize = {};\n      var _nativeScrollbarMinSize = {}; //naming:\t\n\n      var _strMinusHidden = '-hidden';\n      var _strMarginMinus = 'margin-';\n      var _strPaddingMinus = 'padding-';\n      var _strBorderMinus = 'border-';\n      var _strTop = 'top';\n      var _strRight = 'right';\n      var _strBottom = 'bottom';\n      var _strLeft = 'left';\n      var _strMinMinus = 'min-';\n      var _strMaxMinus = 'max-';\n      var _strWidth = 'width';\n      var _strHeight = 'height';\n      var _strFloat = 'float';\n      var _strEmpty = '';\n      var _strAuto = 'auto';\n      var _strSync = 'sync';\n      var _strScroll = 'scroll';\n      var _strHundredPercent = '100%';\n      var _strX = 'x';\n      var _strY = 'y';\n      var _strDot = '.';\n      var _strSpace = ' ';\n      var _strScrollbar = 'scrollbar';\n      var _strMinusHorizontal = '-horizontal';\n      var _strMinusVertical = '-vertical';\n\n      var _strScrollLeft = _strScroll + 'Left';\n\n      var _strScrollTop = _strScroll + 'Top';\n\n      var _strMouseTouchDownEvent = 'mousedown touchstart';\n      var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\n      var _strMouseTouchMoveEvent = 'mousemove touchmove';\n      var _strMouseEnter = 'mouseenter';\n      var _strMouseLeave = 'mouseleave';\n      var _strKeyDownEvent = 'keydown';\n      var _strKeyUpEvent = 'keyup';\n      var _strSelectStartEvent = 'selectstart';\n      var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\n      var _strResizeObserverProperty = '__overlayScrollbarsRO__'; //class names:\t\n\n      var _cassNamesPrefix = 'os-';\n\n      var _classNameHTMLElement = _cassNamesPrefix + 'html';\n\n      var _classNameHostElement = _cassNamesPrefix + 'host';\n\n      var _classNameHostElementForeign = _classNameHostElement + '-foreign';\n\n      var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\n\n      var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\n\n      var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\n\n      var _classNameHostTransition = _classNameHostElement + '-transition';\n\n      var _classNameHostRTL = _classNameHostElement + '-rtl';\n\n      var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\n\n      var _classNameHostScrolling = _classNameHostElement + '-scrolling';\n\n      var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n      var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n      var _classNameHostOverflowX = _classNameHostOverflow + '-x';\n\n      var _classNameHostOverflowY = _classNameHostOverflow + '-y';\n\n      var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\n\n      var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\n\n      var _classNamePaddingElement = _cassNamesPrefix + 'padding';\n\n      var _classNameViewportElement = _cassNamesPrefix + 'viewport';\n\n      var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\n\n      var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\n\n      var _classNameContentElement = _cassNamesPrefix + 'content';\n\n      var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\n\n      var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\n\n      var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\n\n      var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\n\n      var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\n\n      var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\n\n      var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\n\n      var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\n\n      var _classNameScrollbarTrack = _classNameScrollbar + '-track';\n\n      var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\n\n      var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\n\n      var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\n\n      var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\n\n      var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\n\n      var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\n\n      var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\n\n      var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\n\n      var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\n\n      var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\n\n      var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\n\n      var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\n\n      var _classNameDragging = _cassNamesPrefix + 'dragging';\n\n      var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\n\n      var _classNamesDynamicDestroy = [_classNameViewportNativeScrollbarsInvisible, _classNameViewportNativeScrollbarsOverlaid, _classNameScrollbarTrackOff, _classNameScrollbarHandleOff, _classNameScrollbarUnusable, _classNameScrollbarAutoHidden, _classNameScrollbarCornerResize, _classNameScrollbarCornerResizeB, _classNameScrollbarCornerResizeH, _classNameScrollbarCornerResizeV, _classNameDragging].join(_strSpace); //callbacks:\t\n\n\n      var _callbacksInitQeueue = []; //attrs viewport shall inherit from target\t\n\n      var _viewportAttrsFromTarget = [LEXICON.ti]; //options:\t\n\n      var _defaultOptions;\n\n      var _currentOptions;\n\n      var _currentPreparedOptions; //extensions:\t\n\n\n      var _extensions = {};\n      var _extensionsPrivateMethods = 'added removed on contract'; //update\t\n\n      var _lastUpdateTime;\n\n      var _swallowedUpdateHints = {};\n\n      var _swallowedUpdateTimeout;\n\n      var _swallowUpdateLag = 42;\n      var _updateOnLoadEventName = 'load';\n      var _updateOnLoadElms = []; //DOM elements:\t\n\n      var _windowElement;\n\n      var _documentElement;\n\n      var _htmlElement;\n\n      var _bodyElement;\n\n      var _targetElement; //the target element of this OverlayScrollbars object\t\n\n\n      var _hostElement; //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\n\n\n      var _sizeAutoObserverElement; //observes size auto changes\t\n\n\n      var _sizeObserverElement; //observes size and padding changes\t\n\n\n      var _paddingElement; //manages the padding\t\n\n\n      var _viewportElement; //is the viewport of our scrollbar model\t\n\n\n      var _contentElement; //the element which holds the content\t\n\n\n      var _contentArrangeElement; //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\n\n\n      var _contentGlueElement; //has always the size of the content element\t\n\n\n      var _textareaCoverElement; //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\n\n\n      var _scrollbarCornerElement;\n\n      var _scrollbarHorizontalElement;\n\n      var _scrollbarHorizontalTrackElement;\n\n      var _scrollbarHorizontalHandleElement;\n\n      var _scrollbarVerticalElement;\n\n      var _scrollbarVerticalTrackElement;\n\n      var _scrollbarVerticalHandleElement;\n\n      var _windowElementNative;\n\n      var _documentElementNative;\n\n      var _targetElementNative;\n\n      var _hostElementNative;\n\n      var _sizeAutoObserverElementNative;\n\n      var _sizeObserverElementNative;\n\n      var _paddingElementNative;\n\n      var _viewportElementNative;\n\n      var _contentElementNative; //Cache:\t\n\n\n      var _hostSizeCache;\n\n      var _contentScrollSizeCache;\n\n      var _arrangeContentSizeCache;\n\n      var _hasOverflowCache;\n\n      var _hideOverflowCache;\n\n      var _widthAutoCache;\n\n      var _heightAutoCache;\n\n      var _cssBoxSizingCache;\n\n      var _cssPaddingCache;\n\n      var _cssBorderCache;\n\n      var _cssMarginCache;\n\n      var _cssDirectionCache;\n\n      var _cssDirectionDetectedCache;\n\n      var _paddingAbsoluteCache;\n\n      var _clipAlwaysCache;\n\n      var _contentGlueSizeCache;\n\n      var _overflowBehaviorCache;\n\n      var _overflowAmountCache;\n\n      var _ignoreOverlayScrollbarHidingCache;\n\n      var _autoUpdateCache;\n\n      var _sizeAutoCapableCache;\n\n      var _contentElementScrollSizeChangeDetectedCache;\n\n      var _hostElementSizeChangeDetectedCache;\n\n      var _scrollbarsVisibilityCache;\n\n      var _scrollbarsAutoHideCache;\n\n      var _scrollbarsClickScrollingCache;\n\n      var _scrollbarsDragScrollingCache;\n\n      var _resizeCache;\n\n      var _normalizeRTLCache;\n\n      var _classNameCache;\n\n      var _oldClassName;\n\n      var _textareaAutoWrappingCache;\n\n      var _textareaInfoCache;\n\n      var _textareaSizeCache;\n\n      var _textareaDynHeightCache;\n\n      var _textareaDynWidthCache;\n\n      var _bodyMinSizeCache;\n\n      var _updateAutoCache = {}; //MutationObserver:\t\n\n      var _mutationObserverHost;\n\n      var _mutationObserverContent;\n\n      var _mutationObserverHostCallback;\n\n      var _mutationObserverContentCallback;\n\n      var _mutationObserversConnected;\n\n      var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\n\n      var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget); //events:\t\n\n\n      var _destroyEvents = []; //textarea:\t\n\n      var _textareaHasFocus; //scrollbars:\t\n\n\n      var _scrollbarsAutoHideTimeoutId;\n\n      var _scrollbarsAutoHideMoveTimeoutId;\n\n      var _scrollbarsAutoHideDelay;\n\n      var _scrollbarsAutoHideNever;\n\n      var _scrollbarsAutoHideScroll;\n\n      var _scrollbarsAutoHideMove;\n\n      var _scrollbarsAutoHideLeave;\n\n      var _scrollbarsHandleHovered;\n\n      var _scrollbarsHandlesDefineScrollPos; //resize\t\n\n\n      var _resizeNone;\n\n      var _resizeBoth;\n\n      var _resizeHorizontal;\n\n      var _resizeVertical; //==== Event Listener ====//\t\n\n      /**\t\r\n       * Adds or removes a event listener from the given element. \t\r\n       * @param element The element to which the event listener shall be applied or removed.\t\r\n       * @param eventNames The name(s) of the events.\t\r\n       * @param listener The method which shall be called.\t\r\n       * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n       * @param passiveOrOptions The options for the event.\r\n       */\n\n\n      function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\n        var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\n        var method = remove ? 'removeEventListener' : 'addEventListener';\n        var onOff = remove ? 'off' : 'on';\n        var events = collected ? false : eventNames.split(_strSpace);\n        var i = 0;\n        var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\n        var passive = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive : passiveOrOptions) || false;\n        var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\n        var nativeParam = _supportPassiveEvents ? {\n          passive: passive,\n          capture: capture\n        } : capture;\n\n        if (collected) {\n          for (; i < eventNames[LEXICON.l]; i++) setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\n        } else {\n          for (; i < events[LEXICON.l]; i++) {\n            if (_supportPassiveEvents) {\n              element[0][method](events[i], listener, nativeParam);\n            } else {\n              element[onOff](events[i], listener);\n            }\n          }\n        }\n      }\n\n      function addDestroyEventListener(element, eventNames, listener, passive) {\n        setupResponsiveEventListener(element, eventNames, listener, false, passive);\n\n        _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\n      } //==== Resize Observer ====//\n\n      /**\r\n       * Adds or removes a resize observer from the given element.\r\n       * @param targetElement The element to which the resize observer shall be added or removed.\r\n       * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n       */\n\n\n      function setupResizeObserver(targetElement, onElementResizedCallback) {\n        if (targetElement) {\n          var resizeObserver = COMPATIBILITY.rO();\n          var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\n          var strChildNodes = 'childNodes';\n          var constScroll = 3333333;\n\n          var callback = function () {\n            targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\n\n            onElementResizedCallback();\n          }; //add resize observer:\n\n\n          if (onElementResizedCallback) {\n            if (_supportResizeObserver) {\n              var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\n              var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\n              observer.observe(element);\n            } else {\n              if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                targetElement.prepend(generateDiv(_classNameResizeObserverElement, generateDiv({\n                  c: _classNameResizeObserverItemElement,\n                  dir: 'ltr'\n                }, generateDiv(_classNameResizeObserverItemElement, generateDiv(_classNameResizeObserverItemFinalElement)) + generateDiv(_classNameResizeObserverItemElement, generateDiv({\n                  c: _classNameResizeObserverItemFinalElement,\n                  style: 'width: 200%; height: 200%'\n                })))));\n                var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\n                var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\n                var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\n                var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\n                var widthCache = observerElement[LEXICON.oW];\n                var heightCache = observerElement[LEXICON.oH];\n                var isDirty;\n                var rAFId;\n                var currWidth;\n                var currHeight;\n                var factor = 2;\n                var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\n\n                var reset = function () {\n                  /*\r\n                   var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                   var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                   var expandChildCSS = {};\r\n                   expandChildCSS[_strWidth] = sizeResetWidth;\r\n                   expandChildCSS[_strHeight] = sizeResetHeight;\r\n                   expandElementChild.css(expandChildCSS);\r\n                       expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                   shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                   */\n                  expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n\n                  shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                };\n\n                var onResized = function () {\n                  rAFId = 0;\n                  if (!isDirty) return;\n                  widthCache = currWidth;\n                  heightCache = currHeight;\n                  callback();\n                };\n\n                var onScroll = function (event) {\n                  currWidth = observerElement[LEXICON.oW];\n                  currHeight = observerElement[LEXICON.oH];\n                  isDirty = currWidth != widthCache || currHeight != heightCache;\n\n                  if (event && isDirty && !rAFId) {\n                    COMPATIBILITY.cAF()(rAFId);\n                    rAFId = COMPATIBILITY.rAF()(onResized);\n                  } else if (!event) onResized();\n\n                  reset();\n\n                  if (event) {\n                    COMPATIBILITY.prvD(event);\n                    COMPATIBILITY.stpP(event);\n                  }\n\n                  return false;\n                };\n\n                var expandChildCSS = {};\n                var observerElementCSS = {};\n                setTopRightBottomLeft(observerElementCSS, _strEmpty, [-((nativeScrollbarSize.y + 1) * factor), nativeScrollbarSize.x * -factor, nativeScrollbarSize.y * -factor, -((nativeScrollbarSize.x + 1) * factor)]);\n                FRAMEWORK(observerElement).css(observerElementCSS);\n                expandElement.on(_strScroll, onScroll);\n                shrinkElement.on(_strScroll, onScroll);\n                targetElement.on(strAnimationStartEvent, function () {\n                  onScroll(false);\n                }); //lets assume that the divs will never be that large and a constant value is enough\n\n                expandChildCSS[_strWidth] = constScroll;\n                expandChildCSS[_strHeight] = constScroll;\n                expandElementChild.css(expandChildCSS);\n                reset();\n              } else {\n                var attachEvent = _documentElementNative.attachEvent;\n                var isIE = _msieVersion !== undefined;\n\n                if (attachEvent) {\n                  targetElement.prepend(generateDiv(_classNameResizeObserverElement));\n                  findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\n                } else {\n                  var obj = _documentElementNative.createElement(TYPES.o);\n\n                  obj.setAttribute(LEXICON.ti, '-1');\n                  obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\n\n                  obj.onload = function () {\n                    var wnd = this.contentDocument.defaultView;\n                    wnd.addEventListener('resize', callback);\n                    wnd.document.documentElement.style.display = 'none';\n                  };\n\n                  obj.type = 'text/html';\n                  if (isIE) targetElement.prepend(obj);\n                  obj.data = 'about:blank';\n                  if (!isIE) targetElement.prepend(obj);\n                  targetElement.on(strAnimationStartEvent, callback);\n                }\n              }\n            }\n\n            if (targetElement[0] === _sizeObserverElementNative) {\n              var directionChanged = function () {\n                var dir = _hostElement.css('direction');\n\n                var css = {};\n                var scrollLeftValue = 0;\n                var result = false;\n\n                if (dir !== _cssDirectionDetectedCache) {\n                  if (dir === 'ltr') {\n                    css[_strLeft] = 0;\n                    css[_strRight] = _strAuto;\n                    scrollLeftValue = constScroll;\n                  } else {\n                    css[_strLeft] = _strAuto;\n                    css[_strRight] = 0;\n                    scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\n                  } //execution order is important for IE!!!\n\n\n                  _sizeObserverElement.children().eq(0).css(css);\n\n                  _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\n\n                  _cssDirectionDetectedCache = dir;\n                  result = true;\n                }\n\n                return result;\n              };\n\n              directionChanged();\n              addDestroyEventListener(targetElement, _strScroll, function (event) {\n                if (directionChanged()) update();\n                COMPATIBILITY.prvD(event);\n                COMPATIBILITY.stpP(event);\n                return false;\n              });\n            }\n          } //remove resize observer:\n          else {\n            if (_supportResizeObserver) {\n              var element = targetElement.contents()[0];\n              var resizeObserverObj = element[_strResizeObserverProperty];\n\n              if (resizeObserverObj) {\n                resizeObserverObj.disconnect();\n                delete element[_strResizeObserverProperty];\n              }\n            } else {\n              remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\n            }\n          }\n        }\n      }\n      /**\r\n       * Freezes or unfreezes the given resize observer.\r\n       * @param targetElement The element to which the target resize observer is applied.\r\n       * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n       \r\n      function freezeResizeObserver(targetElement, freeze) {\r\n          if (targetElement !== undefined) {\r\n              if(freeze) {\r\n                  if (_supportResizeObserver) {\r\n                      var element = targetElement.contents()[0];\r\n                      element[_strResizeObserverProperty].unobserve(element);\r\n                  }\r\n                  else {\r\n                      targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                      var w = targetElement.css(_strWidth);\r\n                      var h = targetElement.css(_strHeight);\r\n                      var css = {};\r\n                      css[_strWidth] = w;\r\n                      css[_strHeight] = h;\r\n                      targetElement.css(css);\r\n                  }\r\n              }\r\n              else {\r\n                  if (_supportResizeObserver) {\r\n                      var element = targetElement.contents()[0];\r\n                      element[_strResizeObserverProperty].observe(element);\r\n                  }\r\n                  else {\r\n                      var css = { };\r\n                      css[_strHeight] = _strEmpty;\r\n                      css[_strWidth] = _strEmpty;\r\n                      targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      */\n      //==== Mutation Observers ====//\n\n      /**\r\n       * Creates MutationObservers for the host and content Element if they are supported.\r\n       */\n\n\n      function createMutationObservers() {\n        if (_supportMutationObserver) {\n          var mutationObserverContentLag = 11;\n          var mutationObserver = COMPATIBILITY.mO();\n          var contentLastUpdate = COMPATIBILITY.now();\n          var mutationTarget;\n          var mutationAttrName;\n          var mutationIsClass;\n          var oldMutationVal;\n          var newClassVal;\n          var hostClassNameRegex;\n          var contentTimeout;\n          var now;\n          var sizeAuto;\n          var action;\n\n          _mutationObserverHostCallback = function (mutations) {\n            var doUpdate = false;\n            var doUpdateForce = false;\n            var mutation;\n            var mutatedAttrs = [];\n\n            if (_initialized && !_sleeping) {\n              each(mutations, function () {\n                mutation = this;\n                mutationTarget = mutation.target;\n                mutationAttrName = mutation.attributeName;\n                mutationIsClass = mutationAttrName === LEXICON.c;\n                oldMutationVal = mutation.oldValue;\n                newClassVal = mutationTarget.className;\n\n                if (_domExists && mutationIsClass && !doUpdateForce) {\n                  // if old class value contains _classNameHostElementForeign and new class value doesn't\n                  if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\n                    hostClassNameRegex = createHostClassNameRegExp(true);\n                    _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\n                      return name.match(hostClassNameRegex);\n                    })).join(_strSpace);\n                    doUpdate = doUpdateForce = true;\n                  }\n                }\n\n                if (!doUpdate) {\n                  doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;\n                }\n\n                mutatedAttrs.push(mutationAttrName);\n              });\n              updateViewportAttrsFromTarget(mutatedAttrs);\n              if (doUpdate) _base.update(doUpdateForce || _strAuto);\n            }\n\n            return doUpdate;\n          };\n\n          _mutationObserverContentCallback = function (mutations) {\n            var doUpdate = false;\n            var mutation;\n\n            if (_initialized && !_sleeping) {\n              each(mutations, function () {\n                mutation = this;\n                doUpdate = isUnknownMutation(mutation);\n                return !doUpdate;\n              });\n\n              if (doUpdate) {\n                now = COMPATIBILITY.now();\n                sizeAuto = _heightAutoCache || _widthAutoCache;\n\n                action = function () {\n                  if (!_destroyed) {\n                    contentLastUpdate = now; //if cols, rows or wrap attr was changed\n\n                    if (_isTextarea) textareaUpdate();\n                    if (sizeAuto) update();else _base.update(_strAuto);\n                  }\n                };\n\n                clearTimeout(contentTimeout);\n                if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto) action();else contentTimeout = setTimeout(action, mutationObserverContentLag);\n              }\n            }\n\n            return doUpdate;\n          };\n\n          _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\n          _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\n        }\n      }\n      /**\r\n       * Connects the MutationObservers if they are supported.\r\n       */\n\n\n      function connectMutationObservers() {\n        if (_supportMutationObserver && !_mutationObserversConnected) {\n          _mutationObserverHost.observe(_hostElementNative, {\n            attributes: true,\n            attributeOldValue: true,\n            attributeFilter: _mutationObserverAttrsHost\n          });\n\n          _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\n            attributes: true,\n            attributeOldValue: true,\n            subtree: !_isTextarea,\n            childList: !_isTextarea,\n            characterData: !_isTextarea,\n            attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\n          });\n\n          _mutationObserversConnected = true;\n        }\n      }\n      /**\r\n       * Disconnects the MutationObservers if they are supported.\r\n       */\n\n\n      function disconnectMutationObservers() {\n        if (_supportMutationObserver && _mutationObserversConnected) {\n          _mutationObserverHost.disconnect();\n\n          _mutationObserverContent.disconnect();\n\n          _mutationObserversConnected = false;\n        }\n      } //==== Events of elements ====//\n\n      /**\r\n       * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n       * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n       * If there are any size changes, the update method gets called.\r\n       */\n\n\n      function hostOnResized() {\n        if (!_sleeping) {\n          var changed;\n          var hostSize = {\n            w: _sizeObserverElementNative[LEXICON.sW],\n            h: _sizeObserverElementNative[LEXICON.sH]\n          };\n          changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\n          _hostElementSizeChangeDetectedCache = hostSize;\n          if (changed) update({\n            _hostSizeChanged: true\n          });\n        }\n      }\n      /**\r\n       * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n       */\n\n\n      function hostOnMouseEnter() {\n        if (_scrollbarsAutoHideLeave) refreshScrollbarsAutoHide(true);\n      }\n      /**\r\n       * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n       */\n\n\n      function hostOnMouseLeave() {\n        if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging)) refreshScrollbarsAutoHide(false);\n      }\n      /**\r\n       * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n       */\n\n\n      function hostOnMouseMove() {\n        if (_scrollbarsAutoHideMove) {\n          refreshScrollbarsAutoHide(true);\n          clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\n          _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\n            if (_scrollbarsAutoHideMove && !_destroyed) refreshScrollbarsAutoHide(false);\n          }, 100);\n        }\n      }\n      /**\r\n       * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n       * @param event The select start event.\r\n       */\n\n\n      function documentOnSelectStart(event) {\n        COMPATIBILITY.prvD(event);\n        return false;\n      }\n      /**\t\r\n       * A callback which will be called after a element has loaded.\t\r\n       */\n\n\n      function updateOnLoadCallback(event) {\n        var elm = FRAMEWORK(event.target);\n        eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n          if (elm.is(updateOnLoadSelector)) {\n            update({\n              _contentSizeChanged: true\n            });\n          }\n        });\n      }\n      /**\r\n      * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n      * @param destroy Indicates whether the events shall be added or removed.\r\n      */\n\n\n      function setupHostMouseTouchEvents(destroy) {\n        if (!destroy) setupHostMouseTouchEvents(true);\n        setupResponsiveEventListener(_hostElement, _strMouseTouchMoveEvent.split(_strSpace)[0], hostOnMouseMove, !_scrollbarsAutoHideMove || destroy, true);\n        setupResponsiveEventListener(_hostElement, [_strMouseEnter, _strMouseLeave], [hostOnMouseEnter, hostOnMouseLeave], !_scrollbarsAutoHideLeave || destroy, true); //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\n\n        if (!_initialized && !destroy) _hostElement.one('mouseover', hostOnMouseEnter);\n      } //==== Update Detection ====//\n\n      /**\r\n       * Measures the min width and min height of the body element and refreshes the related cache.\r\n       * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n       */\n\n\n      function bodyMinSizeChanged() {\n        var bodyMinSize = {};\n\n        if (_isBody && _contentArrangeElement) {\n          bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\n          bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\n          bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\n          bodyMinSize.f = true; //flag for \"measured at least once\"\n        }\n\n        _bodyMinSizeCache = bodyMinSize;\n        return !!bodyMinSize.c;\n      }\n      /**\r\n       * Returns true if the class names really changed (new class without plugin host prefix)\r\n       * @param oldClassNames The old ClassName string or array.\r\n       * @param newClassNames The new ClassName string or array.\r\n       * @returns {boolean} True if the class names has really changed, false otherwise.\r\n       */\n\n\n      function hostClassNamesChanged(oldClassNames, newClassNames) {\n        var currClasses = typeof newClassNames == TYPES.s ? newClassNames.split(_strSpace) : [];\n        var oldClasses = typeof oldClassNames == TYPES.s ? oldClassNames.split(_strSpace) : [];\n        var diff = getArrayDifferences(oldClasses, currClasses); // remove none theme from diff list to prevent update\n\n        var idx = inArray(_classNameThemeNone, diff);\n        var i;\n        var regex;\n        if (idx > -1) diff.splice(idx, 1);\n\n        if (diff[LEXICON.l] > 0) {\n          regex = createHostClassNameRegExp(true, true);\n\n          for (i = 0; i < diff.length; i++) {\n            if (!diff[i].match(regex)) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      }\n      /**\r\n       * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n       * @param mutation The mutation which shall be checked.\r\n       * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n       */\n\n\n      function isUnknownMutation(mutation) {\n        var attributeName = mutation.attributeName;\n        var mutationTarget = mutation.target;\n        var mutationType = mutation.type;\n        var strClosest = 'closest';\n        if (mutationTarget === _contentElementNative) return attributeName === null;\n\n        if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\n          //ignore className changes by the plugin\t\n          if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement)) return hostClassNamesChanged(mutation.oldValue, mutationTarget.className); //only do it of browser support it natively\t\n\n          if (typeof mutationTarget[strClosest] != TYPES.f) return true;\n          if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null) return false;\n        }\n\n        return true;\n      }\n      /**\r\n       * Returns true if the content size was changed since the last time this method was called.\r\n       * @returns {boolean} True if the content size was changed, false otherwise.\r\n       */\n\n\n      function updateAutoContentSizeChanged() {\n        if (_sleeping) return false;\n        var contentMeasureElement = getContentMeasureElement();\n        var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\n        var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\n        var css = {};\n        var float;\n        var bodyMinSizeC;\n        var changed;\n        var contentElementScrollSize;\n\n        if (setCSS) {\n          float = _contentElement.css(_strFloat);\n          css[_strFloat] = _isRTL ? _strRight : _strLeft;\n          css[_strWidth] = _strAuto;\n\n          _contentElement.css(css);\n        }\n\n        contentElementScrollSize = {\n          w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\n          h: contentMeasureElement[LEXICON.sH] + textareaValueLength\n        };\n\n        if (setCSS) {\n          css[_strFloat] = float;\n          css[_strWidth] = _strHundredPercent;\n\n          _contentElement.css(css);\n        }\n\n        bodyMinSizeC = bodyMinSizeChanged();\n        changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\n        _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\n        return changed || bodyMinSizeC;\n      }\n      /**\r\n       * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n       * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n       */\n\n\n      function meaningfulAttrsChanged() {\n        if (_sleeping || _mutationObserversConnected) return;\n        var elem;\n        var curr;\n        var cache;\n        var changedAttrs = [];\n        var checks = [{\n          _elem: _hostElement,\n          _attrs: _mutationObserverAttrsHost.concat(':visible')\n        }, {\n          _elem: _isTextarea ? _targetElement : undefined,\n          _attrs: _mutationObserverAttrsTextarea\n        }];\n        each(checks, function (index, check) {\n          elem = check._elem;\n\n          if (elem) {\n            each(check._attrs, function (index, attr) {\n              curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\n              cache = _updateAutoCache[attr];\n\n              if (checkCache(curr, cache)) {\n                changedAttrs.push(attr);\n              }\n\n              _updateAutoCache[attr] = curr;\n            });\n          }\n        });\n        updateViewportAttrsFromTarget(changedAttrs);\n        return changedAttrs[LEXICON.l] > 0;\n      }\n      /**\r\n       * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n       * @param propertyName The CSS property name.\r\n       * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n       */\n\n\n      function isSizeAffectingCSSProperty(propertyName) {\n        if (!_initialized) return true;\n        var flexGrow = 'flex-grow';\n        var flexShrink = 'flex-shrink';\n        var flexBasis = 'flex-basis';\n        var affectingPropsX = [_strWidth, _strMinMinus + _strWidth, _strMaxMinus + _strWidth, _strMarginMinus + _strLeft, _strMarginMinus + _strRight, _strLeft, _strRight, 'font-weight', 'word-spacing', flexGrow, flexShrink, flexBasis];\n        var affectingPropsXContentBox = [_strPaddingMinus + _strLeft, _strPaddingMinus + _strRight, _strBorderMinus + _strLeft + _strWidth, _strBorderMinus + _strRight + _strWidth];\n        var affectingPropsY = [_strHeight, _strMinMinus + _strHeight, _strMaxMinus + _strHeight, _strMarginMinus + _strTop, _strMarginMinus + _strBottom, _strTop, _strBottom, 'line-height', flexGrow, flexShrink, flexBasis];\n        var affectingPropsYContentBox = [_strPaddingMinus + _strTop, _strPaddingMinus + _strBottom, _strBorderMinus + _strTop + _strWidth, _strBorderMinus + _strBottom + _strWidth];\n        var _strS = 's';\n        var _strVS = 'v-s';\n        var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\n        var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\n        var sizeIsAffected = false;\n\n        var checkPropertyName = function (arr, name) {\n          for (var i = 0; i < arr[LEXICON.l]; i++) {\n            if (arr[i] === name) return true;\n          }\n\n          return false;\n        };\n\n        if (checkY) {\n          sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\n          if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\n        }\n\n        if (checkX && !sizeIsAffected) {\n          sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\n          if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\n        }\n\n        return sizeIsAffected;\n      } //==== Update ====//\n\n      /**\r\n       * Sets the attribute values of the viewport element to the values from the target element.\r\n       * The value of a attribute is only set if the attribute is whitelisted.\r\n       * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n       */\n\n\n      function updateViewportAttrsFromTarget(attrs) {\n        attrs = attrs || _viewportAttrsFromTarget;\n        each(attrs, function (index, attr) {\n          if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\n            var targetAttr = _targetElement.attr(attr);\n\n            if (type(targetAttr) == TYPES.s) {\n              _viewportElement.attr(attr, targetAttr);\n            } else {\n              _viewportElement.removeAttr(attr);\n            }\n          }\n        });\n      }\n      /**\r\n       * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n       */\n\n\n      function textareaUpdate() {\n        if (!_sleeping) {\n          var wrapAttrOff = !_textareaAutoWrappingCache;\n          var minWidth = _viewportSize.w;\n          var minHeight = _viewportSize.h;\n          var css = {};\n          var doMeasure = _widthAutoCache || wrapAttrOff;\n          var origWidth;\n          var width;\n          var origHeight;\n          var height; //reset min size\n\n          css[_strMinMinus + _strWidth] = _strEmpty;\n          css[_strMinMinus + _strHeight] = _strEmpty; //set width auto\n\n          css[_strWidth] = _strAuto;\n\n          _targetElement.css(css); //measure width\n\n\n          origWidth = _targetElementNative[LEXICON.oW];\n          width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\n          /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\n          //set measured width\n\n          css[_strWidth] = _widthAutoCache ? _strAuto\n          /*width*/\n          : _strHundredPercent;\n          css[_strMinMinus + _strWidth] = _strHundredPercent; //set height auto\n\n          css[_strHeight] = _strAuto;\n\n          _targetElement.css(css); //measure height\n\n\n          origHeight = _targetElementNative[LEXICON.oH];\n          height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1); //append correct size values\n\n          css[_strWidth] = width;\n          css[_strHeight] = height;\n\n          _textareaCoverElement.css(css); //apply min width / min height to prevent textarea collapsing\n\n\n          css[_strMinMinus + _strWidth] = minWidth\n          /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/\n          ;\n          css[_strMinMinus + _strHeight] = minHeight\n          /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/\n          ;\n\n          _targetElement.css(css);\n\n          return {\n            _originalWidth: origWidth,\n            _originalHeight: origHeight,\n            _dynamicWidth: width,\n            _dynamicHeight: height\n          };\n        }\n      }\n      /**\r\n       * Updates the plugin and DOM to the current options.\r\n       * This method should only be called if a update is 100% required.\r\n       * @param updateHints A objects which contains hints for this update:\r\n       * {\r\n       *   _hostSizeChanged : boolean,\r\n       *   _contentSizeChanged : boolean,\r\n       *   _force : boolean,                             == preventSwallowing\r\n       *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n      *  }\r\n       */\n\n\n      function update(updateHints) {\n        clearTimeout(_swallowedUpdateTimeout);\n        updateHints = updateHints || {};\n        _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\n        _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\n        _swallowedUpdateHints._force |= updateHints._force;\n        var now = COMPATIBILITY.now();\n        var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\n        var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\n        var force = !!_swallowedUpdateHints._force;\n        var changedOptions = updateHints._changedOptions;\n        var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && !_heightAutoCache && !_widthAutoCache;\n        var displayIsHidden;\n        if (swallow) _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag); //abort update due to:\n        //destroyed\n        //swallowing\n        //sleeping\n        //host is hidden or has false display\n\n        if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(':hidden')) || _hostElement.css('display') === 'inline') return;\n        _lastUpdateTime = now;\n        _swallowedUpdateHints = {}; //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\n\n        if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n          //native scrollbars are hidden, so change the values to zero\n          _nativeScrollbarSize.x = 0;\n          _nativeScrollbarSize.y = 0;\n        } else {\n          //refresh native scrollbar size (in case of zoom)\n          _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n        } // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\n        // The calculation: [scrollbar size +3 *3]\n        // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\n        // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\n\n\n        _nativeScrollbarMinSize = {\n          x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\n          y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\n        };\n        changedOptions = changedOptions || {}; //freezeResizeObserver(_sizeObserverElement, true);\n        //freezeResizeObserver(_sizeAutoObserverElement, true);\n\n        var checkCacheAutoForce = function () {\n          return checkCache.apply(this, [].slice.call(arguments).concat([force]));\n        }; //save current scroll offset\n\n\n        var currScroll = {\n          x: _viewportElement[_strScrollLeft](),\n          y: _viewportElement[_strScrollTop]()\n        };\n        var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\n        var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea; //scrollbars visibility:\n\n        var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\n        var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache); //scrollbars autoHide:\n\n        var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\n        var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache); //scrollbars click scrolling\n\n        var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\n        var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache); //scrollbars drag scrolling\n\n        var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\n        var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache); //className\n\n        var className = _currentPreparedOptions.className;\n        var classNameChanged = checkCacheAutoForce(className, _classNameCache); //resize\n\n        var resize = _currentPreparedOptions.resize;\n        var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\n        //paddingAbsolute\n\n        var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\n        var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache); //clipAlways\n\n        var clipAlways = _currentPreparedOptions.clipAlways;\n        var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache); //sizeAutoCapable\n\n        var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\n\n        var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache); //showNativeScrollbars\n\n        var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\n        var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache); //autoUpdate\n\n        var autoUpdate = _currentPreparedOptions.autoUpdate;\n        var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache); //overflowBehavior\n\n        var overflowBehavior = _currentPreparedOptions.overflowBehavior;\n        var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force); //dynWidth:\n\n        var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\n        var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth); //dynHeight:\n\n        var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\n        var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight); //scrollbars visibility\n\n        _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\n        _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\n        _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\n        _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l'; //scrollbars autoHideDelay\n\n        _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay; //old className\n\n        _oldClassName = _classNameCache; //resize\n\n        _resizeNone = resize === 'n';\n        _resizeBoth = resize === 'b';\n        _resizeHorizontal = resize === 'h';\n        _resizeVertical = resize === 'v'; //normalizeRTL\n\n        _normalizeRTLCache = _currentPreparedOptions.normalizeRTL; //ignore overlay scrollbar hiding\n\n        ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y; //refresh options cache\n\n        _scrollbarsVisibilityCache = scrollbarsVisibility;\n        _scrollbarsAutoHideCache = scrollbarsAutoHide;\n        _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\n        _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\n        _classNameCache = className;\n        _resizeCache = resize;\n        _paddingAbsoluteCache = paddingAbsolute;\n        _clipAlwaysCache = clipAlways;\n        _sizeAutoCapableCache = sizeAutoCapable;\n        _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\n        _autoUpdateCache = autoUpdate;\n        _overflowBehaviorCache = extendDeep({}, overflowBehavior);\n        _textareaDynWidthCache = textareaDynWidth;\n        _textareaDynHeightCache = textareaDynHeight;\n        _hasOverflowCache = _hasOverflowCache || {\n          x: false,\n          y: false\n        }; //set correct class name to the host element\n\n        if (classNameChanged) {\n          removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\n          addClass(_hostElement, className !== undefined && className !== null && className.length > 0 ? className : _classNameThemeNone);\n        } //set correct auto Update\n\n\n        if (autoUpdateChanged) {\n          if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {\n            disconnectMutationObservers();\n            autoUpdateLoop.add(_base);\n          } else {\n            autoUpdateLoop.remove(_base);\n            connectMutationObservers();\n          }\n        } //activate or deactivate size auto capability\n\n\n        if (sizeAutoCapableChanged) {\n          if (sizeAutoCapable) {\n            if (_contentGlueElement) {\n              _contentGlueElement.show();\n            } else {\n              _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\n\n              _paddingElement.before(_contentGlueElement);\n            }\n\n            if (_sizeAutoObserverAdded) {\n              _sizeAutoObserverElement.show();\n            } else {\n              _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\n              _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\n\n              _contentGlueElement.before(_sizeAutoObserverElement);\n\n              var oldSize = {\n                w: -1,\n                h: -1\n              };\n              setupResizeObserver(_sizeAutoObserverElement, function () {\n                var newSize = {\n                  w: _sizeAutoObserverElementNative[LEXICON.oW],\n                  h: _sizeAutoObserverElementNative[LEXICON.oH]\n                };\n\n                if (checkCache(newSize, oldSize)) {\n                  if (_initialized && _heightAutoCache && newSize.h > 0 || _widthAutoCache && newSize.w > 0) {\n                    update();\n                  } else if (_initialized && !_heightAutoCache && newSize.h === 0 || !_widthAutoCache && newSize.w === 0) {\n                    update();\n                  }\n                }\n\n                oldSize = newSize;\n              });\n              _sizeAutoObserverAdded = true; //fix heightAuto detector bug if height is fixed but contentHeight is 0.\n              //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\n\n              if (_cssCalc !== null) _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\n            }\n          } else {\n            if (_sizeAutoObserverAdded) _sizeAutoObserverElement.hide();\n            if (_contentGlueElement) _contentGlueElement.hide();\n          }\n        } //if force, update all resizeObservers too\n\n\n        if (force) {\n          _sizeObserverElement.find('*').trigger(_strScroll);\n\n          if (_sizeAutoObserverAdded) _sizeAutoObserverElement.find('*').trigger(_strScroll);\n        } //display hidden:\n\n\n        displayIsHidden = displayIsHidden === undefined ? _hostElement.is(':hidden') : displayIsHidden; //textarea AutoWrapping:\n\n        var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\n        var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache); //detect direction:\n\n        var cssDirection = _hostElement.css('direction');\n\n        var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache); //detect box-sizing:\n\n        var boxSizing = _hostElement.css('box-sizing');\n\n        var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache); //detect padding:\n\n        var padding = getTopRightBottomLeftHost(_strPaddingMinus); //width + height auto detecting var:\n\n        var sizeAutoObserverElementBCRect; //exception occurs in IE8 sometimes (unknown exception)\n\n        try {\n          sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\n        } catch (ex) {\n          return;\n        }\n\n        _isRTL = cssDirection === 'rtl';\n        _isBorderBox = boxSizing === 'border-box';\n        var isRTLLeft = _isRTL ? _strLeft : _strRight;\n        var isRTLRight = _isRTL ? _strRight : _strLeft; //detect width auto:\n\n        var widthAutoResizeDetection = false;\n        var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== 'none'\n        /*|| _isTextarea */\n        ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;\n\n        if (sizeAutoCapable && !widthAutoObserverDetection) {\n          var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\n\n          var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\n\n          _contentGlueElement.css(_strWidth, _strAuto);\n\n          var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n          _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n          widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n\n          if (!widthAutoResizeDetection) {\n            _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\n\n            tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n          }\n        }\n\n        var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\n        var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\n        var wasWidthAuto = !widthAuto && _widthAutoCache; //detect height auto:\n\n        var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0\n        /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */\n        : false;\n        var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\n        var wasHeightAuto = !heightAuto && _heightAutoCache; //detect border:\n        //we need the border only if border box and auto size\n\n        var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;\n        var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;\n        var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY); //detect margin:\n\n        var margin = getTopRightBottomLeftHost(_strMarginMinus); //vars to apply correct css\n\n        var contentElementCSS = {};\n        var contentGlueElementCSS = {}; //funcs\n\n        var getHostSize = function () {\n          //has to be clientSize because offsetSize respect borders\n          return {\n            w: _hostElementNative[LEXICON.cW],\n            h: _hostElementNative[LEXICON.cH]\n          };\n        };\n\n        var getViewportSize = function () {\n          //viewport size is padding container because it never has padding, margin and a border\n          //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\n          //if this happens add the difference to the viewportSize to compensate the rounding error\n          return {\n            w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\n            h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\n          };\n        }; //set info for padding\n\n\n        var paddingAbsoluteX = _paddingX = padding.l + padding.r;\n        var paddingAbsoluteY = _paddingY = padding.t + padding.b;\n        paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\n        paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\n        padding.c = checkCacheAutoForce(padding, _cssPaddingCache); //set info for border\n\n        _borderX = border.l + border.r;\n        _borderY = border.t + border.b;\n        border.c = checkCacheAutoForce(border, _cssBorderCache); //set info for margin\n\n        _marginX = margin.l + margin.r;\n        _marginY = margin.t + margin.b;\n        margin.c = checkCacheAutoForce(margin, _cssMarginCache); //refresh cache\n\n        _textareaAutoWrappingCache = textareaAutoWrapping;\n        _cssDirectionCache = cssDirection;\n        _cssBoxSizingCache = boxSizing;\n        _widthAutoCache = widthAuto;\n        _heightAutoCache = heightAuto;\n        _cssPaddingCache = padding;\n        _cssBorderCache = border;\n        _cssMarginCache = margin; //IEFix direction changed\n\n        if (cssDirectionChanged && _sizeAutoObserverAdded) _sizeAutoObserverElement.css(_strFloat, isRTLRight); //apply padding:\n\n        if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\n          var paddingElementCSS = {};\n          var textareaCSS = {};\n          var paddingValues = [padding.t, padding.r, padding.b, padding.l];\n          setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\n\n          if (paddingAbsolute) {\n            setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\n            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\n          } else {\n            setTopRightBottomLeft(paddingElementCSS, _strEmpty);\n            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\n          }\n\n          _paddingElement.css(paddingElementCSS);\n\n          _targetElement.css(textareaCSS);\n        } //viewport size is padding container because it never has padding, margin and a border.\n\n\n        _viewportSize = getViewportSize(); //update Textarea\n\n        var textareaSize = _isTextarea ? textareaUpdate() : false;\n\n        var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\n\n        var textareaDynOrigSize = _isTextarea && textareaSize ? {\n          w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\n          h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\n        } : {};\n        _textareaSizeCache = textareaSize; //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\n\n        if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\n          contentElementCSS[_strHeight] = _strAuto;\n        } else if (heightAutoChanged || paddingAbsoluteChanged) {\n          contentElementCSS[_strHeight] = _strHundredPercent;\n        }\n\n        if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\n          contentElementCSS[_strWidth] = _strAuto;\n          contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\n        } else if (widthAutoChanged || paddingAbsoluteChanged) {\n          contentElementCSS[_strWidth] = _strHundredPercent;\n          contentElementCSS[_strFloat] = _strEmpty;\n          contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\n        }\n\n        if (widthAuto) {\n          //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\n          contentGlueElementCSS[_strWidth] = _strAuto;\n          contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\n          contentElementCSS[_strFloat] = isRTLRight;\n        } else {\n          contentGlueElementCSS[_strWidth] = _strEmpty;\n        }\n\n        if (heightAuto) {\n          //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\n          contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\n        } else {\n          contentGlueElementCSS[_strHeight] = _strEmpty;\n        }\n\n        if (sizeAutoCapable) _contentGlueElement.css(contentGlueElementCSS);\n\n        _contentElement.css(contentElementCSS); //CHECKPOINT HERE ~\n\n\n        contentElementCSS = {};\n        contentGlueElementCSS = {}; //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\n\n        if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\n          var strOverflow = 'overflow';\n          var strOverflowX = strOverflow + '-x';\n          var strOverflowY = strOverflow + '-y';\n          var strHidden = 'hidden';\n          var strVisible = 'visible'; //Reset the viewport (very important for natively overlaid scrollbars and zoom change\n          //don't change the overflow prop as it is very expensive and affects performance !A LOT!\n\n          if (!_nativeScrollbarStyling) {\n            var viewportElementResetCSS = {};\n            var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;\n            var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;\n            setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\n\n            _viewportElement.css(viewportElementResetCSS);\n          } //measure several sizes:\n\n\n          var contentMeasureElement = getContentMeasureElement(); //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\n\n          var contentSize = {\n            //use clientSize because natively overlaidScrollbars add borders\n            w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\n            h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\n          };\n          var scrollSize = {\n            w: contentMeasureElement[LEXICON.sW],\n            h: contentMeasureElement[LEXICON.sH]\n          }; //apply the correct viewport style and measure viewport size\n\n          if (!_nativeScrollbarStyling) {\n            viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\n            viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\n\n            _viewportElement.css(viewportElementResetCSS);\n          }\n\n          _viewportSize = getViewportSize(); //measure and correct several sizes\n\n          var hostSize = getHostSize();\n          var hostAbsoluteRectSize = {\n            w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\n            h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\n          };\n          var contentGlueSize = {\n            //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\n            //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\n            w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\n            h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\n          };\n          contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\n          _contentGlueSizeCache = contentGlueSize; //apply correct contentGlue size\n\n          if (sizeAutoCapable) {\n            //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\n            if (contentGlueSize.c || heightAuto || widthAuto) {\n              contentGlueElementCSS[_strWidth] = contentGlueSize.w;\n              contentGlueElementCSS[_strHeight] = contentGlueSize.h; //textarea-sizes are already calculated correctly at this point\n\n              if (!_isTextarea) {\n                contentSize = {\n                  //use clientSize because natively overlaidScrollbars add borders\n                  w: contentMeasureElement[LEXICON.cW],\n                  h: contentMeasureElement[LEXICON.cH]\n                };\n              }\n            }\n\n            var textareaCoverCSS = {};\n\n            var setContentGlueElementCSSfunction = function (horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var wh = scrollbarVars._w_h;\n              var strWH = scrollbarVars._width_height;\n              var autoSize = horizontal ? widthAuto : heightAuto;\n              var borderSize = horizontal ? _borderX : _borderY;\n              var paddingSize = horizontal ? _paddingX : _paddingY;\n              var marginSize = horizontal ? _marginX : _marginY;\n              var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize); //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\n\n              if (!autoSize || !autoSize && border.c) contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1; //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\n\n              if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\n                if (_isTextarea) textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\n                contentGlueElementCSS[strWH] -= 1;\n              } //make sure content glue size is at least 1\n\n\n              if (contentSize[wh] > 0) contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\n            };\n\n            setContentGlueElementCSSfunction(true);\n            setContentGlueElementCSSfunction(false);\n            if (_isTextarea) _textareaCoverElement.css(textareaCoverCSS);\n\n            _contentGlueElement.css(contentGlueElementCSS);\n          }\n\n          if (widthAuto) contentElementCSS[_strWidth] = _strHundredPercent;\n          if (widthAuto && !_isBorderBox && !_mutationObserversConnected) contentElementCSS[_strFloat] = 'none'; //apply and reset content style\n\n          _contentElement.css(contentElementCSS);\n\n          contentElementCSS = {}; //measure again, but this time all correct sizes:\n\n          var contentScrollSize = {\n            w: contentMeasureElement[LEXICON.sW],\n            h: contentMeasureElement[LEXICON.sH]\n          };\n          contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\n          _contentScrollSizeCache = contentScrollSize; //refresh viewport size after correct measuring\n\n          _viewportSize = getViewportSize();\n          hostSize = getHostSize();\n          hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\n          _hostSizeCache = hostSize;\n          var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\n          var previousOverflowAmount = _overflowAmountCache;\n          var overflowBehaviorIsVS = {};\n          var overflowBehaviorIsVH = {};\n          var overflowBehaviorIsS = {};\n          var overflowAmount = {};\n          var hasOverflow = {};\n          var hideOverflow = {};\n          var canScroll = {};\n\n          var viewportRect = _paddingElementNative[LEXICON.bCR]();\n\n          var setOverflowVariables = function (horizontal) {\n            var scrollbarVars = getScrollbarVars(horizontal);\n            var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n            var xyI = scrollbarVarsInverted._x_y;\n            var xy = scrollbarVars._x_y;\n            var wh = scrollbarVars._w_h;\n            var widthHeight = scrollbarVars._width_height;\n            var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\n            var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\n            var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\n            overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\n            overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\n            overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\n            overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\n            overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;\n            hasOverflow[xy] = overflowAmount[xy] > 0; //hideOverflow:\n            //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\n            //xs || ys : true === overflow is hidden by \"overflow: scroll\"\n\n            hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];\n            hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\n            canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\n          };\n\n          setOverflowVariables(true);\n          setOverflowVariables(false);\n          overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\n          _overflowAmountCache = overflowAmount;\n          hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\n          _hasOverflowCache = hasOverflow;\n          hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\n          _hideOverflowCache = hideOverflow; //if native scrollbar is overlay at x OR y axis, prepare DOM\n\n          if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\n            var borderDesign = 'px solid transparent';\n            var contentArrangeElementCSS = {};\n            var arrangeContent = {};\n            var arrangeChanged = force;\n            var setContentElementCSS;\n\n            if (hasOverflow.x || hasOverflow.y) {\n              arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\n              arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\n              arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\n              _arrangeContentSizeCache = arrangeContent;\n            }\n\n            if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\n              contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\n\n              setContentElementCSS = function (horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                var xy = scrollbarVars._x_y;\n                var strDirection = horizontal ? _strBottom : isRTLLeft;\n                var invertedAutoSize = horizontal ? heightAuto : widthAuto;\n\n                if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\n                  contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;\n                  contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;\n                } else {\n                  arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\n                  arrangeChanged = true;\n                }\n              };\n\n              if (_nativeScrollbarStyling) {\n                addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);\n              } else {\n                setContentElementCSS(true);\n                setContentElementCSS(false);\n              }\n            }\n\n            if (ignoreOverlayScrollbarHiding) {\n              arrangeContent.w = arrangeContent.h = _strEmpty;\n              arrangeChanged = true;\n            }\n\n            if (arrangeChanged && !_nativeScrollbarStyling) {\n              contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\n              contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\n\n              if (!_contentArrangeElement) {\n                _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\n\n                _viewportElement.prepend(_contentArrangeElement);\n              }\n\n              _contentArrangeElement.css(contentArrangeElementCSS);\n            }\n\n            _contentElement.css(contentElementCSS);\n          }\n\n          var viewportElementCSS = {};\n          var paddingElementCSS = {};\n          var setViewportCSS;\n\n          if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\n            viewportElementCSS[isRTLRight] = _strEmpty;\n\n            setViewportCSS = function (horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n              var xy = scrollbarVars._x_y;\n              var XY = scrollbarVars._X_Y;\n              var strDirection = horizontal ? _strBottom : isRTLLeft;\n\n              var reset = function () {\n                viewportElementCSS[strDirection] = _strEmpty;\n                _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\n              };\n\n              if (hasOverflow[xy] && hideOverflow[xy + 's']) {\n                viewportElementCSS[strOverflow + XY] = _strScroll;\n\n                if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\n                  reset();\n                } else {\n                  viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\n                  _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\n                }\n              } else {\n                viewportElementCSS[strOverflow + XY] = _strEmpty;\n                reset();\n              }\n            };\n\n            setViewportCSS(true);\n            setViewportCSS(false); // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \n            // make viewport element greater in size (Firefox hide Scrollbars fix)\n            // because firefox starts hiding scrollbars on too small elements\n            // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\n\n            if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {\n              viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\n              viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\n              viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\n              viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\n            } else {\n              viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\n            }\n\n            viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty; //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\n\n            if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {\n              //only hide if is Textarea\n              if (_isTextarea && hideOverflowForceTextarea) {\n                paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;\n              }\n            } else {\n              if (!clipAlways || overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y) {\n                //only un-hide if Textarea\n                if (_isTextarea) {\n                  paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;\n                }\n\n                viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;\n              }\n            }\n\n            _paddingElement.css(paddingElementCSS);\n\n            _viewportElement.css(viewportElementCSS);\n\n            viewportElementCSS = {}; //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\n\n            if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n              var elementStyle = _contentElementNative[LEXICON.s];\n              var dump;\n              elementStyle.webkitTransform = 'scale(1)';\n              elementStyle.display = 'run-in';\n              dump = _contentElementNative[LEXICON.oH];\n              elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\n\n              elementStyle.webkitTransform = _strEmpty;\n            }\n            /*\r\n            //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n            if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                _hostElement.hide();\r\n                var dump = _hostElementNative[LEXICON.oH];\r\n                _hostElement.show();\r\n            }\r\n            */\n\n          } //change to direction RTL and width auto Bugfix in Webkit\n          //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\n\n\n          contentElementCSS = {};\n\n          if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\n            if (_isRTL && widthAuto) {\n              var floatTmp = _contentElement.css(_strFloat);\n\n              var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\n\n              _contentElement.css(_strFloat, floatTmp);\n\n              var posLeftWithFloat = MATH.round(_contentElement.position().left);\n              if (posLeftWithoutFloat !== posLeftWithFloat) contentElementCSS[_strLeft] = posLeftWithoutFloat;\n            } else {\n              contentElementCSS[_strLeft] = _strEmpty;\n            }\n          }\n\n          _contentElement.css(contentElementCSS); //handle scroll position\n\n\n          if (_isTextarea && contentSizeChanged) {\n            var textareaInfo = getTextareaInfo();\n\n            if (textareaInfo) {\n              var textareaRowsChanged = _textareaInfoCache === undefined ? true : textareaInfo._rows !== _textareaInfoCache._rows;\n              var cursorRow = textareaInfo._cursorRow;\n              var cursorCol = textareaInfo._cursorColumn;\n              var widestRow = textareaInfo._widestRow;\n              var lastRow = textareaInfo._rows;\n              var lastCol = textareaInfo._columns;\n              var cursorPos = textareaInfo._cursorPosition;\n              var cursorMax = textareaInfo._cursorMax;\n              var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;\n              var textareaScrollAmount = {\n                x: !textareaAutoWrapping && cursorCol === lastCol && cursorRow === widestRow ? _overflowAmountCache.x : -1,\n                y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\n              };\n              currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\n\n              currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\n            }\n\n            _textareaInfoCache = textareaInfo;\n          }\n\n          if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache) currScroll.x += _contentBorderSize.w || 0;\n          if (widthAuto) _hostElement[_strScrollLeft](0);\n          if (heightAuto) _hostElement[_strScrollTop](0);\n\n          _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y); //scrollbars management:\n\n\n          var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\n          var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\n          var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\n\n          var refreshScrollbarsVisibility = function (showX, showY) {\n            showY = showY === undefined ? showX : showY;\n            refreshScrollbarAppearance(true, showX, canScroll.x);\n            refreshScrollbarAppearance(false, showY, canScroll.y);\n          }; //manage class name which indicates scrollable overflow\n\n\n          addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\n          addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\n          addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y); //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\n\n          if (cssDirectionChanged && !_isBody) {\n            addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\n          } //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\n\n\n          if (_isBody) addClass(_hostElement, _classNameHostResizeDisabled);\n\n          if (resizeChanged) {\n            addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\n            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\n            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\n            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\n            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\n          } //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\n\n\n          if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\n            if (ignoreOverlayScrollbarHiding) {\n              if (ignoreOverlayScrollbarHidingChanged) {\n                removeClass(_hostElement, _classNameHostScrolling);\n\n                if (ignoreOverlayScrollbarHiding) {\n                  refreshScrollbarsVisibility(false);\n                }\n              }\n            } else if (scrollbarsVisibilityAuto) {\n              refreshScrollbarsVisibility(canScroll.x, canScroll.y);\n            } else if (scrollbarsVisibilityVisible) {\n              refreshScrollbarsVisibility(true);\n            } else if (scrollbarsVisibilityHidden) {\n              refreshScrollbarsVisibility(false);\n            }\n          } //manage the scrollbars auto hide feature (auto hide them after specific actions)\n\n\n          if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\n            setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\n            refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\n          } //manage scrollbars handle length & offset - don't remove!\n\n\n          if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\n            refreshScrollbarHandleLength(true);\n            refreshScrollbarHandleOffset(true);\n            refreshScrollbarHandleLength(false);\n            refreshScrollbarHandleOffset(false);\n          } //manage interactivity\n\n\n          if (scrollbarsClickScrollingChanged) refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\n          if (scrollbarsDragScrollingChanged) refreshScrollbarsInteractive(false, scrollbarsDragScrolling); //callbacks:\n\n          dispatchCallback('onDirectionChanged', {\n            isRTL: _isRTL,\n            dir: cssDirection\n          }, cssDirectionChanged);\n          dispatchCallback('onHostSizeChanged', {\n            width: _hostSizeCache.w,\n            height: _hostSizeCache.h\n          }, hostSizeChanged);\n          dispatchCallback('onContentSizeChanged', {\n            width: _contentScrollSizeCache.w,\n            height: _contentScrollSizeCache.h\n          }, contentSizeChanged);\n          dispatchCallback('onOverflowChanged', {\n            x: hasOverflow.x,\n            y: hasOverflow.y,\n            xScrollable: hideOverflow.xs,\n            yScrollable: hideOverflow.ys,\n            clipped: hideOverflow.x || hideOverflow.y\n          }, hasOverflow.c || hideOverflow.c);\n          dispatchCallback('onOverflowAmountChanged', {\n            x: overflowAmount.x,\n            y: overflowAmount.y\n          }, overflowAmount.c);\n        } //fix body min size\n\n\n        if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\n          //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\n          if (!_bodyMinSizeCache.f) bodyMinSizeChanged();\n          if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x) _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\n          if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y) _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\n          _bodyMinSizeCache.c = false;\n        }\n\n        if (_initialized && changedOptions.updateOnLoad) {\n          updateElementsOnLoad();\n        } //freezeResizeObserver(_sizeObserverElement, false);\n        //freezeResizeObserver(_sizeAutoObserverElement, false);\n\n\n        dispatchCallback('onUpdated', {\n          forced: force\n        });\n      }\n      /**\r\n       * Updates the found elements of which the load event shall be handled.\r\n       */\n\n\n      function updateElementsOnLoad() {\n        if (!_isTextarea) {\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n            _contentElement.find(updateOnLoadSelector).each(function (i, el) {\n              // if element doesn't have a updateOnLoadCallback applied\n              if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\n                _updateOnLoadElms.push(el);\n\n                FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);\n              }\n            });\n          });\n        }\n      } //==== Options ====//\n\n      /**\r\n       * Sets new options but doesn't call the update method.\r\n       * @param newOptions The object which contains the new options.\r\n       * @returns {*} A object which contains the changed options.\r\n       */\n\n\n      function setOptions(newOptions) {\n        var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);\n\n        _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\n        _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\n        return validatedOpts._prepared;\n      } //==== Structure ====//\n\n      /**\r\n       * Builds or destroys the wrapper and helper DOM elements.\r\n       * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n       */\n\n      /**\r\n       * Builds or destroys the wrapper and helper DOM elements.\r\n       * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n       */\n\n\n      function setupStructureDOM(destroy) {\n        var strParent = 'parent';\n        var classNameResizeObserverHost = 'os-resize-observer-host';\n        var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\n        var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\n        var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\n        var adoptAttrsMap = {};\n\n        var applyAdoptedAttrs = function () {\n          var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\n          each(adoptAttrsMap, function (key, value) {\n            if (type(value) == TYPES.s) {\n              if (key == LEXICON.c) applyAdoptedAttrsElm.addClass(value);else applyAdoptedAttrsElm.attr(key, value);\n            }\n          });\n        };\n\n        var hostElementClassNames = [_classNameHostElement, _classNameHostElementForeign, _classNameHostTextareaElement, _classNameHostResizeDisabled, _classNameHostRTL, _classNameHostScrollbarHorizontalHidden, _classNameHostScrollbarVerticalHidden, _classNameHostTransition, _classNameHostScrolling, _classNameHostOverflow, _classNameHostOverflowX, _classNameHostOverflowY, _classNameThemeNone, _classNameTextareaElement, _classNameTextInherit, _classNameCache].join(_strSpace);\n        var hostElementCSS = {}; //get host element as first element, because that's the most upper element and required for the other elements\n\n        _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);\n        _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\n        _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\n        _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\n        _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\n        _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined); //add this class to workaround class changing issues with UI frameworks especially Vue\n\n        if (_domExists) addClass(_hostElement, _classNameHostElementForeign); //on destroy, remove all generated class names from the host element before collecting the adopted attributes \n        //to prevent adopting generated class names\n\n        if (destroy) removeClass(_hostElement, hostElementClassNames); //collect all adopted attributes\n\n        adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\n\n        if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\n          each(adoptAttrs, function (i, v) {\n            if (type(v) == TYPES.s) {\n              adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\n            }\n          });\n        }\n\n        if (!destroy) {\n          if (_isTextarea) {\n            if (!_currentPreparedOptions.sizeAutoCapable) {\n              hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\n              hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\n            }\n\n            if (!_domExists) _targetElement.addClass(_classNameTextInherit).wrap(_hostElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n            _hostElement = _targetElement[strParent]().css(hostElementCSS);\n          }\n\n          if (!_domExists) {\n            //add the correct class to the target element\n            addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement); //wrap the content into the generated elements to create the required DOM\n\n            _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n\n            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n\n            if (_isTextarea) {\n              _contentElement.prepend(_textareaCoverElement);\n\n              applyAdoptedAttrs();\n            }\n          }\n\n          if (_nativeScrollbarStyling) addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n          if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y) addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\n          if (_isBody) addClass(_htmlElement, _classNameHTMLElement);\n          _sizeObserverElementNative = _sizeObserverElement[0];\n          _hostElementNative = _hostElement[0];\n          _paddingElementNative = _paddingElement[0];\n          _viewportElementNative = _viewportElement[0];\n          _contentElementNative = _contentElement[0];\n          updateViewportAttrsFromTarget();\n        } else {\n          if (_domExists && _initialized) {\n            //clear size observer\n            _sizeObserverElement.children().remove(); //remove the style property and classes from already generated elements\n\n\n            each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\n              if (elm) {\n                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n              }\n            }); //add classes to the host element which was removed previously to match the expected DOM\n\n            addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\n          } else {\n            //remove size observer\n            remove(_sizeObserverElement); //unwrap the content to restore DOM\n\n            _contentElement.contents().unwrap().unwrap().unwrap();\n\n            if (_isTextarea) {\n              _targetElement.unwrap();\n\n              remove(_hostElement);\n              remove(_textareaCoverElement);\n              applyAdoptedAttrs();\n            }\n          }\n\n          if (_isTextarea) _targetElement.removeAttr(LEXICON.s);\n          if (_isBody) removeClass(_htmlElement, _classNameHTMLElement);\n        }\n      }\n      /**\r\n       * Adds or removes all wrapper elements interactivity events.\r\n       * @param destroy Indicates whether the Events shall be added or removed.\r\n       */\n\n\n      function setupStructureEvents() {\n        var textareaKeyDownRestrictedKeyCodes = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, //F1 to F12\n        33, 34, //page up, page down\n        37, 38, 39, 40, //left, up, right, down arrows\n        16, 17, 18, 19, 20, 144 //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\n        ];\n        var textareaKeyDownKeyCodesList = [];\n        var textareaUpdateIntervalID;\n        var scrollStopTimeoutId;\n        var scrollStopDelay = 175;\n        var strFocus = 'focus';\n\n        function updateTextarea(doClearInterval) {\n          textareaUpdate();\n\n          _base.update(_strAuto);\n\n          if (doClearInterval && _autoUpdateRecommended) clearInterval(textareaUpdateIntervalID);\n        }\n\n        function textareaOnScroll(event) {\n          _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\n\n          _targetElement[_strScrollTop](0);\n\n          COMPATIBILITY.prvD(event);\n          COMPATIBILITY.stpP(event);\n          return false;\n        }\n\n        function textareaOnDrop(event) {\n          setTimeout(function () {\n            if (!_destroyed) updateTextarea();\n          }, 50);\n        }\n\n        function textareaOnFocus() {\n          _textareaHasFocus = true;\n          addClass(_hostElement, strFocus);\n        }\n\n        function textareaOnFocusout() {\n          _textareaHasFocus = false;\n          textareaKeyDownKeyCodesList = [];\n          removeClass(_hostElement, strFocus);\n          updateTextarea(true);\n        }\n\n        function textareaOnKeyDown(event) {\n          var keyCode = event.keyCode;\n\n          if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n            if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\n              updateTextarea();\n              textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\n            }\n\n            if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0) textareaKeyDownKeyCodesList.push(keyCode);\n          }\n        }\n\n        function textareaOnKeyUp(event) {\n          var keyCode = event.keyCode;\n          var index = inArray(keyCode, textareaKeyDownKeyCodesList);\n\n          if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n            if (index > -1) textareaKeyDownKeyCodesList.splice(index, 1);\n            if (!textareaKeyDownKeyCodesList[LEXICON.l]) updateTextarea(true);\n          }\n        }\n\n        function contentOnTransitionEnd(event) {\n          if (_autoUpdateCache === true) return;\n          event = event.originalEvent || event;\n          if (isSizeAffectingCSSProperty(event.propertyName)) _base.update(_strAuto);\n        }\n\n        function viewportOnScroll(event) {\n          if (!_sleeping) {\n            if (scrollStopTimeoutId !== undefined) clearTimeout(scrollStopTimeoutId);else {\n              if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n              if (!nativeOverlayScrollbarsAreActive()) addClass(_hostElement, _classNameHostScrolling);\n              dispatchCallback('onScrollStart', event);\n            } //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\n            //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\n            //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\n\n            if (!_scrollbarsHandlesDefineScrollPos) {\n              refreshScrollbarHandleOffset(true);\n              refreshScrollbarHandleOffset(false);\n            }\n\n            dispatchCallback('onScroll', event);\n            scrollStopTimeoutId = setTimeout(function () {\n              if (!_destroyed) {\n                //OnScrollStop:\n                clearTimeout(scrollStopTimeoutId);\n                scrollStopTimeoutId = undefined;\n                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n                if (!nativeOverlayScrollbarsAreActive()) removeClass(_hostElement, _classNameHostScrolling);\n                dispatchCallback('onScrollStop', event);\n              }\n            }, scrollStopDelay);\n          }\n        }\n\n        if (_isTextarea) {\n          if (_msieVersion > 9 || !_autoUpdateRecommended) {\n            addDestroyEventListener(_targetElement, 'input', updateTextarea);\n          } else {\n            addDestroyEventListener(_targetElement, [_strKeyDownEvent, _strKeyUpEvent], [textareaOnKeyDown, textareaOnKeyUp]);\n          }\n\n          addDestroyEventListener(_targetElement, [_strScroll, 'drop', strFocus, strFocus + 'out'], [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\n        } else {\n          addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\n        }\n\n        addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\n      } //==== Scrollbars ====//\n\n      /**\r\n       * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n       * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n       */\n\n\n      function setupScrollbarsDOM(destroy) {\n        var selectOrGenerateScrollbarDOM = function (isHorizontal) {\n          var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\n          var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\n          var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\n          var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\n\n          if (!_domExists && !destroy) {\n            scrollbar.append(track);\n            track.append(handle);\n          }\n\n          return {\n            _scrollbar: scrollbar,\n            _track: track,\n            _handle: handle\n          };\n        };\n\n        function resetScrollbarDOM(isHorizontal) {\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbar = scrollbarVars._scrollbar;\n          var track = scrollbarVars._track;\n          var handle = scrollbarVars._handle;\n\n          if (_domExists && _initialized) {\n            each([scrollbar, track, handle], function (i, elm) {\n              removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n            });\n          } else {\n            remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\n          }\n        }\n\n        var horizontalElements;\n        var verticalElements;\n\n        if (!destroy) {\n          horizontalElements = selectOrGenerateScrollbarDOM(true);\n          verticalElements = selectOrGenerateScrollbarDOM();\n          _scrollbarHorizontalElement = horizontalElements._scrollbar;\n          _scrollbarHorizontalTrackElement = horizontalElements._track;\n          _scrollbarHorizontalHandleElement = horizontalElements._handle;\n          _scrollbarVerticalElement = verticalElements._scrollbar;\n          _scrollbarVerticalTrackElement = verticalElements._track;\n          _scrollbarVerticalHandleElement = verticalElements._handle;\n\n          if (!_domExists) {\n            _paddingElement.after(_scrollbarVerticalElement);\n\n            _paddingElement.after(_scrollbarHorizontalElement);\n          }\n        } else {\n          resetScrollbarDOM(true);\n          resetScrollbarDOM();\n        }\n      }\n      /**\r\n       * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n       * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n       */\n\n\n      function setupScrollbarEvents(isHorizontal) {\n        var scrollbarVars = getScrollbarVars(isHorizontal);\n        var scrollbarVarsInfo = scrollbarVars._info;\n        var insideIFrame = _windowElementNative.top !== _windowElementNative;\n        var xy = scrollbarVars._x_y;\n        var XY = scrollbarVars._X_Y;\n        var scroll = _strScroll + scrollbarVars._Left_Top;\n        var strActive = 'active';\n        var strSnapHandle = 'snapHandle';\n        var strClickEvent = 'click';\n        var scrollDurationFactor = 1;\n        var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\n\n        var trackTimeout;\n        var mouseDownScroll;\n        var mouseDownOffset;\n        var mouseDownInvertedScale;\n\n        function getPointerPosition(event) {\n          return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\n        }\n\n        function getPreparedScrollbarsOption(name) {\n          return _currentPreparedOptions.scrollbars[name];\n        }\n\n        function increaseTrackScrollAmount() {\n          scrollDurationFactor = 0.5;\n        }\n\n        function decreaseTrackScrollAmount() {\n          scrollDurationFactor = 1;\n        }\n\n        function stopClickEventPropagation(event) {\n          COMPATIBILITY.stpP(event);\n        }\n\n        function documentKeyDown(event) {\n          if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) increaseTrackScrollAmount();\n        }\n\n        function documentKeyUp(event) {\n          if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) decreaseTrackScrollAmount();\n        }\n\n        function onMouseTouchDownContinue(event) {\n          var originalEvent = event.originalEvent || event;\n          var isTouchEvent = originalEvent.touches !== undefined;\n          return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption('touchSupport') ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n        }\n\n        function documentDragMove(event) {\n          if (onMouseTouchDownContinue(event)) {\n            var trackLength = scrollbarVarsInfo._trackLength;\n            var handleLength = scrollbarVarsInfo._handleLength;\n            var scrollRange = scrollbarVarsInfo._maxScroll;\n            var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\n            var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\n            var scrollDelta = scrollRange * scrollDeltaPercent;\n            scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\n            if (_isRTL && isHorizontal && !_rtlScrollBehavior.i) scrollDelta *= -1;\n\n            _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\n\n            if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\n            if (!_supportPassiveEvents) COMPATIBILITY.prvD(event);\n          } else documentMouseTouchUp(event);\n        }\n\n        function documentMouseTouchUp(event) {\n          event = event || event.originalEvent;\n          setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart], true);\n          COMPATIBILITY.rAF()(function () {\n            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, {\n              _capture: true\n            });\n          });\n          if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, true);\n          _scrollbarsHandlesDefineScrollPos = false;\n          removeClass(_bodyElement, _classNameDragging);\n          removeClass(scrollbarVars._handle, strActive);\n          removeClass(scrollbarVars._track, strActive);\n          removeClass(scrollbarVars._scrollbar, strActive);\n          mouseDownScroll = undefined;\n          mouseDownOffset = undefined;\n          mouseDownInvertedScale = 1;\n          decreaseTrackScrollAmount();\n\n          if (trackTimeout !== undefined) {\n            _base.scrollStop();\n\n            clearTimeout(trackTimeout);\n            trackTimeout = undefined;\n          }\n\n          if (event) {\n            var rect = _hostElementNative[LEXICON.bCR]();\n\n            var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom; //if mouse is outside host element\n\n            if (!mouseInsideHost) hostOnMouseLeave();\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n          }\n        }\n\n        function onHandleMouseTouchDown(event) {\n          if (onMouseTouchDownContinue(event)) onHandleMouseTouchDownAction(event);\n        }\n\n        function onHandleMouseTouchDownAction(event) {\n          mouseDownScroll = _viewportElement[scroll]();\n          mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\n          if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL) mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\n          mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n          mouseDownOffset = getPointerPosition(event);\n          _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n          addClass(_bodyElement, _classNameDragging);\n          addClass(scrollbarVars._handle, strActive);\n          addClass(scrollbarVars._scrollbar, strActive);\n          setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\n          COMPATIBILITY.rAF()(function () {\n            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, {\n              _capture: true\n            });\n          });\n          if (_msieVersion || !_documentMixed) COMPATIBILITY.prvD(event);\n          COMPATIBILITY.stpP(event);\n        }\n\n        function onTrackMouseTouchDown(event) {\n          if (onMouseTouchDownContinue(event)) {\n            var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\n            var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\n            var scrollBaseDuration = 270 * handleToViewportRatio;\n            var scrollFirstIterationDelay = 400 * handleToViewportRatio;\n\n            var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\n\n            var ctrlKey = event.ctrlKey;\n            var instantScroll = event.shiftKey;\n            var instantScrollTransition = instantScroll && ctrlKey;\n            var isFirstIteration = true;\n            var easing = 'linear';\n            var decreaseScroll;\n            var finishedCondition;\n\n            var scrollActionFinsished = function (transition) {\n              if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, transition);\n            };\n\n            var scrollActionInstantFinished = function () {\n              scrollActionFinsished();\n              onHandleMouseTouchDownAction(event);\n            };\n\n            var scrollAction = function () {\n              if (!_destroyed) {\n                var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\n                var handleOffset = scrollbarVarsInfo._handleOffset;\n                var trackLength = scrollbarVarsInfo._trackLength;\n                var handleLength = scrollbarVarsInfo._handleLength;\n                var scrollRange = scrollbarVarsInfo._maxScroll;\n                var currScroll = scrollbarVarsInfo._currentScroll;\n                var scrollDuration = scrollBaseDuration * scrollDurationFactor;\n                var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\n                var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength)); // 100% * positionPercent\n\n                var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);\n                var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\n                var scrollObj = {};\n                var animationObj = {\n                  easing: easing,\n                  step: function (now) {\n                    if (_scrollbarsHandlesDefineScrollPos) {\n                      _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\n\n\n                      refreshScrollbarHandleOffset(isHorizontal, now);\n                    }\n                  }\n                };\n                instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\n                instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition; //_base.scrollStop();\n\n                if (instantScroll) {\n                  _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\n\n\n                  if (instantScrollTransition) {\n                    //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\n                    //and the animation stops at the correct point\n                    instantScrollPosition = _viewportElement[scroll](); //scroll back to the position before instant scrolling so animation can be performed\n\n                    _viewportElement[scroll](currScroll);\n\n                    instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\n                    instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\n                    scrollObj[xy] = instantScrollPosition;\n\n                    _base.scroll(scrollObj, extendDeep(animationObj, {\n                      duration: 130,\n                      complete: scrollActionInstantFinished\n                    }));\n                  } else scrollActionInstantFinished();\n                } else {\n                  decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\n                  finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;\n\n                  if (finishedCondition) {\n                    clearTimeout(trackTimeout);\n\n                    _base.scrollStop();\n\n                    trackTimeout = undefined;\n                    scrollActionFinsished(true);\n                  } else {\n                    trackTimeout = setTimeout(scrollAction, timeoutDelay);\n                    scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\n\n                    _base.scroll(scrollObj, extendDeep(animationObj, {\n                      duration: scrollDuration\n                    }));\n                  }\n\n                  isFirstIteration = false;\n                }\n              }\n            };\n\n            if (ctrlKey) increaseTrackScrollAmount();\n            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n            mouseDownOffset = COMPATIBILITY.page(event)[xy];\n            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n            addClass(_bodyElement, _classNameDragging);\n            addClass(scrollbarVars._track, strActive);\n            addClass(scrollbarVars._scrollbar, strActive);\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\n            scrollAction();\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n        }\n\n        function onTrackMouseTouchEnter(event) {\n          //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\n          _scrollbarsHandleHovered = true;\n          if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n        }\n\n        function onTrackMouseTouchLeave(event) {\n          _scrollbarsHandleHovered = false;\n          if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n        }\n\n        function onScrollbarMouseTouchDown(event) {\n          COMPATIBILITY.stpP(event);\n        }\n\n        addDestroyEventListener(scrollbarVars._handle, _strMouseTouchDownEvent, onHandleMouseTouchDown);\n        addDestroyEventListener(scrollbarVars._track, [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave], [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\n        addDestroyEventListener(scrollbarVars._scrollbar, _strMouseTouchDownEvent, onScrollbarMouseTouchDown);\n\n        if (_supportTransition) {\n          addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\n            if (event.target !== scrollbarVars._scrollbar[0]) return;\n            refreshScrollbarHandleLength(isHorizontal);\n            refreshScrollbarHandleOffset(isHorizontal);\n          });\n        }\n      }\n      /**\r\n       * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n       * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n       * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n       * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n       */\n\n\n      function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\n        var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\n        var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\n        addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\n        addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\n      }\n      /**\r\n       * Autoshows / autohides both scrollbars with.\r\n       * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n       * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n       */\n\n\n      function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\n        clearTimeout(_scrollbarsAutoHideTimeoutId);\n\n        if (shallBeVisible) {\n          //if(_hasOverflowCache.x && _hideOverflowCache.xs)\n          removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden); //if(_hasOverflowCache.y && _hideOverflowCache.ys)\n\n          removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n        } else {\n          var anyActive;\n          var strActive = 'active';\n\n          var hide = function () {\n            if (!_scrollbarsHandleHovered && !_destroyed) {\n              anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\n              if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n              if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n            }\n          };\n\n          if (_scrollbarsAutoHideDelay > 0 && delayfree !== true) _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);else hide();\n        }\n      }\n      /**\r\n       * Refreshes the handle length of the given scrollbar.\r\n       * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n       */\n\n\n      function refreshScrollbarHandleLength(isHorizontal) {\n        var handleCSS = {};\n        var scrollbarVars = getScrollbarVars(isHorizontal);\n        var scrollbarVarsInfo = scrollbarVars._info;\n        var digit = 1000000; //get and apply intended handle length\n\n        var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\n        handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + '%'; //the last * digit / digit is for flooring to the 4th digit\n\n        if (!nativeOverlayScrollbarsAreActive()) scrollbarVars._handle.css(handleCSS); //measure the handle length to respect min & max length\n\n        scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\n        scrollbarVarsInfo._handleLengthRatio = handleRatio;\n      }\n      /**\r\n       * Refreshes the handle offset of the given scrollbar.\r\n       * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n       * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n       */\n\n\n      function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\n        var transition = type(scrollOrTransition) == TYPES.b;\n        var transitionDuration = 250;\n        var isRTLisHorizontal = _isRTL && isHorizontal;\n        var scrollbarVars = getScrollbarVars(isHorizontal);\n        var scrollbarVarsInfo = scrollbarVars._info;\n        var strTranslateBrace = 'translate(';\n\n        var strTransform = VENDORS._cssProperty('transform');\n\n        var strTransition = VENDORS._cssProperty('transition');\n\n        var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\n        var currentScroll = scrollOrTransition === undefined || transition ? nativeScroll : scrollOrTransition; //measure the handle length to respect min & max length\n\n        var handleLength = scrollbarVarsInfo._handleLength;\n        var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\n        var handleTrackDiff = trackLength - handleLength;\n        var handleCSS = {};\n        var transformOffset;\n        var translateValue; //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\n        // because its a bit behind during the small delay when content size updates\n        //(delay = mutationObserverContentLag, if its 0 then this var could be used)\n\n        var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\n\n        var getScrollRatio = function (base) {\n          return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\n        };\n\n        var getHandleOffset = function (scrollRatio) {\n          var offset = handleTrackDiff * scrollRatio;\n          offset = isNaN(offset) ? 0 : offset;\n          offset = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset : offset;\n          offset = MATH.max(0, offset);\n          return offset;\n        };\n\n        var scrollRatio = getScrollRatio(nativeScroll);\n        var unsnappedScrollRatio = getScrollRatio(currentScroll);\n        var handleOffset = getHandleOffset(unsnappedScrollRatio);\n        var snappedHandleOffset = getHandleOffset(scrollRatio);\n        scrollbarVarsInfo._maxScroll = maxScroll;\n        scrollbarVarsInfo._currentScroll = nativeScroll;\n        scrollbarVarsInfo._currentScrollRatio = scrollRatio;\n\n        if (_supportTransform) {\n          transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\n          //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\n\n          translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\n          handleCSS[strTransform] = translateValue; //apply or clear up transition\n\n          if (_supportTransition) handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\n        } else handleCSS[scrollbarVars._left_top] = handleOffset; //only apply css if offset has changed and overflow exists.\n\n\n        if (!nativeOverlayScrollbarsAreActive()) {\n          scrollbarVars._handle.css(handleCSS); //clear up transition\n\n\n          if (_supportTransform && _supportTransition && transition) {\n            scrollbarVars._handle.one(_strTransitionEndEvent, function () {\n              if (!_destroyed) scrollbarVars._handle.css(strTransition, _strEmpty);\n            });\n          }\n        }\n\n        scrollbarVarsInfo._handleOffset = handleOffset;\n        scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\n        scrollbarVarsInfo._trackLength = trackLength;\n      }\n      /**\r\n       * Refreshes the interactivity of the given scrollbar element.\r\n       * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n       * @param value True for interactivity false for no interactivity.\r\n       */\n\n\n      function refreshScrollbarsInteractive(isTrack, value) {\n        var action = value ? 'removeClass' : 'addClass';\n        var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\n        var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\n        var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\n        element1[action](className);\n        element2[action](className);\n      }\n      /**\r\n       * Returns a object which is used for fast access for specific variables.\r\n       * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n       * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n       */\n\n\n      function getScrollbarVars(isHorizontal) {\n        return {\n          _width_height: isHorizontal ? _strWidth : _strHeight,\n          _Width_Height: isHorizontal ? 'Width' : 'Height',\n          _left_top: isHorizontal ? _strLeft : _strTop,\n          _Left_Top: isHorizontal ? 'Left' : 'Top',\n          _x_y: isHorizontal ? _strX : _strY,\n          _X_Y: isHorizontal ? 'X' : 'Y',\n          _w_h: isHorizontal ? 'w' : 'h',\n          _l_t: isHorizontal ? 'l' : 't',\n          _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\n          _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\n          _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\n          _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\n        };\n      } //==== Scrollbar Corner ====//\n\n      /**\r\n       * Builds or destroys the scrollbar corner DOM element.\r\n       * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n       */\n\n\n      function setupScrollbarCornerDOM(destroy) {\n        _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\n\n        if (!destroy) {\n          if (!_domExists) {\n            _hostElement.append(_scrollbarCornerElement);\n          }\n        } else {\n          if (_domExists && _initialized) {\n            removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n          } else {\n            remove(_scrollbarCornerElement);\n          }\n        }\n      }\n      /**\r\n       * Initializes all scrollbar corner interactivity events.\r\n       */\n\n\n      function setupScrollbarCornerEvents() {\n        var insideIFrame = _windowElementNative.top !== _windowElementNative;\n        var mouseDownPosition = {};\n        var mouseDownSize = {};\n        var mouseDownInvertedScale = {};\n        var reconnectMutationObserver;\n\n        function documentDragMove(event) {\n          if (onMouseTouchDownContinue(event)) {\n            var pageOffset = getCoordinates(event);\n            var hostElementCSS = {};\n            if (_resizeHorizontal || _resizeBoth) hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;\n            if (_resizeVertical || _resizeBoth) hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;\n\n            _hostElement.css(hostElementCSS);\n\n            COMPATIBILITY.stpP(event);\n          } else {\n            documentMouseTouchUp(event);\n          }\n        }\n\n        function documentMouseTouchUp(event) {\n          var eventIsTrusted = event !== undefined;\n          setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp], true);\n          removeClass(_bodyElement, _classNameDragging);\n          if (_scrollbarCornerElement.releaseCapture) _scrollbarCornerElement.releaseCapture();\n\n          if (eventIsTrusted) {\n            if (reconnectMutationObserver) connectMutationObservers();\n\n            _base.update(_strAuto);\n          }\n\n          reconnectMutationObserver = false;\n        }\n\n        function onMouseTouchDownContinue(event) {\n          var originalEvent = event.originalEvent || event;\n          var isTouchEvent = originalEvent.touches !== undefined;\n          return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n        }\n\n        function getCoordinates(event) {\n          return _msieVersion && insideIFrame ? {\n            x: event.screenX,\n            y: event.screenY\n          } : COMPATIBILITY.page(event);\n        }\n\n        addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\n          if (onMouseTouchDownContinue(event) && !_resizeNone) {\n            if (_mutationObserversConnected) {\n              reconnectMutationObserver = true;\n              disconnectMutationObservers();\n            }\n\n            mouseDownPosition = getCoordinates(event);\n            mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\n            mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\n            mouseDownInvertedScale = getHostElementInvertedScale();\n            setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\n            addClass(_bodyElement, _classNameDragging);\n            if (_scrollbarCornerElement.setCapture) _scrollbarCornerElement.setCapture();\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n        });\n      } //==== Utils ====//\n\n      /**\r\n       * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n       * @param name The name of the target which shall be called.\r\n       * @param args The args with which the callback shall be called.\r\n       * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n       */\n\n\n      function dispatchCallback(name, args, dependent) {\n        if (dependent === false) return;\n\n        if (_initialized) {\n          var callback = _currentPreparedOptions.callbacks[name];\n          var extensionOnName = name;\n          var ext;\n          if (extensionOnName.substr(0, 2) === 'on') extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\n          if (type(callback) == TYPES.f) callback.call(_base, args);\n          each(_extensions, function () {\n            ext = this;\n            if (type(ext.on) == TYPES.f) ext.on(extensionOnName, args);\n          });\n        } else if (!_destroyed) _callbacksInitQeueue.push({\n          n: name,\n          a: args\n        });\n      }\n      /**\r\n       * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n       * @param targetCSSObject The css object to which the values shall be applied.\r\n       * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n       * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n       * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n       */\n\n\n      function setTopRightBottomLeft(targetCSSObject, prefix, values) {\n        prefix = prefix || _strEmpty;\n        values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\n        targetCSSObject[prefix + _strTop] = values[0];\n        targetCSSObject[prefix + _strRight] = values[1];\n        targetCSSObject[prefix + _strBottom] = values[2];\n        targetCSSObject[prefix + _strLeft] = values[3];\n      }\n      /**\r\n       * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n       * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n       * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n       * @param zeroX True if the x axis shall be 0.\r\n       * @param zeroY True if the y axis shall be 0.\r\n       * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n       */\n\n\n      function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\n        suffix = suffix || _strEmpty;\n        prefix = prefix || _strEmpty;\n        return {\n          t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\n          r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\n          b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\n          l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\n        };\n      }\n      /**\r\n       * Returns the computed CSS transition string from the given element.\r\n       * @param element The element from which the transition string shall be returned.\r\n       * @returns {string} The CSS transition string from the given element.\r\n       */\n\n\n      function getCSSTransitionString(element) {\n        var transitionStr = VENDORS._cssProperty('transition');\n\n        var assembledValue = element.css(transitionStr);\n        if (assembledValue) return assembledValue;\n        var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\n        var regExpMain = new RegExp(regExpString);\n        var regExpValidate = new RegExp('^(' + regExpString + ')+$');\n        var properties = 'property duration timing-function delay'.split(' ');\n        var result = [];\n        var strResult;\n        var valueArray;\n        var i = 0;\n        var j;\n\n        var splitCssStyleByComma = function (str) {\n          strResult = [];\n          if (!str.match(regExpValidate)) return str;\n\n          while (str.match(regExpMain)) {\n            strResult.push(RegExp.$1);\n            str = str.replace(regExpMain, _strEmpty);\n          }\n\n          return strResult;\n        };\n\n        for (; i < properties[LEXICON.l]; i++) {\n          valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\n\n          for (j = 0; j < valueArray[LEXICON.l]; j++) result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\n        }\n\n        return result.join(', ');\n      }\n      /**\r\n       * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n       * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n       * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n       */\n\n\n      function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\n        var i;\n        var split;\n        var appendix;\n\n        var appendClasses = function (classes, condition) {\n          appendix = '';\n\n          if (condition && typeof classes == TYPES.s) {\n            split = classes.split(_strSpace);\n\n            for (i = 0; i < split[LEXICON.l]; i++) appendix += '|' + split[i] + '$'; // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\n\n          }\n\n          return appendix;\n        };\n\n        return new RegExp('(^' + _classNameHostElement + '([-_].+|)$)' + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption), 'g');\n      }\n      /**\r\n       * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n       * @returns {{x: number, y: number}} The scale of the host-element.\r\n       */\n\n\n      function getHostElementInvertedScale() {\n        var rect = _paddingElementNative[LEXICON.bCR]();\n\n        return {\n          x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\n          y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\n        };\n      }\n      /**\r\n       * Checks whether the given object is a HTMLElement.\r\n       * @param o The object which shall be checked.\r\n       * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n       */\n\n\n      function isHTMLElement(o) {\n        var strOwnerDocument = 'ownerDocument';\n        var strHTMLElement = 'HTMLElement';\n        var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window : window;\n        return typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\n        o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s;\n      }\n      /**\r\n       * Compares 2 arrays and returns the differences between them as a array.\r\n       * @param a1 The first array which shall be compared.\r\n       * @param a2 The second array which shall be compared.\r\n       * @returns {Array} The differences between the two arrays.\r\n       */\n\n\n      function getArrayDifferences(a1, a2) {\n        var a = [];\n        var diff = [];\n        var i;\n        var k;\n\n        for (i = 0; i < a1.length; i++) a[a1[i]] = true;\n\n        for (i = 0; i < a2.length; i++) {\n          if (a[a2[i]]) delete a[a2[i]];else a[a2[i]] = true;\n        }\n\n        for (k in a) diff.push(k);\n\n        return diff;\n      }\n      /**\r\n       * Returns Zero or the number to which the value can be parsed.\r\n       * @param value The value which shall be parsed.\r\n       * @param toFloat Indicates whether the number shall be parsed to a float.\r\n       */\n\n\n      function parseToZeroOrNumber(value, toFloat) {\n        var num = toFloat ? parseFloat(value) : parseInt(value, 10);\n        return isNaN(num) ? 0 : num;\n      }\n      /**\r\n       * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n       * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n       */\n\n\n      function getTextareaInfo() {\n        //read needed values\n        var textareaCursorPosition = _targetElementNative.selectionStart;\n        if (textareaCursorPosition === undefined) return;\n\n        var textareaValue = _targetElement.val();\n\n        var textareaLength = textareaValue[LEXICON.l];\n        var textareaRowSplit = textareaValue.split('\\n');\n        var textareaLastRow = textareaRowSplit[LEXICON.l];\n        var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\n        var widestRow = 0;\n        var textareaLastCol = 0;\n        var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\n        var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\n        var rowCols;\n        var i; //get widest Row and the last column of the textarea\n\n        for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\n          rowCols = textareaRowSplit[i][LEXICON.l];\n\n          if (rowCols > textareaLastCol) {\n            widestRow = i + 1;\n            textareaLastCol = rowCols;\n          }\n        }\n\n        return {\n          _cursorRow: cursorRow,\n          //cursorRow\n          _cursorColumn: cursorCol,\n          //cursorCol\n          _rows: textareaLastRow,\n          //rows\n          _columns: textareaLastCol,\n          //cols\n          _widestRow: widestRow,\n          //wRow\n          _cursorPosition: textareaCursorPosition,\n          //pos\n          _cursorMax: textareaLength //max\n\n        };\n      }\n      /**\r\n       * Determines whether native overlay scrollbars are active.\r\n       * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n       */\n\n\n      function nativeOverlayScrollbarsAreActive() {\n        return _ignoreOverlayScrollbarHidingCache && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\n      }\n      /**\r\n       * Gets the element which is used to measure the content size.\r\n       * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n       */\n\n\n      function getContentMeasureElement() {\n        return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\n      }\n      /**\r\n       * Generates a string which represents a HTML div with the given classes or attributes.\r\n       * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n       * @param content The content of the div as string.\r\n       * @returns {string} The concated string which represents a HTML div and its content.\r\n       */\n\n\n      function generateDiv(classesOrAttrs, content) {\n        return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class=\"' + classesOrAttrs + '\"' : function () {\n          var key;\n          var attrs = _strEmpty;\n\n          if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\n            for (key in classesOrAttrs) attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\n          }\n\n          return attrs;\n        }() : _strEmpty) + '>' + (content || _strEmpty) + '</div>';\n      }\n      /**\r\n       * Selects or generates a div with the given class attribute.\r\n       * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n       * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n       * If its a boolean it decides whether only the children of the host element shall be selected.\r\n       * @returns {*} The generated or selected element.\r\n       */\n\n\n      function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\n        var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\n        var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;\n        return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));\n      }\n      /**\r\n       * Gets the value of the given property from the given object.\r\n       * @param obj The object from which the property value shall be got.\r\n       * @param path The property of which the value shall be got.\r\n       * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n       */\n\n\n      function getObjectPropVal(obj, path) {\n        var splits = path.split(_strDot);\n        var i = 0;\n        var val;\n\n        for (; i < splits.length; i++) {\n          if (!obj[LEXICON.hOP](splits[i])) return;\n          val = obj[splits[i]];\n          if (i < splits.length && type(val) == TYPES.o) obj = val;\n        }\n\n        return val;\n      }\n      /**\r\n       * Sets the value of the given property from the given object.\r\n       * @param obj The object from which the property value shall be set.\r\n       * @param path The property of which the value shall be set.\r\n       * @param val The value of the property which shall be set.\r\n       */\n\n\n      function setObjectPropVal(obj, path, val) {\n        var splits = path.split(_strDot);\n        var splitsLength = splits.length;\n        var i = 0;\n        var extendObj = {};\n        var extendObjRoot = extendObj;\n\n        for (; i < splitsLength; i++) extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\n\n        FRAMEWORK.extend(obj, extendObjRoot, true);\n      }\n      /**\t\r\n       * Runs a action for each selector inside the updateOnLoad option.\t\r\n       * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n       */\n\n\n      function eachUpdateOnLoad(action) {\n        var updateOnLoad = _currentPreparedOptions.updateOnLoad;\n        updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\n\n        if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\n          each(updateOnLoad, action);\n        }\n      } //==== Utils Cache ====//\n\n      /**\r\n       * Compares two values or objects and returns true if they aren't equal.\r\n       * @param current The first value or object which shall be compared.\r\n       * @param cache The second value or object which shall be compared.\r\n       * @param force If true the returned value is always true.\r\n       * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n       */\n\n\n      function checkCache(current, cache, force) {\n        if (force) return force;\n\n        if (type(current) == TYPES.o && type(cache) == TYPES.o) {\n          for (var prop in current) {\n            if (prop !== 'c') {\n              if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\n                if (checkCache(current[prop], cache[prop])) return true;\n              } else {\n                return true;\n              }\n            }\n          }\n        } else {\n          return current !== cache;\n        }\n\n        return false;\n      } //==== Shortcuts ====//\n\n      /**\r\n       * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n       */\n\n\n      function extendDeep() {\n        return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\n      }\n      /**\r\n       * jQuery addClass method shortcut.\r\n       */\n\n\n      function addClass(el, classes) {\n        return _frameworkProto.addClass.call(el, classes);\n      }\n      /**\r\n       * jQuery removeClass method shortcut.\r\n       */\n\n\n      function removeClass(el, classes) {\n        return _frameworkProto.removeClass.call(el, classes);\n      }\n      /**\r\n       * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n       */\n\n\n      function addRemoveClass(el, classes, doAdd) {\n        return doAdd ? addClass(el, classes) : removeClass(el, classes);\n      }\n      /**\r\n       * jQuery remove method shortcut.\r\n       */\n\n\n      function remove(el) {\n        return _frameworkProto.remove.call(el);\n      }\n      /**\r\n       * Finds the first child element with the given selector of the given element.\r\n       * @param el The root element from which the selector shall be valid.\r\n       * @param selector The selector of the searched element.\r\n       * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n       */\n\n\n      function findFirst(el, selector) {\n        return _frameworkProto.find.call(el, selector).eq(0);\n      } //==== API ====//\n\n      /**\r\n       * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n       * This behavior can be reset by calling the update method.\r\n       */\n\n\n      _base.sleep = function () {\n        _sleeping = true;\n      };\n      /**\r\n       * Updates the plugin and DOM to the current options.\r\n       * This method should only be called if a update is 100% required.\r\n       * @param force True if every property shall be updated and the cache shall be ignored.\r\n       * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n       * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n       * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n       * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n       * @returns {boolean|undefined} \r\n       * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n       * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n       * undefined otherwise.\r\n       */\n\n\n      _base.update = function (force) {\n        if (_destroyed) return;\n        var attrsChanged;\n        var contentSizeC;\n        var isString = type(force) == TYPES.s;\n        var doUpdateAuto;\n        var mutHost;\n        var mutContent;\n\n        if (isString) {\n          if (force === _strAuto) {\n            attrsChanged = meaningfulAttrsChanged();\n            contentSizeC = updateAutoContentSizeChanged();\n            doUpdateAuto = attrsChanged || contentSizeC;\n\n            if (doUpdateAuto) {\n              update({\n                _contentSizeChanged: contentSizeC,\n                _changedOptions: _initialized ? undefined : _currentPreparedOptions\n              });\n            }\n          } else if (force === _strSync) {\n            if (_mutationObserversConnected) {\n              mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\n              mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\n            } else {\n              mutHost = _base.update(_strAuto);\n            }\n          } else if (force === 'zoom') {\n            update({\n              _hostSizeChanged: true,\n              _contentSizeChanged: true\n            });\n          }\n        } else {\n          force = _sleeping || force;\n          _sleeping = false;\n          if (!_base.update(_strSync) || force) update({\n            _force: force\n          });\n        }\n\n        updateElementsOnLoad();\n        return doUpdateAuto || mutHost || mutContent;\n      };\n      /**\r\n       Gets or sets the current options. The update method will be called automatically if new options were set.\r\n       * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n       * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n       * @returns {*}\r\n       */\n\n\n      _base.options = function (newOptions, value) {\n        var option = {};\n        var changedOps; //return current options if newOptions are undefined or empty\n\n        if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\n          if (type(newOptions) == TYPES.s) {\n            if (arguments.length > 1) {\n              setObjectPropVal(option, newOptions, value);\n              changedOps = setOptions(option);\n            } else return getObjectPropVal(_currentOptions, newOptions);\n          } else return _currentOptions;\n        } else {\n          changedOps = setOptions(newOptions);\n        }\n\n        if (!FRAMEWORK.isEmptyObject(changedOps)) {\n          update({\n            _changedOptions: changedOps\n          });\n        }\n      };\n      /**\r\n       * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n       */\n\n\n      _base.destroy = function () {\n        if (_destroyed) return; //remove this instance from auto update loop\n\n        autoUpdateLoop.remove(_base); //disconnect all mutation observers\n\n        disconnectMutationObservers(); //remove all resize observers\n\n        setupResizeObserver(_sizeObserverElement);\n        setupResizeObserver(_sizeAutoObserverElement); //remove all extensions\n\n        for (var extName in _extensions) _base.removeExt(extName); //remove all 'destroy' events\n\n\n        while (_destroyEvents[LEXICON.l] > 0) _destroyEvents.pop()(); //remove all events from host element\n\n\n        setupHostMouseTouchEvents(true); //remove all helper / detection elements\n\n        if (_contentGlueElement) remove(_contentGlueElement);\n        if (_contentArrangeElement) remove(_contentArrangeElement);\n        if (_sizeAutoObserverAdded) remove(_sizeAutoObserverElement); //remove all generated DOM\n\n        setupScrollbarsDOM(true);\n        setupScrollbarCornerDOM(true);\n        setupStructureDOM(true); //remove all generated image load events\n\n        for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++) FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\n\n        _updateOnLoadElms = undefined;\n        _destroyed = true;\n        _sleeping = true; //remove this instance from the instances list\n\n        INSTANCES(pluginTargetElement, 0);\n        dispatchCallback('onDestroyed'); //remove all properties and methods\n        //for (var property in _base)\n        //    delete _base[property];\n        //_base = undefined;\n      };\n      /**\r\n       * Scrolls to a given position or element.\r\n       * @param coordinates\r\n       * 1. Can be \"coordinates\" which looks like:\r\n       *    { x : ?, y : ? } OR          Object with x and y properties\r\n       *    { left : ?, top : ? } OR     Object with left and top properties\r\n       *    { l : ?, t : ? } OR          Object with l and t properties\r\n       *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n       *    ?                            A single value which stays for both axis\r\n       *    A value can be a number, a string or a calculation.\r\n       *\r\n       *    Operators:\r\n       *    [NONE]  The current scroll will be overwritten by the value.\r\n       *    '+='    The value will be added to the current scroll offset\r\n       *    '-='    The value will be subtracted from the current scroll offset\r\n       *    '*='    The current scroll wil be multiplicated by the value.\r\n       *    '/='    The current scroll wil be divided by the value.\r\n       *\r\n       *    Units:\r\n       *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n       *    'px'    Same as none\r\n       *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n       *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n       *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n       *\r\n       *    example final values:\r\n       *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n       *\r\n       * 2. Can be a HTML or jQuery element:\r\n       *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n       *\r\n       * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n       *    {\r\n       *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n       *      scroll : [string, array, object],               Default value is 'always'.\r\n       *      block : [string, array, object],                Default value is 'begin'.\r\n       *      margin : [number, boolean, array, object]       Default value is false.\r\n       *    }\r\n       *\r\n       *    Possible scroll settings are:\r\n       *    'always'      Scrolls always.\r\n       *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n       *    'never'       Scrolls never.\r\n       *\r\n       *    Possible block settings are:\r\n       *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n       *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n       *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n       *    'nearest' The element will be docked to the nearest edge(s).\r\n       *\r\n       *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n       *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n       *    [NUMBER]                                          The margin will be used for all edges.\r\n       *\r\n       * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n       * @param easing The animation easing.\r\n       * @param complete The animation complete callback.\r\n       * @returns {{\r\n       *   position: {x: number, y: number},\r\n       *   ratio: {x: number, y: number},\r\n       *   max: {x: number, y: number},\r\n       *   handleOffset: {x: number, y: number},\r\n       *   handleLength: {x: number, y: number},\r\n       *   handleLengthRatio: {x: number, y: number}, t\r\n       *   rackLength: {x: number, y: number},\r\n       *   isRTL: boolean,\r\n       *   isRTLNormalized: boolean\r\n       *  }}\r\n       */\n\n\n      _base.scroll = function (coordinates, duration, easing, complete) {\n        if (arguments.length === 0 || coordinates === undefined) {\n          var infoX = _scrollHorizontalInfo;\n          var infoY = _scrollVerticalInfo;\n          var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\n          var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\n          var scrollX = infoX._currentScroll;\n          var scrollXRatio = infoX._currentScrollRatio;\n          var maxScrollX = infoX._maxScroll;\n          scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\n          scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\n          scrollX *= normalizeNegate ? -1 : 1;\n          maxScrollX *= normalizeNegate ? -1 : 1;\n          return {\n            position: {\n              x: scrollX,\n              y: infoY._currentScroll\n            },\n            ratio: {\n              x: scrollXRatio,\n              y: infoY._currentScrollRatio\n            },\n            max: {\n              x: maxScrollX,\n              y: infoY._maxScroll\n            },\n            handleOffset: {\n              x: infoX._handleOffset,\n              y: infoY._handleOffset\n            },\n            handleLength: {\n              x: infoX._handleLength,\n              y: infoY._handleLength\n            },\n            handleLengthRatio: {\n              x: infoX._handleLengthRatio,\n              y: infoY._handleLengthRatio\n            },\n            trackLength: {\n              x: infoX._trackLength,\n              y: infoY._trackLength\n            },\n            snappedHandleOffset: {\n              x: infoX._snappedHandleOffset,\n              y: infoY._snappedHandleOffset\n            },\n            isRTL: _isRTL,\n            isRTLNormalized: _normalizeRTLCache\n          };\n        }\n\n        _base.update(_strSync);\n\n        var normalizeRTL = _normalizeRTLCache;\n        var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\n        var coordinatesYAxisProps = [_strY, _strTop, 't'];\n        var coordinatesOperators = ['+=', '-=', '*=', '/='];\n        var durationIsObject = type(duration) == TYPES.o;\n        var completeCallback = durationIsObject ? duration.complete : complete;\n        var i;\n        var finalScroll = {};\n        var specialEasing = {};\n        var doScrollLeft;\n        var doScrollTop;\n        var animationOptions;\n        var strEnd = 'end';\n        var strBegin = 'begin';\n        var strCenter = 'center';\n        var strNearest = 'nearest';\n        var strAlways = 'always';\n        var strNever = 'never';\n        var strIfNeeded = 'ifneeded';\n        var strLength = LEXICON.l;\n        var settingsAxis;\n        var settingsScroll;\n        var settingsBlock;\n        var settingsMargin;\n        var finalElement;\n        var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\n        var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\n        var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\n        var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\n        var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\n        var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\n        var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\n\n        var updateScrollbarInfos = function () {\n          if (doScrollLeft) refreshScrollbarHandleOffset(true);\n          if (doScrollTop) refreshScrollbarHandleOffset(false);\n        };\n\n        var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined : function () {\n          updateScrollbarInfos();\n          completeCallback();\n        };\n\n        function checkSettingsStringValue(currValue, allowedValues) {\n          for (i = 0; i < allowedValues[strLength]; i++) {\n            if (currValue === allowedValues[i]) return true;\n          }\n\n          return false;\n        }\n\n        function getRawScroll(isX, coordinates) {\n          var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\n          coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\n          if (COMPATIBILITY.isA(coordinates)) return isX ? coordinates[0] : coordinates[1];else if (type(coordinates) == TYPES.o) {\n            //decides RTL normalization \"hack\" with .n\n            //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \n            for (i = 0; i < coordinateProps[strLength]; i++) if (coordinateProps[i] in coordinates) return coordinates[coordinateProps[i]];\n          }\n        }\n\n        function getFinalScroll(isX, rawScroll) {\n          var isString = type(rawScroll) == TYPES.s;\n          var operator;\n          var amount;\n          var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\n          var currScroll = scrollInfo._currentScroll;\n          var maxScroll = scrollInfo._maxScroll;\n          var mult = ' * ';\n          var finalValue;\n          var isRTLisX = _isRTL && isX;\n          var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\n          var strReplace = 'replace';\n          var evalFunc = eval;\n          var possibleOperator;\n\n          if (isString) {\n            //check operator\n            if (rawScroll[strLength] > 2) {\n              possibleOperator = rawScroll.substr(0, 2);\n              if (inArray(possibleOperator, coordinatesOperators) > -1) operator = possibleOperator;\n            } //calculate units and shortcuts\n\n\n            rawScroll = operator ? rawScroll.substr(2) : rawScroll;\n            rawScroll = rawScroll[strReplace](/min/g, 0) //'min' = 0%\n            [strReplace](/</g, 0) //'<'   = 0%\n            [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'max' = 100%\n            [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'>'   = 100%\n            [strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);\n            amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\n          } else {\n            amount = rawScroll;\n          }\n\n          if (amount !== undefined && !isNaN(amount) && type(amount) == TYPES.n) {\n            var normalizeIsRTLisX = normalizeRTL && isRTLisX;\n            var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\n            var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\n            var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\n            operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;\n\n            switch (operator) {\n              case '+=':\n                finalValue = operatorCurrScroll + amount;\n                break;\n\n              case '-=':\n                finalValue = operatorCurrScroll - amount;\n                break;\n\n              case '*=':\n                finalValue = operatorCurrScroll * amount;\n                break;\n\n              case '/=':\n                finalValue = operatorCurrScroll / amount;\n                break;\n\n              default:\n                finalValue = amount;\n                break;\n            }\n\n            finalValue = invert ? maxScroll - finalValue : finalValue;\n            finalValue *= negate ? -1 : 1;\n            finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\n          }\n\n          return finalValue === currScroll ? undefined : finalValue;\n        }\n\n        function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\n          var resultDefault = [defaultValue, defaultValue];\n          var valueType = type(value);\n          var valueArrLength;\n          var valueArrItem; //value can be [ string, or array of two strings ]\n\n          if (valueType == valueInternalType) {\n            value = [value, value];\n          } else if (valueType == TYPES.a) {\n            valueArrLength = value[strLength];\n            if (valueArrLength > 2 || valueArrLength < 1) value = resultDefault;else {\n              if (valueArrLength === 1) value[1] = defaultValue;\n\n              for (i = 0; i < valueArrLength; i++) {\n                valueArrItem = value[i];\n\n                if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\n                  value = resultDefault;\n                  break;\n                }\n              }\n            }\n          } else if (valueType == TYPES.o) value = [value[_strX] || defaultValue, value[_strY] || defaultValue];else value = resultDefault;\n\n          return {\n            x: value[0],\n            y: value[1]\n          };\n        }\n\n        function generateMargin(marginTopRightBottomLeftArray) {\n          var result = [];\n          var currValue;\n          var currValueType;\n          var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\n\n          for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\n            if (i === valueDirections[strLength]) break;\n            currValue = marginTopRightBottomLeftArray[i];\n            currValueType = type(currValue);\n            if (currValueType == TYPES.b) result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);else result.push(currValueType == TYPES.n ? currValue : 0);\n          }\n\n          return result;\n        }\n\n        if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\n          //get settings\n          var margin = coordinatesIsElementObj ? coordinates.margin : 0;\n          var axis = coordinatesIsElementObj ? coordinates.axis : 0;\n          var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\n          var block = coordinatesIsElementObj ? coordinates.block : 0;\n          var marginDefault = [0, 0, 0, 0];\n          var marginType = type(margin);\n          var marginLength;\n          finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\n\n          if (finalElement[strLength] > 0) {\n            //margin can be [ boolean, number, array of 2, array of 4, object ]\n            if (marginType == TYPES.n || marginType == TYPES.b) margin = generateMargin([margin, margin, margin, margin]);else if (marginType == TYPES.a) {\n              marginLength = margin[strLength];\n              if (marginLength === 2) margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);else if (marginLength >= 4) margin = generateMargin(margin);else margin = marginDefault;\n            } else if (marginType == TYPES.o) margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);else margin = marginDefault; //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\n\n            settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\n            settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\n            settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\n            settingsMargin = margin;\n            var viewportScroll = {\n              l: _scrollHorizontalInfo._currentScroll,\n              t: _scrollVerticalInfo._currentScroll\n            }; // use padding element instead of viewport element because padding element has never padding, margin or position applied.\n\n            var viewportOffset = _paddingElement.offset(); //get coordinates\n\n\n            var elementOffset = finalElement.offset();\n            var doNotScroll = {\n              x: settingsScroll.x == strNever || settingsAxis == _strY,\n              y: settingsScroll.y == strNever || settingsAxis == _strX\n            };\n            elementOffset[_strTop] -= settingsMargin[0];\n            elementOffset[_strLeft] -= settingsMargin[3];\n            var elementScrollCoordinates = {\n              x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\n              y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\n            };\n\n            if (_isRTL) {\n              if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\n              if (_rtlScrollBehavior.n && normalizeRTL) elementScrollCoordinates.x *= -1;\n              if (_rtlScrollBehavior.i && normalizeRTL) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\n            } //measuring is required\n\n\n            if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\n              var measuringElm = finalElement[0];\n              var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\n                width: measuringElm[LEXICON.oW],\n                height: measuringElm[LEXICON.oH]\n              };\n              var elementSize = {\n                w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\n                h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\n              };\n\n              var finalizeBlock = function (isX) {\n                var vars = getScrollbarVars(isX);\n                var wh = vars._w_h;\n                var lt = vars._left_top;\n                var xy = vars._x_y;\n                var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\n                var blockIsCenter = settingsBlock[xy] == strCenter;\n                var blockIsNearest = settingsBlock[xy] == strNearest;\n                var scrollNever = settingsScroll[xy] == strNever;\n                var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\n                var vpSize = _viewportSize[wh];\n                var vpOffset = viewportOffset[lt];\n                var elSize = elementSize[wh];\n                var elOffset = elementOffset[lt];\n                var divide = blockIsCenter ? 2 : 1;\n                var elementCenterOffset = elOffset + elSize / 2;\n                var viewportCenterOffset = vpOffset + vpSize / 2;\n                var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;\n                if (scrollNever) doNotScroll[xy] = true;else if (!doNotScroll[xy]) {\n                  if (blockIsNearest || scrollIfNeeded) {\n                    doNotScroll[xy] = scrollIfNeeded ? isInView : false;\n                    blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\n                  }\n\n                  elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\n                }\n              };\n\n              finalizeBlock(true);\n              finalizeBlock(false);\n            }\n\n            if (doNotScroll.y) delete elementScrollCoordinates.y;\n            if (doNotScroll.x) delete elementScrollCoordinates.x;\n            coordinates = elementScrollCoordinates;\n          }\n        }\n\n        finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\n        finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\n        doScrollLeft = finalScroll[_strScrollLeft] !== undefined;\n        doScrollTop = finalScroll[_strScrollTop] !== undefined;\n\n        if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\n          if (durationIsObject) {\n            duration.complete = proxyCompleteCallback;\n\n            _viewportElement.animate(finalScroll, duration);\n          } else {\n            animationOptions = {\n              duration: duration,\n              complete: proxyCompleteCallback\n            };\n\n            if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\n              specialEasing[_strScrollLeft] = easing[0] || easing.x;\n              specialEasing[_strScrollTop] = easing[1] || easing.y;\n              animationOptions.specialEasing = specialEasing;\n            } else {\n              animationOptions.easing = easing;\n            }\n\n            _viewportElement.animate(finalScroll, animationOptions);\n          }\n        } else {\n          if (doScrollLeft) _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\n          if (doScrollTop) _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\n          updateScrollbarInfos();\n        }\n      };\n      /**\r\n       * Stops all scroll animations.\r\n       * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n       */\n\n\n      _base.scrollStop = function (param1, param2, param3) {\n        _viewportElement.stop(param1, param2, param3);\n\n        return _base;\n      };\n      /**\r\n       * Returns all relevant elements.\r\n       * @param elementName The name of the element which shall be returned.\r\n       * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n       */\n\n\n      _base.getElements = function (elementName) {\n        var obj = {\n          target: _targetElementNative,\n          host: _hostElementNative,\n          padding: _paddingElementNative,\n          viewport: _viewportElementNative,\n          content: _contentElementNative,\n          scrollbarHorizontal: {\n            scrollbar: _scrollbarHorizontalElement[0],\n            track: _scrollbarHorizontalTrackElement[0],\n            handle: _scrollbarHorizontalHandleElement[0]\n          },\n          scrollbarVertical: {\n            scrollbar: _scrollbarVerticalElement[0],\n            track: _scrollbarVerticalTrackElement[0],\n            handle: _scrollbarVerticalHandleElement[0]\n          },\n          scrollbarCorner: _scrollbarCornerElement[0]\n        };\n        return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\n      };\n      /**\r\n       * Returns a object which describes the current state of this instance.\r\n       * @param stateProperty A specific property from the state object which shall be returned.\r\n       * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n       */\n\n\n      _base.getState = function (stateProperty) {\n        function prepare(obj) {\n          if (!FRAMEWORK.isPlainObject(obj)) return obj;\n          var extended = extendDeep({}, obj);\n\n          var changePropertyName = function (from, to) {\n            if (extended[LEXICON.hOP](from)) {\n              extended[to] = extended[from];\n              delete extended[from];\n            }\n          };\n\n          changePropertyName('w', _strWidth); //change w to width\n\n          changePropertyName('h', _strHeight); //change h to height\n\n          delete extended.c; //delete c (the 'changed' prop)\n\n          return extended;\n        }\n\n        ;\n        var obj = {\n          destroyed: !!prepare(_destroyed),\n          sleeping: !!prepare(_sleeping),\n          autoUpdate: prepare(!_mutationObserversConnected),\n          widthAuto: prepare(_widthAutoCache),\n          heightAuto: prepare(_heightAutoCache),\n          padding: prepare(_cssPaddingCache),\n          overflowAmount: prepare(_overflowAmountCache),\n          hideOverflow: prepare(_hideOverflowCache),\n          hasOverflow: prepare(_hasOverflowCache),\n          contentScrollSize: prepare(_contentScrollSizeCache),\n          viewportSize: prepare(_viewportSize),\n          hostSize: prepare(_hostSizeCache),\n          documentMixed: prepare(_documentMixed)\n        };\n        return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\n      };\n      /**\r\n       * Gets all or specific extension instance.\r\n       * @param extName The name of the extension from which the instance shall be got.\r\n       * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n       */\n\n\n      _base.ext = function (extName) {\n        var result;\n\n        var privateMethods = _extensionsPrivateMethods.split(' ');\n\n        var i = 0;\n\n        if (type(extName) == TYPES.s) {\n          if (_extensions[LEXICON.hOP](extName)) {\n            result = extendDeep({}, _extensions[extName]);\n\n            for (; i < privateMethods.length; i++) delete result[privateMethods[i]];\n          }\n        } else {\n          result = {};\n\n          for (i in _extensions) result[i] = extendDeep({}, _base.ext(i));\n        }\n\n        return result;\n      };\n      /**\r\n       * Adds a extension to this instance.\r\n       * @param extName The name of the extension which shall be added.\r\n       * @param extensionOptions The extension options which shall be used.\r\n       * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n       */\n\n\n      _base.addExt = function (extName, extensionOptions) {\n        var registeredExtensionObj = _plugin.extension(extName);\n\n        var instance;\n        var instanceAdded;\n        var instanceContract;\n        var contractResult;\n        var contractFulfilled = true;\n\n        if (registeredExtensionObj) {\n          if (!_extensions[LEXICON.hOP](extName)) {\n            instance = registeredExtensionObj.extensionFactory.call(_base, extendDeep({}, registeredExtensionObj.defaultOptions), FRAMEWORK, COMPATIBILITY);\n\n            if (instance) {\n              instanceContract = instance.contract;\n\n              if (type(instanceContract) == TYPES.f) {\n                contractResult = instanceContract(window);\n                contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\n              }\n\n              if (contractFulfilled) {\n                _extensions[extName] = instance;\n                instanceAdded = instance.added;\n                if (type(instanceAdded) == TYPES.f) instanceAdded(extensionOptions);\n                return _base.ext(extName);\n              }\n            }\n          } else return _base.ext(extName);\n        } else console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\n      };\n      /**\r\n       * Removes a extension from this instance.\r\n       * @param extName The name of the extension which shall be removed.\r\n       * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n       */\n\n\n      _base.removeExt = function (extName) {\n        var instance = _extensions[extName];\n        var instanceRemoved;\n\n        if (instance) {\n          delete _extensions[extName];\n          instanceRemoved = instance.removed;\n          if (type(instanceRemoved) == TYPES.f) instanceRemoved();\n          return true;\n        }\n\n        return false;\n      };\n      /**\r\n       * Constructs the plugin.\r\n       * @param targetElement The element to which the plugin shall be applied.\r\n       * @param options The initial options of the plugin.\r\n       * @param extensions The extension(s) which shall be added right after the initialization.\r\n       * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n       */\n\n\n      function construct(targetElement, options, extensions) {\n        _defaultOptions = globals.defaultOptions;\n        _nativeScrollbarStyling = globals.nativeScrollbarStyling;\n        _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n        _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\n        _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\n        _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior); //parse & set options but don't update\n\n        setOptions(extendDeep({}, _defaultOptions, options));\n        _cssCalc = globals.cssCalc;\n        _msieVersion = globals.msie;\n        _autoUpdateRecommended = globals.autoUpdateRecommended;\n        _supportTransition = globals.supportTransition;\n        _supportTransform = globals.supportTransform;\n        _supportPassiveEvents = globals.supportPassiveEvents;\n        _supportResizeObserver = globals.supportResizeObserver;\n        _supportMutationObserver = globals.supportMutationObserver;\n        _restrictedMeasuring = globals.restrictedMeasuring;\n        _documentElement = FRAMEWORK(targetElement.ownerDocument);\n        _documentElementNative = _documentElement[0];\n        _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\n        _windowElementNative = _windowElement[0];\n        _htmlElement = findFirst(_documentElement, 'html');\n        _bodyElement = findFirst(_htmlElement, 'body');\n        _targetElement = FRAMEWORK(targetElement);\n        _targetElementNative = _targetElement[0];\n        _isTextarea = _targetElement.is('textarea');\n        _isBody = _targetElement.is('body');\n        _documentMixed = _documentElementNative !== document;\n        /* On a div Element The if checks only whether:\r\n         * - the targetElement has the class \"os-host\"\r\n         * - the targetElement has a a child with the class \"os-padding\"\r\n         * \r\n         * If that's the case, its assumed the DOM has already the following structure:\r\n         * (The \".os-host\" element is the targetElement)\r\n         *\r\n         *  <div class=\"os-host\">\r\n         *      <div class=\"os-resize-observer-host\"></div>\r\n         *      <div class=\"os-padding\">\r\n         *          <div class=\"os-viewport\">\r\n         *              <div class=\"os-content\"></div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n         *          <div class=\"os-scrollbar-track\">\r\n         *              <div class=\"os-scrollbar-handle\"></div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n         *          <div class=\"os-scrollbar-track\">\r\n         *              <div class=\"os-scrollbar-handle\"></div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar-corner\"></div>\r\n         *  </div>\r\n         *\r\n         * =====================================================================================\r\n         * \r\n         * On a Textarea Element The if checks only whether:\r\n         * - the targetElement has the class \"os-textarea\" \r\n         * - the targetElement is inside a element with the class \"os-content\" \r\n         * \r\n         * If that's the case, its assumed the DOM has already the following structure:\r\n         * (The \".os-textarea\" (textarea) element is the targetElement)\r\n         *\r\n         *  <div class=\"os-host-textarea\">\r\n         *      <div class=\"os-resize-observer-host\"></div>\r\n         *      <div class=\"os-padding os-text-inherit\">\r\n         *          <div class=\"os-viewport os-text-inherit\">\r\n         *              <div class=\"os-content os-text-inherit\">\r\n         *                  <div class=\"os-textarea-cover\"></div>\r\n         *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n         *              </div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n         *          <div class=\"os-scrollbar-track\">\r\n         *              <div class=\"os-scrollbar-handle\"></div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n         *          <div class=\"os-scrollbar-track\">\r\n         *              <div class=\"os-scrollbar-handle\"></div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar-corner\"></div>\r\n         *  </div>\r\n         */\n\n        _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\n        var initBodyScroll;\n        var bodyMouseTouchDownListener; //check if the plugin hasn't to be initialized\n\n        if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\n          dispatchCallback('onInitializationWithdrawn');\n\n          if (_domExists) {\n            setupStructureDOM(true);\n            setupScrollbarsDOM(true);\n            setupScrollbarCornerDOM(true);\n          }\n\n          _destroyed = true;\n          _sleeping = true;\n          return _base;\n        }\n\n        if (_isBody) {\n          initBodyScroll = {};\n          initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\n          initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\n\n          bodyMouseTouchDownListener = function () {\n            _viewportElement.removeAttr(LEXICON.ti);\n\n            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, true, true);\n          };\n        } //build OverlayScrollbars DOM\n\n\n        setupStructureDOM();\n        setupScrollbarsDOM();\n        setupScrollbarCornerDOM(); //create OverlayScrollbars events\n\n        setupStructureEvents();\n        setupScrollbarEvents(true);\n        setupScrollbarEvents(false);\n        setupScrollbarCornerEvents(); //create mutation observers\n\n        createMutationObservers(); //build resize observer for the host element\n\n        setupResizeObserver(_sizeObserverElement, hostOnResized);\n\n        if (_isBody) {\n          //apply the body scroll to handle it right in the update method\n          _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t); //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\n\n\n          if (document.activeElement == targetElement && _viewportElementNative.focus) {\n            //set a tabindex to make the viewportElement focusable\n            _viewportElement.attr(LEXICON.ti, '-1');\n\n            _viewportElementNative.focus();\n            /* the tabindex has to be removed due to;\r\n             * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n             * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n             */\n\n\n            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, false, true);\n          }\n        } //update for the first time & initialize cache\n\n\n        _base.update(_strAuto); //the plugin is initialized now!\n\n\n        _initialized = true;\n        dispatchCallback('onInitialized'); //call all callbacks which would fire before the initialized was complete\n\n        each(_callbacksInitQeueue, function (index, value) {\n          dispatchCallback(value.n, value.a);\n        });\n        _callbacksInitQeueue = []; //add extensions\n\n        if (type(extensions) == TYPES.s) extensions = [extensions];\n        if (COMPATIBILITY.isA(extensions)) each(extensions, function (index, value) {\n          _base.addExt(value);\n        });else if (FRAMEWORK.isPlainObject(extensions)) each(extensions, function (key, value) {\n          _base.addExt(key, value);\n        }); //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\n\n        setTimeout(function () {\n          if (_supportTransition && !_destroyed) addClass(_hostElement, _classNameHostTransition);\n        }, 333);\n        return _base;\n      }\n\n      if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\n        INSTANCES(pluginTargetElement, _base);\n      }\n\n      return _base;\n    }\n    /**\r\n     * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n     * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n     * @param options The custom options with which the plugin shall be initialized.\r\n     * @param extensions The extension(s) which shall be added right after initialization.\r\n     * @returns {*}\r\n     */\n\n\n    _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\n      if (arguments[LEXICON.l] === 0) return this;\n      var arr = [];\n      var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\n      var inst;\n      var result; //pluginTargetElements is null or undefined\n\n      if (!pluginTargetElements) return optsIsPlainObj || !options ? result : arr;\n      /*\r\n         pluginTargetElements will be converted to:\r\n         1. A jQueryElement Array\r\n         2. A HTMLElement Array\r\n         3. A Array with a single HTML Element\r\n         so pluginTargetElements is always a array.\r\n      */\n\n      pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\n      initOverlayScrollbarsStatics();\n\n      if (pluginTargetElements[LEXICON.l] > 0) {\n        if (optsIsPlainObj) {\n          FRAMEWORK.each(pluginTargetElements, function (i, v) {\n            inst = v;\n            if (inst !== undefined) arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\n          });\n        } else {\n          FRAMEWORK.each(pluginTargetElements, function (i, v) {\n            inst = INSTANCES(v);\n            if (options === '!' && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst)) arr.push(inst);else if (options === undefined) arr.push(inst);\n          });\n        }\n\n        result = arr[LEXICON.l] === 1 ? arr[0] : arr;\n      }\n\n      return result;\n    };\n    /**\r\n     * Returns a object which contains global information about the plugin and each instance of it.\r\n     * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n     */\n\n\n    _plugin.globals = function () {\n      initOverlayScrollbarsStatics();\n      var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\n      delete globals['msie'];\n      return globals;\n    };\n    /**\r\n     * Gets or Sets the default options for each new plugin initialization.\r\n     * @param newDefaultOptions The object with which the default options shall be extended.\r\n     */\n\n\n    _plugin.defaultOptions = function (newDefaultOptions) {\n      initOverlayScrollbarsStatics();\n      var currDefaultOptions = _pluginsGlobals.defaultOptions;\n      if (newDefaultOptions === undefined) return FRAMEWORK.extend(true, {}, currDefaultOptions); //set the new default options\n\n      _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\n    };\n    /**\r\n     * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n     * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n     * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n     */\n\n\n    _plugin.valid = function (osInstance) {\n      return osInstance instanceof _plugin && !osInstance.getState().destroyed;\n    };\n    /**\r\n     * Registers, Unregisters or returns a extension.\r\n     * Register: Pass the name and the extension. (defaultOptions is optional)\r\n     * Unregister: Pass the name and anything except a function as extension parameter.\r\n     * Get extension: Pass the name of the extension which shall be got.\r\n     * Get all extensions: Pass no arguments.\r\n     * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n     * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n     * @param defaultOptions The default options which shall be used for the registered extension.\r\n     */\n\n\n    _plugin.extension = function (extensionName, extension, defaultOptions) {\n      var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\n      var argLen = arguments[LEXICON.l];\n      var i = 0;\n\n      if (argLen < 1 || !extNameTypeString) {\n        //return a copy of all extension objects\n        return FRAMEWORK.extend(true, {\n          length: _pluginsExtensions[LEXICON.l]\n        }, _pluginsExtensions);\n      } else if (extNameTypeString) {\n        if (COMPATIBILITY.type(extension) == TYPES.f) {\n          //register extension\n          _pluginsExtensions.push({\n            name: extensionName,\n            extensionFactory: extension,\n            defaultOptions: defaultOptions\n          });\n        } else {\n          for (; i < _pluginsExtensions[LEXICON.l]; i++) {\n            if (_pluginsExtensions[i].name === extensionName) {\n              if (argLen > 1) _pluginsExtensions.splice(i, 1); //remove extension\n              else return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\n            }\n          }\n        }\n      }\n    };\n\n    return _plugin;\n  }();\n\n  if (JQUERY && JQUERY.fn) {\n    /**\r\n     * The jQuery initialization interface.\r\n     * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n     * @param extensions The extension(s) which shall be added right after initialization.\r\n     * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n     */\n    JQUERY.fn.overlayScrollbars = function (options, extensions) {\n      var _elements = this;\n\n      if (JQUERY.isPlainObject(options)) {\n        JQUERY.each(_elements, function () {\n          PLUGIN(this, options, extensions);\n        });\n        return _elements;\n      } else return PLUGIN(_elements, options);\n    };\n  }\n\n  return PLUGIN;\n});","map":{"version":3,"names":["global","factory","define","amd","document","undefined","module","exports","window","PLUGINNAME","TYPES","o","f","a","s","b","n","u","z","LEXICON","c","i","l","p","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","str","charAt","toUpperCase","slice","_cssPrefixes","_jsPrefixes","_cssProperty","name","result","uppercasedName","elmStyle","createElement","resultPossibilities","v","currVendorWithoutDashes","length","replace","_cssPropertyValue","property","values","suffix","dummyStyle","possbleValues","split","preparedSuffix","prop","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","windowSize","x","innerWidth","documentElement","body","innerHeight","bind","func","thisObj","proto","aArgs","Array","call","arguments","fNOP","fBound","apply","concat","wW","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","originalEvent","strPage","strClient","strX","strY","target","srcElement","eventDoc","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","e","isA","def","isArray","type","obj","Object","toString","MATH","Math","JQUERY","jQuery","EASING","_easingsMath","PI","cos","sin","w","pow","t","sqrt","asin","abs","swing","d","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","extend","src","copyIsArray","copy","options","clone","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","key","hasOwnProperty","hasOwnConstructor","hasIsPrototypeOf","constructor","each","callback","isArrayLike","stripAndCollapse","value","tokens","match","join","matches","elem","selector","nodeList","parentNode","querySelectorAll","insertAdjacentElement","el","strategy","child","insertAdjacentHTML","nodeType","setCSSVal","val","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","index","nextAnim","q","splice","animate","props","duration","easing","complete","setAnimationValue","guaranteedNext","hasOptions","from","to","start","progress","step","specialEasing","push","css","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","frame","elapsed","qPos","qObj","stop","max","parseFloat","pos","speacialEasing","startTime","clearQ","jumpToEnd","elementIsVisible","getClientRects","base","elements","elms","innerHTML","children","self","on","eventName","handler","eventNameLength","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parents","parent","firstChild","insertBefore","wrapAll","wrapperHTML","nodes","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","className","classNamePrepared","classList","contains","indexOf","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","is","childs","jump","INSTANCES","_targets","_instancePropertyString","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","_pluginsExtensions","_pluginsOptions","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","updateOnLoadTemplate","inheritedAttrsTemplate","resizeAllowedValues","overflowBehaviorAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","optionsDefaultsAndTemplate","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","convert","template","recursive","valType","_defaults","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","console","warn","JSON","stringify","_default","_prepared","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","parseInt","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","ex","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","h","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","defineProperty","get","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","dprChanged","isZoom","oldScrollbarSize","newScrollbarSize","update","valOne","valTwo","absValOne","absValTwo","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","measureElement","globals","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","_loopID","loop","timeNew","timeDelta","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","min","OverlayScrollbarsInstance","pluginTargetElement","extensions","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_restrictedMeasuring","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseEnter","_strMouseLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_defaultOptions","_currentOptions","_currentPreparedOptions","_extensions","_extensionsPrivateMethods","_lastUpdateTime","_swallowedUpdateHints","_swallowedUpdateTimeout","_swallowUpdateLag","_updateOnLoadEventName","_updateOnLoadElms","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_updateAutoCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","setupResponsiveEventListener","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","_passive","capture","_capture","nativeParam","addDestroyEventListener","setupResizeObserver","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","strChildNodes","constScroll","generateDiv","observer","observe","dir","style","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","isDirty","rAFId","currWidth","currHeight","factor","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","findFirst","onload","wnd","contentDocument","defaultView","directionChanged","scrollLeftValue","resizeObserverObj","disconnect","createMutationObservers","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutations","doUpdate","doUpdateForce","mutation","mutatedAttrs","attributeName","oldValue","createHostClassNameRegExp","filter","hostClassNamesChanged","updateViewportAttrsFromTarget","isUnknownMutation","textareaUpdate","connectMutationObservers","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","disconnectMutationObservers","hostOnResized","changed","hostSize","checkCache","_hostSizeChanged","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","documentOnSelectStart","updateOnLoadCallback","elm","eachUpdateOnLoad","updateOnLoadSelector","_contentSizeChanged","setupHostMouseTouchEvents","destroy","bodyMinSizeChanged","bodyMinSize","parseToZeroOrNumber","oldClassNames","newClassNames","currClasses","oldClasses","diff","getArrayDifferences","idx","regex","mutationType","strClosest","updateAutoContentSizeChanged","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","float","bodyMinSizeC","contentElementScrollSize","meaningfulAttrsChanged","curr","cache","changedAttrs","checks","_elem","_attrs","check","isSizeAffectingCSSProperty","propertyName","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","checkY","sizeIsAffected","checkPropertyName","attrs","targetAttr","wrapAttrOff","minWidth","minHeight","doMeasure","origWidth","width","origHeight","height","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","_force","hostSizeChanged","contentSizeChanged","force","changedOptions","_changedOptions","swallow","displayIsHidden","extendDeep","checkCacheAutoForce","currScroll","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","oldSize","newSize","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","padding","getTopRightBottomLeftHost","sizeAutoObserverElementBCRect","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAuto","widthAutoChanged","wasWidthAuto","heightAuto","bottom","heightAutoChanged","wasHeightAuto","updateBorderX","updateBorderY","border","margin","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","r","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","getScrollbarVars","wh","_w_h","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","viewportSize","contentScrollSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","overflowAmount","hasOverflow","hideOverflow","canScroll","viewportRect","setOverflowVariables","scrollbarVarsInverted","xyI","_x_y","xy","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","setContentElementCSS","strDirection","invertedAutoSize","addRemoveClass","viewportElementCSS","setViewportCSS","XY","_X_Y","elementStyle","dump","webkitTransform","floatTmp","posLeftWithoutFloat","posLeftWithFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","_rows","cursorRow","_cursorRow","cursorCol","_cursorColumn","widestRow","_widestRow","lastRow","lastCol","_columns","cursorPos","_cursorPosition","cursorMax","_cursorMax","cursorIsLastPosition","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarHandleOffset","refreshScrollbarsInteractive","dispatchCallback","isRTL","xScrollable","yScrollable","clipped","updateElementsOnLoad","forced","setOptions","newOptions","validatedOpts","setupStructureDOM","strParent","classNameResizeObserverHost","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","hostElementCSS","selectOrGenerateDivByClass","setupStructureEvents","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","textareaUpdateIntervalID","scrollStopTimeoutId","scrollStopDelay","strFocus","updateTextarea","doClearInterval","clearInterval","textareaOnScroll","textareaOnDrop","textareaOnFocus","textareaOnFocusout","textareaOnKeyDown","keyCode","setInterval","textareaOnKeyUp","contentOnTransitionEnd","viewportOnScroll","nativeOverlayScrollbarsAreActive","setupScrollbarsDOM","selectOrGenerateScrollbarDOM","isHorizontal","scrollbarClassName","scrollbar","track","handle","_scrollbar","_track","_handle","resetScrollbarDOM","horizontalElements","verticalElements","setupScrollbarEvents","scrollbarVarsInfo","_info","insideIFrame","scroll","strActive","strSnapHandle","strClickEvent","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","documentKeyUp","onMouseTouchDownContinue","isTouchEvent","documentDragMove","trackLength","_trackLength","handleLength","_handleLength","scrollRange","_maxScroll","scrollRaw","scrollDeltaPercent","scrollDelta","isFinite","documentMouseTouchUp","scrollStop","mouseInsideHost","clientX","clientY","onHandleMouseTouchDown","onHandleMouseTouchDownAction","isNaN","getHostElementInvertedScale","onTrackMouseTouchDown","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","_left_top","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","decreaseScroll","finishedCondition","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","handleOffset","_handleOffset","_currentScroll","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarHiddenClassName","scrollbarElement","delayfree","anyActive","handleCSS","digit","handleRatio","floor","_Width_Height","_handleLengthRatio","scrollOrTransition","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","transformOffset","translateValue","maxScroll","getScrollRatio","getHandleOffset","scrollRatio","unsnappedScrollRatio","snappedHandleOffset","_currentScrollRatio","getCSSTransitionString","_snappedHandleOffset","isTrack","element1","element2","_l_t","setupScrollbarCornerDOM","setupScrollbarCornerEvents","mouseDownPosition","mouseDownSize","reconnectMutationObserver","pageOffset","getCoordinates","eventIsTrusted","releaseCapture","screenX","screenY","setCapture","args","dependent","extensionOnName","ext","substr","targetCSSObject","prefix","zeroX","zeroY","transitionStr","assembledValue","regExpString","regExpMain","RegExp","regExpValidate","properties","strResult","valueArray","splitCssStyleByComma","$1","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","strOwnerDocument","strHTMLElement","parentWindow","nodeName","a1","a2","k","toFloat","num","textareaCursorPosition","selectionStart","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","rowCols","classesOrAttrs","content","selectParentOrOnlyChildren","onlyChildren","selectParent","getObjectPropVal","path","splits","setObjectPropVal","splitsLength","extendObj","extendObjRoot","current","doAdd","sleep","attrsChanged","contentSizeC","isString","doUpdateAuto","mutHost","mutContent","takeRecords","option","changedOps","extName","removeExt","pop","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","scrollXRatio","maxScrollX","ratio","handleLengthRatio","isRTLNormalized","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","doScrollLeft","doScrollTop","animationOptions","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","proxyCompleteCallback","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","scrollInfo","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","eval","possibleOperator","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","resultDefault","valueType","valueArrLength","valueArrItem","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","axis","block","marginDefault","marginType","marginLength","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","elementSize","finalizeBlock","vars","lt","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","param1","param2","param3","getElements","elementName","host","viewport","scrollbarHorizontal","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","changePropertyName","destroyed","sleeping","documentMixed","privateMethods","addExt","extensionOptions","registeredExtensionObj","extension","instanceAdded","instanceContract","contractResult","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","construct","initBodyScroll","bodyMouseTouchDownListener","activeElement","focus","valid","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","osInstance","extensionName","extNameTypeString","fn","overlayScrollbars","_elements"],"sources":["D:/project/QQMerged/ClientApp/node_modules/overlayscrollbars/js/OverlayScrollbars.js"],"sourcesContent":["/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\r\n\r\n(function (global, factory) {\r\n    if (typeof define === 'function' && define.amd)\r\n        define(function () { return factory(global, global.document, undefined); });\r\n    else if (typeof module === 'object' && typeof module.exports === 'object')\r\n        module.exports = factory(global, global.document, undefined);\r\n    else\r\n        factory(global, global.document, undefined);\r\n}(typeof window !== 'undefined' ? window : this,\r\n    function (window, document, undefined) {\r\n        'use strict';\r\n        var PLUGINNAME = 'OverlayScrollbars';\r\n        var TYPES = {\r\n            o: 'object',\r\n            f: 'function',\r\n            a: 'array',\r\n            s: 'string',\r\n            b: 'boolean',\r\n            n: 'number',\r\n            u: 'undefined',\r\n            z: 'null'\r\n            //d : 'date',\r\n            //e : 'error',\r\n            //r : 'regexp',\r\n            //y : 'symbol'\r\n        };\r\n        var LEXICON = {\r\n            c: 'class',\r\n            s: 'style',\r\n            i: 'id',\r\n            l: 'length',\r\n            p: 'prototype',\r\n            ti: 'tabindex',\r\n            oH: 'offsetHeight',\r\n            cH: 'clientHeight',\r\n            sH: 'scrollHeight',\r\n            oW: 'offsetWidth',\r\n            cW: 'clientWidth',\r\n            sW: 'scrollWidth',\r\n            hOP: 'hasOwnProperty',\r\n            bCR: 'getBoundingClientRect'\r\n        };\r\n        var VENDORS = (function () {\r\n            //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n            var jsCache = {};\r\n            var cssCache = {};\r\n            var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\n            var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\r\n            function firstLetterToUpper(str) {\r\n                return str.charAt(0).toUpperCase() + str.slice(1);\r\n            }\r\n\r\n            return {\r\n                _cssPrefixes: cssPrefixes,\r\n                _jsPrefixes: jsPrefixes,\r\n                _cssProperty: function (name) {\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var uppercasedName = firstLetterToUpper(name);\r\n                    var elmStyle = document.createElement('div')[LEXICON.s];\r\n                    var resultPossibilities;\r\n                    var i = 0;\r\n                    var v;\r\n                    var currVendorWithoutDashes;\r\n\r\n                    for (; i < cssPrefixes.length; i++) {\r\n                        currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\r\n                        resultPossibilities = [\r\n                            name, //transition\r\n                            cssPrefixes[i] + name, //-webkit-transition\r\n                            currVendorWithoutDashes + uppercasedName, //webkitTransition\r\n                            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\r\n                        ];\r\n                        for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\r\n                            if (elmStyle[resultPossibilities[v]] !== undefined) {\r\n                                result = resultPossibilities[v];\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _cssPropertyValue: function (property, values, suffix) {\r\n                    var name = property + ' ' + values;\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var dummyStyle = document.createElement('div')[LEXICON.s];\r\n                    var possbleValues = values.split(' ');\r\n                    var preparedSuffix = suffix || '';\r\n                    var i = 0;\r\n                    var v = -1;\r\n                    var prop;\r\n\r\n                    for (; i < possbleValues[LEXICON.l]; i++) {\r\n                        for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\r\n                            prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\r\n                            dummyStyle.cssText = property + ':' + prop + preparedSuffix;\r\n                            if (dummyStyle[LEXICON.l]) {\r\n                                result = prop;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _jsAPI: function (name, isInterface, fallback) {\r\n                    var i = 0;\r\n                    var result = jsCache[name];\r\n\r\n                    if (!jsCache[LEXICON.hOP](name)) {\r\n                        result = window[name];\r\n                        for (; i < jsPrefixes[LEXICON.l]; i++)\r\n                            result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\r\n                        jsCache[name] = result;\r\n                    }\r\n                    return result || fallback;\r\n                }\r\n            }\r\n        })();\r\n        var COMPATIBILITY = (function () {\r\n            function windowSize(x) {\r\n                return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\r\n            }\r\n            function bind(func, thisObj) {\r\n                if (typeof func != TYPES.f) {\r\n                    throw \"Can't bind function!\";\r\n                    // closest thing possible to the ECMAScript 5\r\n                    // internal IsCallable function\r\n                    //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n                }\r\n                var proto = LEXICON.p;\r\n                var aArgs = Array[proto].slice.call(arguments, 2);\r\n                var fNOP = function () { };\r\n                var fBound = function () { return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments))); };\r\n\r\n                if (func[proto])\r\n                    fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\r\n                fBound[proto] = new fNOP();\r\n\r\n                return fBound;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Gets the current window width.\r\n                 * @returns {Number|number} The current window width in pixel.\r\n                 */\r\n                wW: bind(windowSize, 0, true),\r\n\r\n                /**\r\n                 * Gets the current window height.\r\n                 * @returns {Number|number} The current window height in pixel.\r\n                 */\r\n                wH: bind(windowSize, 0),\r\n\r\n                /**\r\n                 * Gets the MutationObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n                 */\r\n                mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\r\n\r\n                /**\r\n                 * Gets the ResizeObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n                 */\r\n                rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\r\n\r\n                /**\r\n                 * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) { return window.setTimeout(func, 1000 / 60); }),\r\n\r\n                /**\r\n                 * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) { return window.clearTimeout(id); }),\r\n\r\n                /**\r\n                 * Gets the current time.\r\n                 * @returns {number} The current time.\r\n                 */\r\n                now: function () {\r\n                    return Date.now && Date.now() || new Date().getTime();\r\n                },\r\n\r\n                /**\r\n                 * Stops the propagation of the given event.\r\n                 * @param event The event of which the propagation shall be stoped.\r\n                 */\r\n                stpP: function (event) {\r\n                    if (event.stopPropagation)\r\n                        event.stopPropagation();\r\n                    else\r\n                        event.cancelBubble = true;\r\n                },\r\n\r\n                /**\r\n                 * Prevents the default action of the given event.\r\n                 * @param event The event of which the default action shall be prevented.\r\n                 */\r\n                prvD: function (event) {\r\n                    if (event.preventDefault && event.cancelable)\r\n                        event.preventDefault();\r\n                    else\r\n                        event.returnValue = false;\r\n                },\r\n\r\n                /**\r\n                 * Gets the pageX and pageY values of the given mouse event.\r\n                 * @param event The mouse event of which the pageX and pageX shall be got.\r\n                 * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n                 */\r\n                page: function (event) {\r\n                    event = event.originalEvent || event;\r\n\r\n                    var strPage = 'page';\r\n                    var strClient = 'client';\r\n                    var strX = 'X';\r\n                    var strY = 'Y';\r\n                    var target = event.target || event.srcElement || document;\r\n                    var eventDoc = target.ownerDocument || document;\r\n                    var doc = eventDoc.documentElement;\r\n                    var body = eventDoc.body;\r\n\r\n                    //if touch event return return pageX/Y of it\r\n                    if (event.touches !== undefined) {\r\n                        var touch = event.touches[0];\r\n                        return {\r\n                            x: touch[strPage + strX],\r\n                            y: touch[strPage + strY]\r\n                        }\r\n                    }\r\n\r\n                    // Calculate pageX/Y if not native supported\r\n                    if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\r\n\r\n                        return {\r\n                            x: event[strClient + strX] +\r\n                                (doc && doc.scrollLeft || body && body.scrollLeft || 0) -\r\n                                (doc && doc.clientLeft || body && body.clientLeft || 0),\r\n                            y: event[strClient + strY] +\r\n                                (doc && doc.scrollTop || body && body.scrollTop || 0) -\r\n                                (doc && doc.clientTop || body && body.clientTop || 0)\r\n                        }\r\n                    }\r\n                    return {\r\n                        x: event[strPage + strX],\r\n                        y: event[strPage + strY]\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Gets the clicked mouse button of the given mouse event.\r\n                 * @param event The mouse event of which the clicked button shal be got.\r\n                 * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n                 */\r\n                mBtn: function (event) {\r\n                    var button = event.button;\r\n                    if (!event.which && button !== undefined)\r\n                        return (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\r\n                    else\r\n                        return event.which;\r\n                },\r\n\r\n                /**\r\n                 * Checks whether a item is in the given array and returns its index.\r\n                 * @param item The item of which the position in the array shall be determined.\r\n                 * @param arr The array.\r\n                 * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n                 */\r\n                inA: function (item, arr) {\r\n                    for (var i = 0; i < arr[LEXICON.l]; i++)\r\n                        //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\r\n                        try {\r\n                            if (arr[i] === item)\r\n                                return i;\r\n                        }\r\n                        catch (e) { }\r\n                    return -1;\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the given value is a array.\r\n                 * @param arr The potential array.\r\n                 * @returns {boolean} True if the given value is a array, false otherwise.\r\n                 */\r\n                isA: function (arr) {\r\n                    var def = Array.isArray;\r\n                    return def ? def(arr) : this.type(arr) == TYPES.a;\r\n                },\r\n\r\n                /**\r\n                 * Determine the internal JavaScript [[Class]] of the given object.\r\n                 * @param obj The object of which the type shall be determined.\r\n                 * @returns {string} The type of the given object.\r\n                 */\r\n                type: function (obj) {\r\n                    if (obj === undefined)\r\n                        return obj + '';\r\n                    if (obj === null)\r\n                        return obj + '';\r\n                    return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\r\n                },\r\n\r\n\r\n                bind: bind\r\n\r\n                /**\r\n                 * Gets the vendor-prefixed CSS property by the given name.\r\n                 * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n                 * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n                 * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n                 * @param propName The unprefixed CSS property name.\r\n                 * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n\r\n                cssProp: function(propName) {\r\n                    return VENDORS._cssProperty(propName);\r\n                }\r\n                */\r\n            }\r\n        })();\r\n\r\n\r\n        var MATH = Math;\r\n        var JQUERY = window.jQuery;\r\n        var EASING = (function () {\r\n            var _easingsMath = {\r\n                p: MATH.PI,\r\n                c: MATH.cos,\r\n                s: MATH.sin,\r\n                w: MATH.pow,\r\n                t: MATH.sqrt,\r\n                n: MATH.asin,\r\n                a: MATH.abs,\r\n                o: 1.70158\r\n            };\r\n\r\n            /*\r\n             x : current percent (0 - 1),\r\n             t : current time (duration * percent),\r\n             b : start value (from),\r\n             c : end value (to),\r\n             d : duration\r\n\r\n             easingName : function(x, t, b, c, d) { return easedValue; }\r\n             */\r\n\r\n            return {\r\n                swing: function (x, t, b, c, d) {\r\n                    return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\r\n                },\r\n                linear: function (x, t, b, c, d) {\r\n                    return x;\r\n                },\r\n                easeInQuad: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t + b;\r\n                },\r\n                easeOutQuad: function (x, t, b, c, d) {\r\n                    return -c * (t /= d) * (t - 2) + b;\r\n                },\r\n                easeInOutQuad: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t + b : -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n                },\r\n                easeInCubic: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t + b;\r\n                },\r\n                easeOutCubic: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t + 1) + b;\r\n                },\r\n                easeInOutCubic: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\r\n                },\r\n                easeInQuart: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t + b;\r\n                },\r\n                easeOutQuart: function (x, t, b, c, d) {\r\n                    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n                },\r\n                easeInOutQuart: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n                },\r\n                easeInQuint: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t * t + b;\r\n                },\r\n                easeOutQuint: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n                },\r\n                easeInOutQuint: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n                },\r\n                easeInSine: function (x, t, b, c, d) {\r\n                    return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\r\n                },\r\n                easeOutSine: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\r\n                },\r\n                easeInOutSine: function (x, t, b, c, d) {\r\n                    return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\r\n                },\r\n                easeInExpo: function (x, t, b, c, d) {\r\n                    return (t == 0) ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\r\n                },\r\n                easeOutExpo: function (x, t, b, c, d) {\r\n                    return (t == d) ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\r\n                },\r\n                easeInOutExpo: function (x, t, b, c, d) {\r\n                    if (t == 0) return b;\r\n                    if (t == d) return b + c;\r\n                    if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\r\n                    return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\r\n                },\r\n                easeInCirc: function (x, t, b, c, d) {\r\n                    return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\r\n                },\r\n                easeOutCirc: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\r\n                },\r\n                easeInOutCirc: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\r\n                },\r\n                easeInElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                },\r\n                easeOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d) == 1) return b + c;\r\n                    if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\r\n                },\r\n                easeInOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d / 2) == 2) return b + c;\r\n                    if (!p) p = d * (.3 * 1.5);\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                    return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\r\n                },\r\n                easeInBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n                },\r\n                easeOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n                },\r\n                easeInOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return ((t /= d / 2) < 1) ? c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n                },\r\n                easeInBounce: function (x, t, b, c, d) {\r\n                    return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\r\n                },\r\n                easeOutBounce: function (x, t, b, c, d) {\r\n                    var o = 7.5625;\r\n                    if ((t /= d) < (1 / 2.75)) {\r\n                        return c * (o * t * t) + b;\r\n                    } else if (t < (2 / 2.75)) {\r\n                        return c * (o * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n                    } else if (t < (2.5 / 2.75)) {\r\n                        return c * (o * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n                    } else {\r\n                        return c * (o * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n                    }\r\n                },\r\n                easeInOutBounce: function (x, t, b, c, d) {\r\n                    return (t < d / 2) ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n                }\r\n            };\r\n            /*\r\n             *\r\n             * TERMS OF USE - EASING EQUATIONS\r\n             * \r\n             * Open source under the BSD License. \r\n             * \r\n             * Copyright Â© 2001 Robert Penner\r\n             * All rights reserved.\r\n             * \r\n             * Redistribution and use in source and binary forms, with or without modification, \r\n             * are permitted provided that the following conditions are met:\r\n             * \r\n             * Redistributions of source code must retain the above copyright notice, this list of \r\n             * conditions and the following disclaimer.\r\n             * Redistributions in binary form must reproduce the above copyright notice, this list \r\n             * of conditions and the following disclaimer in the documentation and/or other materials \r\n             * provided with the distribution.\r\n             * \r\n             * Neither the name of the author nor the names of contributors may be used to endorse \r\n             * or promote products derived from this software without specific prior written permission.\r\n             * \r\n             * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n             * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n             * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n             *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n             *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n             *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n             * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n             *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n             * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n             *\r\n             */\r\n        })();\r\n        var FRAMEWORK = (function () {\r\n            var _rnothtmlwhite = (/[^\\x20\\t\\r\\n\\f]+/g);\r\n            var _strSpace = ' ';\r\n            var _strEmpty = '';\r\n            var _strScrollLeft = 'scrollLeft';\r\n            var _strScrollTop = 'scrollTop';\r\n            var _animations = [];\r\n            var _type = COMPATIBILITY.type;\r\n            var _cssNumber = {\r\n                animationIterationCount: true,\r\n                columnCount: true,\r\n                fillOpacity: true,\r\n                flexGrow: true,\r\n                flexShrink: true,\r\n                fontWeight: true,\r\n                lineHeight: true,\r\n                opacity: true,\r\n                order: true,\r\n                orphans: true,\r\n                widows: true,\r\n                zIndex: true,\r\n                zoom: true\r\n            };\r\n\r\n            function extend() {\r\n                var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {},\r\n                    i = 1,\r\n                    length = arguments[LEXICON.l],\r\n                    deep = false;\r\n\r\n                // Handle a deep copy situation\r\n                if (_type(target) == TYPES.b) {\r\n                    deep = target;\r\n                    target = arguments[1] || {};\r\n                    // skip the boolean and the target\r\n                    i = 2;\r\n                }\r\n\r\n                // Handle case when target is a string or something (possible in deep copy)\r\n                if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\r\n                    target = {};\r\n                }\r\n\r\n                // extend jQuery itself if only one argument is passed\r\n                if (length === i) {\r\n                    target = FakejQuery;\r\n                    --i;\r\n                }\r\n\r\n                for (; i < length; i++) {\r\n                    // Only deal with non-null/undefined values\r\n                    if ((options = arguments[i]) != null) {\r\n                        // Extend the base object\r\n                        for (name in options) {\r\n                            src = target[name];\r\n                            copy = options[name];\r\n\r\n                            // Prevent never-ending loop\r\n                            if (target === copy) {\r\n                                continue;\r\n                            }\r\n\r\n                            // Recurse if we're merging plain objects or arrays\r\n                            if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\r\n                                if (copyIsArray) {\r\n                                    copyIsArray = false;\r\n                                    clone = src && COMPATIBILITY.isA(src) ? src : [];\r\n\r\n                                } else {\r\n                                    clone = src && isPlainObject(src) ? src : {};\r\n                                }\r\n\r\n                                // Never move original objects, clone them\r\n                                target[name] = extend(deep, clone, copy);\r\n\r\n                                // Don't bring in undefined values\r\n                            } else if (copy !== undefined) {\r\n                                target[name] = copy;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Return the modified object\r\n                return target;\r\n            };\r\n\r\n            function inArray(item, arr, fromIndex) {\r\n                for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++)\r\n                    if (arr[i] === item)\r\n                        return i;\r\n                return -1;\r\n            }\r\n\r\n            function isFunction(obj) {\r\n                return _type(obj) == TYPES.f;\r\n            };\r\n\r\n            function isEmptyObject(obj) {\r\n                for (var name in obj)\r\n                    return false;\r\n                return true;\r\n            };\r\n\r\n            function isPlainObject(obj) {\r\n                if (!obj || _type(obj) != TYPES.o)\r\n                    return false;\r\n\r\n                var key;\r\n                var proto = LEXICON.p;\r\n                var hasOwnProperty = Object[proto].hasOwnProperty;\r\n                var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\r\n                var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\r\n\r\n                if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n                    return false;\r\n                }\r\n\r\n\r\n                for (key in obj) { /**/ }\r\n\r\n                return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\r\n            };\r\n\r\n            function each(obj, callback) {\r\n                var i = 0;\r\n\r\n                if (isArrayLike(obj)) {\r\n                    for (; i < obj[LEXICON.l]; i++) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    for (i in obj) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                return obj;\r\n            };\r\n\r\n            function isArrayLike(obj) {\r\n                var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\r\n                var t = _type(obj);\r\n                return isFunction(t) ? false : (t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && (length - 1) in obj);\r\n            }\r\n\r\n            function stripAndCollapse(value) {\r\n                var tokens = value.match(_rnothtmlwhite) || [];\r\n                return tokens.join(_strSpace);\r\n            }\r\n\r\n            function matches(elem, selector) {\r\n                var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\r\n                var i = nodeList[LEXICON.l];\r\n\r\n                while (i--)\r\n                    if (nodeList[i] == elem)\r\n                        return true;\r\n\r\n                return false;\r\n            }\r\n\r\n            function insertAdjacentElement(el, strategy, child) {\r\n                if (COMPATIBILITY.isA(child)) {\r\n                    for (var i = 0; i < child[LEXICON.l]; i++)\r\n                        insertAdjacentElement(el, strategy, child[i]);\r\n                }\r\n                else if (_type(child) == TYPES.s)\r\n                    el.insertAdjacentHTML(strategy, child);\r\n                else\r\n                    el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\r\n            }\r\n\r\n            function setCSSVal(el, prop, val) {\r\n                try {\r\n                    if (el[LEXICON.s][prop] !== undefined)\r\n                        el[LEXICON.s][prop] = parseCSSVal(prop, val);\r\n                } catch (e) { }\r\n            }\r\n\r\n            function parseCSSVal(prop, val) {\r\n                if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n)\r\n                    val += 'px';\r\n                return val;\r\n            }\r\n\r\n            function startNextAnimationInQ(animObj, removeFromQ) {\r\n                var index;\r\n                var nextAnim;\r\n                if (removeFromQ !== false)\r\n                    animObj.q.splice(0, 1);\r\n                if (animObj.q[LEXICON.l] > 0) {\r\n                    nextAnim = animObj.q[0];\r\n                    animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\r\n                }\r\n                else {\r\n                    index = inArray(animObj, _animations);\r\n                    if (index > -1)\r\n                        _animations.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            function setAnimationValue(el, prop, value) {\r\n                if (prop === _strScrollLeft || prop === _strScrollTop)\r\n                    el[prop] = value;\r\n                else\r\n                    setCSSVal(el, prop, value);\r\n            }\r\n\r\n            function animate(el, props, options, easing, complete, guaranteedNext) {\r\n                var hasOptions = isPlainObject(options);\r\n                var from = {};\r\n                var to = {};\r\n                var i = 0;\r\n                var key;\r\n                var animObj;\r\n                var start;\r\n                var progress;\r\n                var step;\r\n                var specialEasing;\r\n                var duration;\r\n                if (hasOptions) {\r\n                    easing = options.easing;\r\n                    start = options.start;\r\n                    progress = options.progress;\r\n                    step = options.step;\r\n                    specialEasing = options.specialEasing;\r\n                    complete = options.complete;\r\n                    duration = options.duration;\r\n                }\r\n                else\r\n                    duration = options;\r\n                specialEasing = specialEasing || {};\r\n                duration = duration || 400;\r\n                easing = easing || 'swing';\r\n                guaranteedNext = guaranteedNext || false;\r\n\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    if (_animations[i].el === el) {\r\n                        animObj = _animations[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!animObj) {\r\n                    animObj = {\r\n                        el: el,\r\n                        q: []\r\n                    };\r\n                    _animations.push(animObj);\r\n                }\r\n\r\n                for (key in props) {\r\n                    if (key === _strScrollLeft || key === _strScrollTop)\r\n                        from[key] = el[key];\r\n                    else\r\n                        from[key] = FakejQuery(el).css(key);\r\n                }\r\n\r\n                for (key in from) {\r\n                    if (from[key] !== props[key] && props[key] !== undefined)\r\n                        to[key] = props[key];\r\n                }\r\n\r\n                if (!isEmptyObject(to)) {\r\n                    var timeNow;\r\n                    var end;\r\n                    var percent;\r\n                    var fromVal;\r\n                    var toVal;\r\n                    var easedVal;\r\n                    var timeStart;\r\n                    var frame;\r\n                    var elapsed;\r\n                    var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\r\n                    var qObj = {\r\n                        props: to,\r\n                        duration: hasOptions ? options : duration,\r\n                        easing: easing,\r\n                        complete: complete\r\n                    };\r\n                    if (qPos === -1) {\r\n                        qPos = animObj.q[LEXICON.l];\r\n                        animObj.q.push(qObj);\r\n                    }\r\n\r\n                    if (qPos === 0) {\r\n                        if (duration > 0) {\r\n                            timeStart = COMPATIBILITY.now();\r\n                            frame = function () {\r\n                                timeNow = COMPATIBILITY.now();\r\n                                elapsed = (timeNow - timeStart);\r\n                                end = qObj.stop || elapsed >= duration;\r\n                                percent = 1 - ((MATH.max(0, timeStart + duration - timeNow) / duration) || 0);\r\n\r\n                                for (key in to) {\r\n                                    fromVal = parseFloat(from[key]);\r\n                                    toVal = parseFloat(to[key]);\r\n                                    easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\r\n                                    setAnimationValue(el, key, easedVal);\r\n                                    if (isFunction(step)) {\r\n                                        step(easedVal, {\r\n                                            elem: el,\r\n                                            prop: key,\r\n                                            start: fromVal,\r\n                                            now: easedVal,\r\n                                            end: toVal,\r\n                                            pos: percent,\r\n                                            options: {\r\n                                                easing: easing,\r\n                                                speacialEasing: specialEasing,\r\n                                                duration: duration,\r\n                                                complete: complete,\r\n                                                step: step\r\n                                            },\r\n                                            startTime: timeStart\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (isFunction(progress))\r\n                                    progress({}, percent, MATH.max(0, duration - elapsed));\r\n\r\n                                if (end) {\r\n                                    startNextAnimationInQ(animObj);\r\n                                    if (isFunction(complete))\r\n                                        complete();\r\n                                }\r\n                                else\r\n                                    qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                            };\r\n                            qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                        }\r\n                        else {\r\n                            for (key in to)\r\n                                setAnimationValue(el, key, to[key]);\r\n                            startNextAnimationInQ(animObj);\r\n                        }\r\n                    }\r\n                }\r\n                else if (guaranteedNext)\r\n                    startNextAnimationInQ(animObj);\r\n            }\r\n\r\n            function stop(el, clearQ, jumpToEnd) {\r\n                var animObj;\r\n                var qObj;\r\n                var key;\r\n                var i = 0;\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    animObj = _animations[i];\r\n                    if (animObj.el === el) {\r\n                        if (animObj.q[LEXICON.l] > 0) {\r\n                            qObj = animObj.q[0];\r\n                            qObj.stop = true;\r\n                            COMPATIBILITY.cAF()(qObj.frame);\r\n                            animObj.q.splice(0, 1);\r\n\r\n                            if (jumpToEnd)\r\n                                for (key in qObj.props)\r\n                                    setAnimationValue(el, key, qObj.props[key]);\r\n\r\n                            if (clearQ)\r\n                                animObj.q = [];\r\n                            else\r\n                                startNextAnimationInQ(animObj, false);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function elementIsVisible(el) {\r\n                return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\r\n            }\r\n\r\n            function FakejQuery(selector) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var base = new FakejQuery();\r\n                var elements = selector;\r\n                var i = 0;\r\n                var elms;\r\n                var el;\r\n\r\n                if (_type(selector) == TYPES.s) {\r\n                    elements = [];\r\n                    if (selector.charAt(0) === '<') {\r\n                        el = document.createElement('div');\r\n                        el.innerHTML = selector;\r\n                        elms = el.children;\r\n                    }\r\n                    else {\r\n                        elms = document.querySelectorAll(selector);\r\n                    }\r\n\r\n                    for (; i < elms[LEXICON.l]; i++)\r\n                        elements.push(elms[i]);\r\n                }\r\n\r\n                if (elements) {\r\n                    if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self))\r\n                        elements = [elements];\r\n\r\n                    for (i = 0; i < elements[LEXICON.l]; i++)\r\n                        base[i] = elements[i];\r\n\r\n                    base[LEXICON.l] = elements[LEXICON.l];\r\n                }\r\n\r\n                return base;\r\n            };\r\n\r\n            FakejQuery[LEXICON.p] = {\r\n\r\n                //EVENTS:\r\n\r\n                on: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.addEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.addEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.attachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                off: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.removeEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.removeEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.detachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                one: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        FakejQuery.each(eventName, function (i, oneEventName) {\r\n                            var oneHandler = function (e) {\r\n                                handler.call(this, e);\r\n                                el.off(oneEventName, oneHandler);\r\n                            };\r\n                            el.on(oneEventName, oneHandler);\r\n                        });\r\n                    });\r\n                },\r\n\r\n                trigger: function (eventName) {\r\n                    var el;\r\n                    var event;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        if (document.createEvent) {\r\n                            event = document.createEvent('HTMLEvents');\r\n                            event.initEvent(eventName, true, false);\r\n                            el.dispatchEvent(event);\r\n                        }\r\n                        else {\r\n                            el.fireEvent('on' + eventName);\r\n                        }\r\n                    });\r\n                },\r\n\r\n                //DOM NODE INSERTING / REMOVING:\r\n\r\n                append: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforeend', child); });\r\n                },\r\n\r\n                prepend: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterbegin', child); });\r\n                },\r\n\r\n                before: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforebegin', child); });\r\n                },\r\n\r\n                after: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterend', child); });\r\n                },\r\n\r\n                remove: function () {\r\n                    return this.each(function () {\r\n                        var el = this;\r\n                        var parentNode = el.parentNode;\r\n                        if (parentNode != null)\r\n                            parentNode.removeChild(el);\r\n                    });\r\n                },\r\n\r\n                unwrap: function () {\r\n                    var parents = [];\r\n                    var i;\r\n                    var el;\r\n                    var parent;\r\n\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (inArray(parent, parents) === - 1)\r\n                            parents.push(parent);\r\n                    });\r\n\r\n                    for (i = 0; i < parents[LEXICON.l]; i++) {\r\n                        el = parents[i];\r\n                        parent = el.parentNode;\r\n                        while (el.firstChild)\r\n                            parent.insertBefore(el.firstChild, el);\r\n                        parent.removeChild(el);\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapAll: function (wrapperHTML) {\r\n                    var i;\r\n                    var nodes = this;\r\n                    var wrapper = FakejQuery(wrapperHTML)[0];\r\n                    var deepest = wrapper;\r\n                    var parent = nodes[0].parentNode;\r\n                    var previousSibling = nodes[0].previousSibling;\r\n                    while (deepest.childNodes[LEXICON.l] > 0)\r\n                        deepest = deepest.childNodes[0];\r\n\r\n                    for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++)\r\n                        deepest.appendChild(nodes[i]);\r\n\r\n                    var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\r\n                    parent.insertBefore(wrapper, nextSibling);\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapInner: function (wrapperHTML) {\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        var contents = el.contents();\r\n\r\n                        if (contents[LEXICON.l])\r\n                            contents.wrapAll(wrapperHTML);\r\n                        else\r\n                            el.append(wrapperHTML);\r\n                    });\r\n                },\r\n\r\n                wrap: function (wrapperHTML) {\r\n                    return this.each(function () { FakejQuery(this).wrapAll(wrapperHTML); });\r\n                },\r\n\r\n\r\n                //DOM NODE MANIPULATION / INFORMATION:\r\n\r\n                css: function (styles, val) {\r\n                    var el;\r\n                    var key;\r\n                    var cptStyle;\r\n                    var getCptStyle = window.getComputedStyle;\r\n                    if (_type(styles) == TYPES.s) {\r\n                        if (val === undefined) {\r\n                            el = this[0];\r\n                            cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles];\r\n\r\n                            //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\r\n                            return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\r\n                        }\r\n                        else {\r\n                            return this.each(function () {\r\n                                setCSSVal(this, styles, val);\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        return this.each(function () {\r\n                            for (key in styles)\r\n                                setCSSVal(this, key, styles[key]);\r\n                        });\r\n                    }\r\n                },\r\n\r\n                hasClass: function (className) {\r\n                    var elem, i = 0;\r\n                    var classNamePrepared = _strSpace + className + _strSpace;\r\n                    var classList;\r\n\r\n                    while ((elem = this[i++])) {\r\n                        classList = elem.classList;\r\n                        if (classList && classList.contains(className))\r\n                            return true;\r\n                        else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1)\r\n                            return true;\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n\r\n                addClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.add(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        if (cur.indexOf(_strSpace + clazz + _strSpace) < 0)\r\n                                            cur += clazz + _strSpace;\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                removeClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.remove(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        while (cur.indexOf(_strSpace + clazz + _strSpace) > -1)\r\n                                            cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                hide: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'none'; });\r\n                },\r\n\r\n                show: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'block'; });\r\n                },\r\n\r\n                attr: function (attrName, value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el.getAttribute(attrName);\r\n                        el.setAttribute(attrName, value);\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                removeAttr: function (attrName) {\r\n                    return this.each(function () { this.removeAttribute(attrName); });\r\n                },\r\n\r\n                offset: function () {\r\n                    var el = this[0];\r\n                    var rect = el[LEXICON.bCR]();\r\n                    var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\r\n                    var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\r\n                    return {\r\n                        top: rect.top + scrollTop,\r\n                        left: rect.left + scrollLeft\r\n                    };\r\n                },\r\n\r\n                position: function () {\r\n                    var el = this[0];\r\n                    return {\r\n                        top: el.offsetTop,\r\n                        left: el.offsetLeft\r\n                    };\r\n                },\r\n\r\n                scrollLeft: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollLeft];\r\n                        el[_strScrollLeft] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                scrollTop: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollTop];\r\n                        el[_strScrollTop] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                val: function (value) {\r\n                    var el = this[0];\r\n                    if (!value)\r\n                        return el.value;\r\n                    el.value = value;\r\n                    return this;\r\n                },\r\n\r\n\r\n                //DOM TRAVERSAL / FILTERING:\r\n\r\n                first: function () {\r\n                    return this.eq(0);\r\n                },\r\n\r\n                last: function () {\r\n                    return this.eq(-1);\r\n                },\r\n\r\n                eq: function (index) {\r\n                    return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\r\n                },\r\n\r\n                find: function (selector) {\r\n                    var children = [];\r\n                    var i;\r\n                    this.each(function () {\r\n                        var el = this;\r\n                        var ch = el.querySelectorAll(selector);\r\n                        for (i = 0; i < ch[LEXICON.l]; i++)\r\n                            children.push(ch[i]);\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                children: function (selector) {\r\n                    var children = [];\r\n                    var el;\r\n                    var ch;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        ch = this.children;\r\n                        for (i = 0; i < ch[LEXICON.l]; i++) {\r\n                            el = ch[i];\r\n                            if (selector) {\r\n                                if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                                    children.push(el);\r\n                            }\r\n                            else\r\n                                children.push(el);\r\n                        }\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                parent: function (selector) {\r\n                    var parents = [];\r\n                    var parent;\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (selector ? FakejQuery(parent).is(selector) : true)\r\n                            parents.push(parent);\r\n                    });\r\n                    return FakejQuery(parents);\r\n                },\r\n\r\n                is: function (selector) {\r\n\r\n                    var el;\r\n                    var i;\r\n                    for (i = 0; i < this[LEXICON.l]; i++) {\r\n                        el = this[i];\r\n                        if (selector === ':visible')\r\n                            return elementIsVisible(el);\r\n                        if (selector === ':hidden')\r\n                            return !elementIsVisible(el);\r\n                        if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                contents: function () {\r\n                    var contents = [];\r\n                    var childs;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        childs = this.childNodes;\r\n                        for (i = 0; i < childs[LEXICON.l]; i++)\r\n                            contents.push(childs[i]);\r\n                    });\r\n\r\n                    return FakejQuery(contents);\r\n                },\r\n\r\n                each: function (callback) {\r\n                    return each(this, callback);\r\n                },\r\n\r\n\r\n                //ANIMATION:\r\n\r\n                animate: function (props, duration, easing, complete) {\r\n                    return this.each(function () { animate(this, props, duration, easing, complete); });\r\n                },\r\n\r\n                stop: function (clearQ, jump) {\r\n                    return this.each(function () { stop(this, clearQ, jump); });\r\n                }\r\n            };\r\n\r\n            extend(FakejQuery, {\r\n                extend: extend,\r\n                inArray: inArray,\r\n                isEmptyObject: isEmptyObject,\r\n                isPlainObject: isPlainObject,\r\n                each: each\r\n            });\r\n\r\n            return FakejQuery;\r\n        })();\r\n        var INSTANCES = (function () {\r\n            var _targets = [];\r\n            var _instancePropertyString = '__overlayScrollbars__';\r\n\r\n            /**\r\n             * Register, unregister or get a certain (or all) instances.\r\n             * Register: Pass the target and the instance.\r\n             * Unregister: Pass the target and null.\r\n             * Get Instance: Pass the target from which the instance shall be got.\r\n             * Get Targets: Pass no arguments.\r\n             * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n             * @param instance The instance.\r\n             * @returns {*|void} Returns the instance from the given target.\r\n             */\r\n            return function (target, instance) {\r\n                var argLen = arguments[LEXICON.l];\r\n                if (argLen < 1) {\r\n                    //return all targets\r\n                    return _targets;\r\n                }\r\n                else {\r\n                    if (instance) {\r\n                        //register instance\r\n                        target[_instancePropertyString] = instance;\r\n                        _targets.push(target);\r\n                    }\r\n                    else {\r\n                        var index = COMPATIBILITY.inA(target, _targets);\r\n                        if (index > -1) {\r\n                            if (argLen > 1) {\r\n                                //unregister instance\r\n                                delete target[_instancePropertyString];\r\n                                _targets.splice(index, 1);\r\n                            }\r\n                            else {\r\n                                //get instance from target\r\n                                return _targets[index][_instancePropertyString];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })();\r\n        var PLUGIN = (function () {\r\n            var _plugin;\r\n            var _pluginsGlobals;\r\n            var _pluginsAutoUpdateLoop;\r\n            var _pluginsExtensions = [];\r\n            var _pluginsOptions = (function () {\r\n                var type = COMPATIBILITY.type;\r\n                var possibleTemplateTypes = [\r\n                    TYPES.b, //boolean\r\n                    TYPES.n, //number\r\n                    TYPES.s, //string\r\n                    TYPES.a, //array\r\n                    TYPES.o, //object\r\n                    TYPES.f, //function\r\n                    TYPES.z  //null\r\n                ];\r\n                var restrictedStringsSplit = ' ';\r\n                var restrictedStringsPossibilitiesSplit = ':';\r\n                var classNameAllowedValues = [TYPES.z, TYPES.s];\r\n                var numberAllowedValues = TYPES.n;\r\n                var booleanNullAllowedValues = [TYPES.z, TYPES.b];\r\n                var booleanTrueTemplate = [true, TYPES.b];\r\n                var booleanFalseTemplate = [false, TYPES.b];\r\n                var callbackTemplate = [null, [TYPES.z, TYPES.f]];\r\n                var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\r\n                var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\r\n                var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\r\n                var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\r\n                var optionsDefaultsAndTemplate = {\r\n                    className: ['os-theme-dark', classNameAllowedValues],                //null || string\r\n                    resize: ['none', resizeAllowedValues],                               //none || both  || horizontal || vertical || n || b || h || v\r\n                    sizeAutoCapable: booleanTrueTemplate,                                //true || false\r\n                    clipAlways: booleanTrueTemplate,                                     //true || false\r\n                    normalizeRTL: booleanTrueTemplate,                                   //true || false\r\n                    paddingAbsolute: booleanFalseTemplate,                               //true || false\r\n                    autoUpdate: [null, booleanNullAllowedValues],                        //true || false || null\r\n                    autoUpdateInterval: [33, numberAllowedValues],                       //number\r\n                    updateOnLoad: updateOnLoadTemplate,                                  //string || array || null\r\n                    nativeScrollbarsOverlaid: {\r\n                        showNativeScrollbars: booleanFalseTemplate,                      //true || false\r\n                        initialize: booleanTrueTemplate                                  //true || false\r\n                    },\r\n                    overflowBehavior: {\r\n                        x: ['scroll', overflowBehaviorAllowedValues],                    //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                        y: ['scroll', overflowBehaviorAllowedValues]                     //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                    },\r\n                    scrollbars: {\r\n                        visibility: ['auto', scrollbarsVisibilityAllowedValues],         //visible || hidden || auto || v || h || a\r\n                        autoHide: ['never', scrollbarsAutoHideAllowedValues],            //never || scroll || leave || move || n || s || l || m\r\n                        autoHideDelay: [800, numberAllowedValues],                       //number\r\n                        dragScrolling: booleanTrueTemplate,                              //true || false\r\n                        clickScrolling: booleanFalseTemplate,                            //true || false\r\n                        touchSupport: booleanTrueTemplate,                               //true || false\r\n                        snapHandle: booleanFalseTemplate                                 //true || false\r\n                    },\r\n                    textarea: {\r\n                        dynWidth: booleanFalseTemplate,                                  //true || false\r\n                        dynHeight: booleanFalseTemplate,                                 //true || false\r\n                        inheritedAttrs: inheritedAttrsTemplate                           //string || array || null\r\n                    },\r\n                    callbacks: {\r\n                        onInitialized: callbackTemplate,                                 //null || function\r\n                        onInitializationWithdrawn: callbackTemplate,                     //null || function\r\n                        onDestroyed: callbackTemplate,                                   //null || function\r\n                        onScrollStart: callbackTemplate,                                 //null || function\r\n                        onScroll: callbackTemplate,                                      //null || function\r\n                        onScrollStop: callbackTemplate,                                  //null || function\r\n                        onOverflowChanged: callbackTemplate,                             //null || function\r\n                        onOverflowAmountChanged: callbackTemplate,                       //null || function\r\n                        onDirectionChanged: callbackTemplate,                            //null || function\r\n                        onContentSizeChanged: callbackTemplate,                          //null || function\r\n                        onHostSizeChanged: callbackTemplate,                             //null || function\r\n                        onUpdated: callbackTemplate                                      //null || function\r\n                    }\r\n                };\r\n                var convert = function (template) {\r\n                    var recursive = function (obj) {\r\n                        var key;\r\n                        var val;\r\n                        var valType;\r\n                        for (key in obj) {\r\n                            if (!obj[LEXICON.hOP](key))\r\n                                continue;\r\n                            val = obj[key];\r\n                            valType = type(val);\r\n                            if (valType == TYPES.a)\r\n                                obj[key] = val[template ? 1 : 0];\r\n                            else if (valType == TYPES.o)\r\n                                obj[key] = recursive(val);\r\n                        }\r\n                        return obj;\r\n                    };\r\n                    return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\r\n                };\r\n\r\n                return {\r\n                    _defaults: convert(),\r\n\r\n                    _template: convert(true),\r\n\r\n                    /**\r\n                     * Validates the passed object by the passed template.\r\n                     * @param obj The object which shall be validated.\r\n                     * @param template The template which defines the allowed values and types.\r\n                     * @param writeErrors True if errors shall be logged to the console.\r\n                     * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n                     * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n                     */\r\n                    _validate: function (obj, template, writeErrors, diffObj) {\r\n                        var validatedOptions = {};\r\n                        var validatedOptionsPrepared = {};\r\n                        var objectCopy = FRAMEWORK.extend(true, {}, obj);\r\n                        var inArray = FRAMEWORK.inArray;\r\n                        var isEmptyObj = FRAMEWORK.isEmptyObject;\r\n                        var checkObjectProps = function (data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\r\n                            for (var prop in template) {\r\n                                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\r\n                                    var isValid = false;\r\n                                    var isDiff = false;\r\n                                    var templateValue = template[prop];\r\n                                    var templateValueType = type(templateValue);\r\n                                    var templateIsComplex = templateValueType == TYPES.o;\r\n                                    var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\r\n                                    var dataDiffValue = diffData[prop];\r\n                                    var dataValue = data[prop];\r\n                                    var dataValueType = type(dataValue);\r\n                                    var propPrefix = prevPropName ? prevPropName + '.' : '';\r\n                                    var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\r\n                                    var errorPossibleTypes = [];\r\n                                    var errorRestrictedStrings = [];\r\n                                    var restrictedStringValuesSplit;\r\n                                    var restrictedStringValuesPossibilitiesSplit;\r\n                                    var isRestrictedValue;\r\n                                    var mainPossibility;\r\n                                    var currType;\r\n                                    var i;\r\n                                    var v;\r\n                                    var j;\r\n\r\n                                    dataDiffValue = dataDiffValue === undefined ? {} : dataDiffValue;\r\n\r\n                                    //if the template has a object as value, it means that the options are complex (verschachtelt)\r\n                                    if (templateIsComplex && dataValueType == TYPES.o) {\r\n                                        validatedOptions[prop] = {};\r\n                                        validatedOptionsPrepared[prop] = {};\r\n                                        checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\r\n                                        FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\r\n                                            if (isEmptyObj(value[prop])) {\r\n                                                delete value[prop];\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else if (!templateIsComplex) {\r\n                                        for (i = 0; i < templateTypes[LEXICON.l]; i++) {\r\n                                            currType = templateTypes[i];\r\n                                            templateValueType = type(currType);\r\n                                            //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\r\n                                            isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\r\n                                            if (isRestrictedValue) {\r\n                                                errorPossibleTypes.push(TYPES.s);\r\n\r\n                                                //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\r\n                                                restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\r\n                                                errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\r\n                                                for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\r\n                                                    //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\r\n                                                    restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\r\n                                                    mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\r\n                                                    for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\r\n                                                        //if any possibility matches with the dataValue, its valid\r\n                                                        if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\r\n                                                            isValid = true;\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (isValid)\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                errorPossibleTypes.push(currType);\r\n\r\n                                                if (dataValueType === currType) {\r\n                                                    isValid = true;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        if (isValid) {\r\n                                            isDiff = dataValue !== dataDiffValue;\r\n\r\n                                            if (isDiff)\r\n                                                validatedOptions[prop] = dataValue;\r\n\r\n                                            if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff)\r\n                                                validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\r\n                                        }\r\n                                        else if (writeErrors) {\r\n                                            console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" +\r\n                                                \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" +\r\n                                                (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\r\n                                        }\r\n                                        delete data[prop];\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared);\r\n\r\n                        //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\r\n                        /*\r\n                        if(keepForeignProps) {\r\n                            FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                            FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n                        }\r\n                        */\r\n\r\n                        if (!isEmptyObj(objectCopy) && writeErrors)\r\n                            console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\r\n\r\n                        return {\r\n                            _default: validatedOptions,\r\n                            _prepared: validatedOptionsPrepared\r\n                        };\r\n                    }\r\n                }\r\n            }());\r\n\r\n            /**\r\n             * Initializes the object which contains global information about the plugin and each instance of it.\r\n             */\r\n            function initOverlayScrollbarsStatics() {\r\n                if (!_pluginsGlobals)\r\n                    _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\r\n                if (!_pluginsAutoUpdateLoop)\r\n                    _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\r\n            }\r\n\r\n            /**\r\n             * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @param defaultOptions\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsGlobals(defaultOptions) {\r\n                var _base = this;\r\n                var strOverflow = 'overflow';\r\n                var strHidden = 'hidden';\r\n                var strScroll = 'scroll';\r\n                var bodyElement = FRAMEWORK('body');\r\n                var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\r\n                var scrollbarDummyElement0 = scrollbarDummyElement[0];\r\n                var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\r\n\r\n                bodyElement.append(scrollbarDummyElement);\r\n                scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\r\n\r\n                var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\r\n                var nativeScrollbarIsOverlaid = {\r\n                    x: nativeScrollbarSize.x === 0,\r\n                    y: nativeScrollbarSize.y === 0\r\n                };\r\n                var msie = (function () {\r\n                    var ua = window.navigator.userAgent;\r\n                    var strIndexOf = 'indexOf';\r\n                    var strSubString = 'substring';\r\n                    var msie = ua[strIndexOf]('MSIE ');\r\n                    var trident = ua[strIndexOf]('Trident/');\r\n                    var edge = ua[strIndexOf]('Edge/');\r\n                    var rv = ua[strIndexOf]('rv:');\r\n                    var result;\r\n                    var parseIntFunc = parseInt;\r\n\r\n                    // IE 10 or older => return version number\r\n                    if (msie > 0)\r\n                        result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10);\r\n\r\n                    // IE 11 => return version number\r\n                    else if (trident > 0)\r\n                        result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10);\r\n\r\n                    // Edge (IE 12+) => return version number\r\n                    else if (edge > 0)\r\n                        result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10);\r\n\r\n                    // other browser\r\n                    return result;\r\n                })();\r\n\r\n                FRAMEWORK.extend(_base, {\r\n                    defaultOptions: defaultOptions,\r\n                    msie: msie,\r\n                    autoUpdateLoop: false,\r\n                    autoUpdateRecommended: !COMPATIBILITY.mO(),\r\n                    nativeScrollbarSize: nativeScrollbarSize,\r\n                    nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n                    nativeScrollbarStyling: (function () {\r\n                        var result = false;\r\n                        scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\r\n                        try {\r\n                            result = (scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie)) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n                        } catch (ex) { }\r\n\r\n                        //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\r\n                        //and set overflow to scroll\r\n                        //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\r\n                        //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\r\n\r\n                        return result;\r\n                    })(),\r\n                    overlayScrollbarDummySize: { x: 30, y: 30 },\r\n                    cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\r\n                    restrictedMeasuring: (function () {\r\n                        //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\r\n                        //since 1.11.0 always false -> fixed via CSS (hopefully)\r\n                        scrollbarDummyElement.css(strOverflow, strHidden);\r\n                        var scrollSize = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        scrollbarDummyElement.css(strOverflow, 'visible');\r\n                        var scrollSize2 = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        return (scrollSize.w - scrollSize2.w) !== 0 || (scrollSize.h - scrollSize2.h) !== 0;\r\n                    })(),\r\n                    rtlScrollBehavior: (function () {\r\n                        scrollbarDummyElement.css({ 'overflow-y': strHidden, 'overflow-x': strScroll, 'direction': 'rtl' }).scrollLeft(0);\r\n                        var dummyContainerOffset = scrollbarDummyElement.offset();\r\n                        var dummyContainerChildOffset = dummyContainerChild.offset();\r\n                        //https://github.com/KingSora/OverlayScrollbars/issues/187\r\n                        scrollbarDummyElement.scrollLeft(-999);\r\n                        var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\r\n                        return {\r\n                            //origin direction = determines if the zero scroll position is on the left or right side\r\n                            //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n                            //true = on the left side\r\n                            //false = on the right side\r\n                            i: dummyContainerOffset.left === dummyContainerChildOffset.left,\r\n                            //negative = determines if the maximum scroll is positive or negative\r\n                            //'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n                            //true = negative\r\n                            //false = positive\r\n                            n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\r\n                        };\r\n                    })(),\r\n                    supportTransform: !!VENDORS._cssProperty('transform'),\r\n                    supportTransition: !!VENDORS._cssProperty('transition'),\r\n                    supportPassiveEvents: (function () {\r\n                        var supportsPassive = false;\r\n                        try {\r\n                            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n                                get: function () {\r\n                                    supportsPassive = true;\r\n                                }\r\n                            }));\r\n                        } catch (e) { }\r\n                        return supportsPassive;\r\n                    })(),\r\n                    supportResizeObserver: !!COMPATIBILITY.rO(),\r\n                    supportMutationObserver: !!COMPATIBILITY.mO()\r\n                });\r\n\r\n                scrollbarDummyElement.removeAttr(LEXICON.s).remove();\r\n\r\n                //Catch zoom event:\r\n                (function () {\r\n                    if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y)\r\n                        return;\r\n\r\n                    var abs = MATH.abs;\r\n                    var windowWidth = COMPATIBILITY.wW();\r\n                    var windowHeight = COMPATIBILITY.wH();\r\n                    var windowDpr = getWindowDPR();\r\n                    var onResize = function () {\r\n                        if (INSTANCES().length > 0) {\r\n                            var newW = COMPATIBILITY.wW();\r\n                            var newH = COMPATIBILITY.wH();\r\n                            var deltaW = newW - windowWidth;\r\n                            var deltaH = newH - windowHeight;\r\n\r\n                            if (deltaW === 0 && deltaH === 0)\r\n                                return;\r\n\r\n                            var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\r\n                            var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\r\n                            var absDeltaW = abs(deltaW);\r\n                            var absDeltaH = abs(deltaH);\r\n                            var absDeltaWRatio = abs(deltaWRatio);\r\n                            var absDeltaHRatio = abs(deltaHRatio);\r\n                            var newDPR = getWindowDPR();\r\n\r\n                            var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\r\n                            var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\r\n                            var dprChanged = newDPR !== windowDpr && windowDpr > 0;\r\n                            var isZoom = deltaIsBigger && difference && dprChanged;\r\n                            var oldScrollbarSize = _base.nativeScrollbarSize;\r\n                            var newScrollbarSize;\r\n\r\n                            if (isZoom) {\r\n                                bodyElement.append(scrollbarDummyElement);\r\n                                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\r\n                                scrollbarDummyElement.remove();\r\n                                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\r\n                                    FRAMEWORK.each(INSTANCES(), function () {\r\n                                        if (INSTANCES(this))\r\n                                            INSTANCES(this).update('zoom');\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            windowWidth = newW;\r\n                            windowHeight = newH;\r\n                            windowDpr = newDPR;\r\n                        }\r\n                    };\r\n\r\n                    function differenceIsBiggerThanOne(valOne, valTwo) {\r\n                        var absValOne = abs(valOne);\r\n                        var absValTwo = abs(valTwo);\r\n                        return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n                    }\r\n\r\n                    function getWindowDPR() {\r\n                        var dDPI = window.screen.deviceXDPI || 0;\r\n                        var sDPI = window.screen.logicalXDPI || 1;\r\n                        return window.devicePixelRatio || (dDPI / sDPI);\r\n                    }\r\n\r\n                    FRAMEWORK(window).on('resize', onResize);\r\n                })();\r\n\r\n                function calcNativeScrollbarSize(measureElement) {\r\n                    return {\r\n                        x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\r\n                        y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\r\n                    };\r\n                }\r\n            }\r\n\r\n            /**\r\n             * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsAutoUpdateLoop(globals) {\r\n                var _base = this;\r\n                var _inArray = FRAMEWORK.inArray;\r\n                var _getNow = COMPATIBILITY.now;\r\n                var _strAutoUpdate = 'autoUpdate';\r\n                var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\r\n                var _strLength = LEXICON.l;\r\n                var _loopingInstances = [];\r\n                var _loopingInstancesIntervalCache = [];\r\n                var _loopIsActive = false;\r\n                var _loopIntervalDefault = 33;\r\n                var _loopInterval = _loopIntervalDefault;\r\n                var _loopTimeOld = _getNow();\r\n                var _loopID;\r\n\r\n\r\n                /**\r\n                 * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n                 */\r\n                var loop = function () {\r\n                    if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\r\n                        _loopID = COMPATIBILITY.rAF()(function () {\r\n                            loop();\r\n                        });\r\n                        var timeNew = _getNow();\r\n                        var timeDelta = timeNew - _loopTimeOld;\r\n                        var lowestInterval;\r\n                        var instance;\r\n                        var instanceOptions;\r\n                        var instanceAutoUpdateAllowed;\r\n                        var instanceAutoUpdateInterval;\r\n                        var now;\r\n\r\n                        if (timeDelta > _loopInterval) {\r\n                            _loopTimeOld = timeNew - (timeDelta % _loopInterval);\r\n                            lowestInterval = _loopIntervalDefault;\r\n                            for (var i = 0; i < _loopingInstances[_strLength]; i++) {\r\n                                instance = _loopingInstances[i];\r\n                                if (instance !== undefined) {\r\n                                    instanceOptions = instance.options();\r\n                                    instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\r\n                                    instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\r\n                                    now = _getNow();\r\n\r\n                                    if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && (now - _loopingInstancesIntervalCache[i]) > instanceAutoUpdateInterval) {\r\n                                        instance.update('auto');\r\n                                        _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\r\n                                    }\r\n\r\n                                    lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\r\n                                }\r\n                            }\r\n                            _loopInterval = lowestInterval;\r\n                        }\r\n                    } else {\r\n                        _loopInterval = _loopIntervalDefault;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.add = function (instance) {\r\n                    if (_inArray(instance, _loopingInstances) === -1) {\r\n                        _loopingInstances.push(instance);\r\n                        _loopingInstancesIntervalCache.push(_getNow());\r\n                        if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\r\n                            _loopIsActive = true;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            loop();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.remove = function (instance) {\r\n                    var index = _inArray(instance, _loopingInstances);\r\n                    if (index > -1) {\r\n                        //remove from loopingInstances list\r\n                        _loopingInstancesIntervalCache.splice(index, 1);\r\n                        _loopingInstances.splice(index, 1);\r\n\r\n                        //correct update loop behavior\r\n                        if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\r\n                            _loopIsActive = false;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            if (_loopID !== undefined) {\r\n                                COMPATIBILITY.cAF()(_loopID);\r\n                                _loopID = -1;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            /**\r\n             * A object which manages the scrollbars visibility of the target element.\r\n             * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n             * @param options The custom options.\r\n             * @param extensions The custom extensions.\r\n             * @param globals\r\n             * @param autoUpdateLoop\r\n             * @returns {*}\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\r\n                //shortcuts\r\n                var type = COMPATIBILITY.type;\r\n                var inArray = FRAMEWORK.inArray;\r\n                var each = FRAMEWORK.each;\r\n\r\n                //make correct instanceof\r\n                var _base = new _plugin();\r\n                var _frameworkProto = FRAMEWORK[LEXICON.p];\r\n\r\n                //if passed element is no HTML element: skip and return\r\n                if (!isHTMLElement(pluginTargetElement))\r\n                    return;\r\n\r\n                //if passed element is already initialized: set passed options if there are any and return its instance\r\n                if (INSTANCES(pluginTargetElement)) {\r\n                    var inst = INSTANCES(pluginTargetElement);\r\n                    inst.options(options);\r\n                    return inst;\r\n                }\r\n\r\n                //globals:\r\n                var _nativeScrollbarIsOverlaid;\r\n                var _overlayScrollbarDummySize;\r\n                var _rtlScrollBehavior;\r\n                var _autoUpdateRecommended;\r\n                var _msieVersion;\r\n                var _nativeScrollbarStyling;\r\n                var _cssCalc;\r\n                var _nativeScrollbarSize;\r\n                var _supportTransition;\r\n                var _supportTransform;\r\n                var _supportPassiveEvents;\r\n                var _supportResizeObserver;\r\n                var _supportMutationObserver;\r\n                var _restrictedMeasuring;\r\n\r\n                //general readonly:\r\n                var _initialized;\r\n                var _destroyed;\r\n                var _isTextarea;\r\n                var _isBody;\r\n                var _documentMixed;\r\n                var _domExists;\r\n\r\n                //general:\r\n                var _isBorderBox;\r\n                var _sizeAutoObserverAdded;\r\n                var _paddingX;\r\n                var _paddingY;\r\n                var _borderX;\r\n                var _borderY;\r\n                var _marginX;\r\n                var _marginY;\r\n                var _isRTL;\r\n                var _sleeping;\r\n                var _contentBorderSize = {};\r\n                var _scrollHorizontalInfo = {};\r\n                var _scrollVerticalInfo = {};\r\n                var _viewportSize = {};\r\n                var _nativeScrollbarMinSize = {};\r\n\r\n                //naming:\t\r\n                var _strMinusHidden = '-hidden';\r\n                var _strMarginMinus = 'margin-';\r\n                var _strPaddingMinus = 'padding-';\r\n                var _strBorderMinus = 'border-';\r\n                var _strTop = 'top';\r\n                var _strRight = 'right';\r\n                var _strBottom = 'bottom';\r\n                var _strLeft = 'left';\r\n                var _strMinMinus = 'min-';\r\n                var _strMaxMinus = 'max-';\r\n                var _strWidth = 'width';\r\n                var _strHeight = 'height';\r\n                var _strFloat = 'float';\r\n                var _strEmpty = '';\r\n                var _strAuto = 'auto';\r\n                var _strSync = 'sync';\r\n                var _strScroll = 'scroll';\r\n                var _strHundredPercent = '100%';\r\n                var _strX = 'x';\r\n                var _strY = 'y';\r\n                var _strDot = '.';\r\n                var _strSpace = ' ';\r\n                var _strScrollbar = 'scrollbar';\r\n                var _strMinusHorizontal = '-horizontal';\r\n                var _strMinusVertical = '-vertical';\r\n                var _strScrollLeft = _strScroll + 'Left';\r\n                var _strScrollTop = _strScroll + 'Top';\r\n                var _strMouseTouchDownEvent = 'mousedown touchstart';\r\n                var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\r\n                var _strMouseTouchMoveEvent = 'mousemove touchmove';\r\n                var _strMouseEnter = 'mouseenter';\r\n                var _strMouseLeave = 'mouseleave';\r\n                var _strKeyDownEvent = 'keydown';\r\n                var _strKeyUpEvent = 'keyup';\r\n                var _strSelectStartEvent = 'selectstart';\r\n                var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\r\n                var _strResizeObserverProperty = '__overlayScrollbarsRO__';\r\n\r\n                //class names:\t\r\n                var _cassNamesPrefix = 'os-';\r\n                var _classNameHTMLElement = _cassNamesPrefix + 'html';\r\n                var _classNameHostElement = _cassNamesPrefix + 'host';\r\n                var _classNameHostElementForeign = _classNameHostElement + '-foreign';\r\n                var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\r\n                var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\r\n                var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\r\n                var _classNameHostTransition = _classNameHostElement + '-transition';\r\n                var _classNameHostRTL = _classNameHostElement + '-rtl';\r\n                var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\r\n                var _classNameHostScrolling = _classNameHostElement + '-scrolling';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflowX = _classNameHostOverflow + '-x';\r\n                var _classNameHostOverflowY = _classNameHostOverflow + '-y';\r\n                var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\r\n                var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\r\n                var _classNamePaddingElement = _cassNamesPrefix + 'padding';\r\n                var _classNameViewportElement = _cassNamesPrefix + 'viewport';\r\n                var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\r\n                var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\r\n                var _classNameContentElement = _cassNamesPrefix + 'content';\r\n                var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\r\n                var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\r\n                var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\r\n                var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\r\n                var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\r\n                var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\r\n                var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\r\n                var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\r\n                var _classNameScrollbarTrack = _classNameScrollbar + '-track';\r\n                var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\r\n                var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\r\n                var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\r\n                var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\r\n                var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\r\n                var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\r\n                var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\r\n                var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\r\n                var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\r\n                var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\r\n                var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\r\n                var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\r\n                var _classNameDragging = _cassNamesPrefix + 'dragging';\r\n                var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\r\n                var _classNamesDynamicDestroy = [\r\n                    _classNameViewportNativeScrollbarsInvisible,\r\n                    _classNameViewportNativeScrollbarsOverlaid,\r\n                    _classNameScrollbarTrackOff,\r\n                    _classNameScrollbarHandleOff,\r\n                    _classNameScrollbarUnusable,\r\n                    _classNameScrollbarAutoHidden,\r\n                    _classNameScrollbarCornerResize,\r\n                    _classNameScrollbarCornerResizeB,\r\n                    _classNameScrollbarCornerResizeH,\r\n                    _classNameScrollbarCornerResizeV,\r\n                    _classNameDragging].join(_strSpace);\r\n\r\n                //callbacks:\t\r\n                var _callbacksInitQeueue = [];\r\n\r\n                //attrs viewport shall inherit from target\t\r\n                var _viewportAttrsFromTarget = [LEXICON.ti];\r\n\r\n                //options:\t\r\n                var _defaultOptions;\r\n                var _currentOptions;\r\n                var _currentPreparedOptions;\r\n\r\n                //extensions:\t\r\n                var _extensions = {};\r\n                var _extensionsPrivateMethods = 'added removed on contract';\r\n\r\n                //update\t\r\n                var _lastUpdateTime;\r\n                var _swallowedUpdateHints = {};\r\n                var _swallowedUpdateTimeout;\r\n                var _swallowUpdateLag = 42;\r\n                var _updateOnLoadEventName = 'load';\r\n                var _updateOnLoadElms = [];\r\n\r\n                //DOM elements:\t\r\n                var _windowElement;\r\n                var _documentElement;\r\n                var _htmlElement;\r\n                var _bodyElement;\r\n                var _targetElement;                     //the target element of this OverlayScrollbars object\t\r\n                var _hostElement;                       //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\r\n                var _sizeAutoObserverElement;           //observes size auto changes\t\r\n                var _sizeObserverElement;               //observes size and padding changes\t\r\n                var _paddingElement;                    //manages the padding\t\r\n                var _viewportElement;                   //is the viewport of our scrollbar model\t\r\n                var _contentElement;                    //the element which holds the content\t\r\n                var _contentArrangeElement;             //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\r\n                var _contentGlueElement;                //has always the size of the content element\t\r\n                var _textareaCoverElement;              //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\r\n                var _scrollbarCornerElement;\r\n                var _scrollbarHorizontalElement;\r\n                var _scrollbarHorizontalTrackElement;\r\n                var _scrollbarHorizontalHandleElement;\r\n                var _scrollbarVerticalElement;\r\n                var _scrollbarVerticalTrackElement;\r\n                var _scrollbarVerticalHandleElement;\r\n                var _windowElementNative;\r\n                var _documentElementNative;\r\n                var _targetElementNative;\r\n                var _hostElementNative;\r\n                var _sizeAutoObserverElementNative;\r\n                var _sizeObserverElementNative;\r\n                var _paddingElementNative;\r\n                var _viewportElementNative;\r\n                var _contentElementNative;\r\n\r\n                //Cache:\t\r\n                var _hostSizeCache;\r\n                var _contentScrollSizeCache;\r\n                var _arrangeContentSizeCache;\r\n                var _hasOverflowCache;\r\n                var _hideOverflowCache;\r\n                var _widthAutoCache;\r\n                var _heightAutoCache;\r\n                var _cssBoxSizingCache;\r\n                var _cssPaddingCache;\r\n                var _cssBorderCache;\r\n                var _cssMarginCache;\r\n                var _cssDirectionCache;\r\n                var _cssDirectionDetectedCache;\r\n                var _paddingAbsoluteCache;\r\n                var _clipAlwaysCache;\r\n                var _contentGlueSizeCache;\r\n                var _overflowBehaviorCache;\r\n                var _overflowAmountCache;\r\n                var _ignoreOverlayScrollbarHidingCache;\r\n                var _autoUpdateCache;\r\n                var _sizeAutoCapableCache;\r\n                var _contentElementScrollSizeChangeDetectedCache;\r\n                var _hostElementSizeChangeDetectedCache;\r\n                var _scrollbarsVisibilityCache;\r\n                var _scrollbarsAutoHideCache;\r\n                var _scrollbarsClickScrollingCache;\r\n                var _scrollbarsDragScrollingCache;\r\n                var _resizeCache;\r\n                var _normalizeRTLCache;\r\n                var _classNameCache;\r\n                var _oldClassName;\r\n                var _textareaAutoWrappingCache;\r\n                var _textareaInfoCache;\r\n                var _textareaSizeCache;\r\n                var _textareaDynHeightCache;\r\n                var _textareaDynWidthCache;\r\n                var _bodyMinSizeCache;\r\n                var _updateAutoCache = {};\r\n\r\n                //MutationObserver:\t\r\n                var _mutationObserverHost;\r\n                var _mutationObserverContent;\r\n                var _mutationObserverHostCallback;\r\n                var _mutationObserverContentCallback;\r\n                var _mutationObserversConnected;\r\n                var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n                var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget);\r\n\r\n                //events:\t\r\n                var _destroyEvents = [];\r\n\r\n                //textarea:\t\r\n                var _textareaHasFocus;\r\n\r\n                //scrollbars:\t\r\n                var _scrollbarsAutoHideTimeoutId;\r\n                var _scrollbarsAutoHideMoveTimeoutId;\r\n                var _scrollbarsAutoHideDelay;\r\n                var _scrollbarsAutoHideNever;\r\n                var _scrollbarsAutoHideScroll;\r\n                var _scrollbarsAutoHideMove;\r\n                var _scrollbarsAutoHideLeave;\r\n                var _scrollbarsHandleHovered;\r\n                var _scrollbarsHandlesDefineScrollPos;\r\n\r\n                //resize\t\r\n                var _resizeNone;\r\n                var _resizeBoth;\r\n                var _resizeHorizontal;\r\n                var _resizeVertical;\r\n\r\n\r\n                //==== Event Listener ====//\t\r\n\r\n                /**\t\r\n                 * Adds or removes a event listener from the given element. \t\r\n                 * @param element The element to which the event listener shall be applied or removed.\t\r\n                 * @param eventNames The name(s) of the events.\t\r\n                 * @param listener The method which shall be called.\t\r\n                 * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n                 * @param passiveOrOptions The options for the event.\r\n                 */\r\n                function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\r\n                    var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\r\n                    var method = remove ? 'removeEventListener' : 'addEventListener';\r\n                    var onOff = remove ? 'off' : 'on';\r\n                    var events = collected ? false : eventNames.split(_strSpace)\r\n                    var i = 0;\r\n\r\n                    var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\r\n                    var passive = (_supportPassiveEvents && (passiveOrOptionsIsObj ? (passiveOrOptions._passive) : passiveOrOptions)) || false;\r\n                    var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\r\n                    var nativeParam = _supportPassiveEvents ? {\r\n                        passive: passive,\r\n                        capture: capture,\r\n                    } : capture;\r\n\r\n                    if (collected) {\r\n                        for (; i < eventNames[LEXICON.l]; i++)\r\n                            setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\r\n                    }\r\n                    else {\r\n                        for (; i < events[LEXICON.l]; i++) {\r\n                            if(_supportPassiveEvents) {\r\n                                element[0][method](events[i], listener, nativeParam);\r\n                            }\r\n                            else {\r\n                                element[onOff](events[i], listener);\r\n                            }     \r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                function addDestroyEventListener(element, eventNames, listener, passive) {\r\n                    setupResponsiveEventListener(element, eventNames, listener, false, passive);\r\n                    _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\r\n                }\r\n\r\n                //==== Resize Observer ====//\r\n\r\n                /**\r\n                 * Adds or removes a resize observer from the given element.\r\n                 * @param targetElement The element to which the resize observer shall be added or removed.\r\n                 * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n                 */\r\n                function setupResizeObserver(targetElement, onElementResizedCallback) {\r\n                    if (targetElement) {\r\n                        var resizeObserver = COMPATIBILITY.rO();\r\n                        var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\r\n                        var strChildNodes = 'childNodes';\r\n                        var constScroll = 3333333;\r\n                        var callback = function () {\r\n                            targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\r\n                            onElementResizedCallback();\r\n                        };\r\n                        //add resize observer:\r\n                        if (onElementResizedCallback) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\r\n                                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\r\n                                observer.observe(element);\r\n                            }\r\n                            else {\r\n                                if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                                    targetElement.prepend(\r\n                                        generateDiv(_classNameResizeObserverElement,\r\n                                            generateDiv({ c: _classNameResizeObserverItemElement, dir: 'ltr' },\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv(_classNameResizeObserverItemFinalElement)\r\n                                                ) +\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv({ c: _classNameResizeObserverItemFinalElement, style: 'width: 200%; height: 200%' })\r\n                                                )\r\n                                            )\r\n                                        )\r\n                                    );\r\n\r\n                                    var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\r\n                                    var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\r\n                                    var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\r\n                                    var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\r\n                                    var widthCache = observerElement[LEXICON.oW];\r\n                                    var heightCache = observerElement[LEXICON.oH];\r\n                                    var isDirty;\r\n                                    var rAFId;\r\n                                    var currWidth;\r\n                                    var currHeight;\r\n                                    var factor = 2;\r\n                                    var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\r\n                                    var reset = function () {\r\n                                        /*\r\n                                         var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var expandChildCSS = {};\r\n                                         expandChildCSS[_strWidth] = sizeResetWidth;\r\n                                         expandChildCSS[_strHeight] = sizeResetHeight;\r\n                                         expandElementChild.css(expandChildCSS);\r\n\r\n\r\n                                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         */\r\n                                        expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                        shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                    };\r\n                                    var onResized = function () {\r\n                                        rAFId = 0;\r\n                                        if (!isDirty)\r\n                                            return;\r\n\r\n                                        widthCache = currWidth;\r\n                                        heightCache = currHeight;\r\n                                        callback();\r\n                                    };\r\n                                    var onScroll = function (event) {\r\n                                        currWidth = observerElement[LEXICON.oW];\r\n                                        currHeight = observerElement[LEXICON.oH];\r\n                                        isDirty = currWidth != widthCache || currHeight != heightCache;\r\n\r\n                                        if (event && isDirty && !rAFId) {\r\n                                            COMPATIBILITY.cAF()(rAFId);\r\n                                            rAFId = COMPATIBILITY.rAF()(onResized);\r\n                                        }\r\n                                        else if (!event)\r\n                                            onResized();\r\n\r\n                                        reset();\r\n                                        if (event) {\r\n                                            COMPATIBILITY.prvD(event);\r\n                                            COMPATIBILITY.stpP(event);\r\n                                        }\r\n                                        return false;\r\n                                    };\r\n                                    var expandChildCSS = {};\r\n                                    var observerElementCSS = {};\r\n\r\n                                    setTopRightBottomLeft(observerElementCSS, _strEmpty, [\r\n                                        -((nativeScrollbarSize.y + 1) * factor),\r\n                                        nativeScrollbarSize.x * -factor,\r\n                                        nativeScrollbarSize.y * -factor,\r\n                                        -((nativeScrollbarSize.x + 1) * factor)\r\n                                    ]);\r\n\r\n                                    FRAMEWORK(observerElement).css(observerElementCSS);\r\n                                    expandElement.on(_strScroll, onScroll);\r\n                                    shrinkElement.on(_strScroll, onScroll);\r\n                                    targetElement.on(strAnimationStartEvent, function () {\r\n                                        onScroll(false);\r\n                                    });\r\n                                    //lets assume that the divs will never be that large and a constant value is enough\r\n                                    expandChildCSS[_strWidth] = constScroll;\r\n                                    expandChildCSS[_strHeight] = constScroll;\r\n                                    expandElementChild.css(expandChildCSS);\r\n\r\n                                    reset();\r\n                                }\r\n                                else {\r\n                                    var attachEvent = _documentElementNative.attachEvent;\r\n                                    var isIE = _msieVersion !== undefined;\r\n                                    if (attachEvent) {\r\n                                        targetElement.prepend(generateDiv(_classNameResizeObserverElement));\r\n                                        findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\r\n                                    }\r\n                                    else {\r\n                                        var obj = _documentElementNative.createElement(TYPES.o);\r\n                                        obj.setAttribute(LEXICON.ti, '-1');\r\n                                        obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\r\n                                        obj.onload = function () {\r\n                                            var wnd = this.contentDocument.defaultView;\r\n                                            wnd.addEventListener('resize', callback);\r\n                                            wnd.document.documentElement.style.display = 'none';\r\n                                        };\r\n                                        obj.type = 'text/html';\r\n                                        if (isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        obj.data = 'about:blank';\r\n                                        if (!isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        targetElement.on(strAnimationStartEvent, callback);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (targetElement[0] === _sizeObserverElementNative) {\r\n                                var directionChanged = function () {\r\n                                    var dir = _hostElement.css('direction');\r\n                                    var css = {};\r\n                                    var scrollLeftValue = 0;\r\n                                    var result = false;\r\n                                    if (dir !== _cssDirectionDetectedCache) {\r\n                                        if (dir === 'ltr') {\r\n                                            css[_strLeft] = 0;\r\n                                            css[_strRight] = _strAuto;\r\n                                            scrollLeftValue = constScroll;\r\n                                        }\r\n                                        else {\r\n                                            css[_strLeft] = _strAuto;\r\n                                            css[_strRight] = 0;\r\n                                            scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\r\n                                        }\r\n                                        //execution order is important for IE!!!\r\n                                        _sizeObserverElement.children().eq(0).css(css);\r\n                                        _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\r\n                                        _cssDirectionDetectedCache = dir;\r\n                                        result = true;\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                directionChanged();\r\n                                addDestroyEventListener(targetElement, _strScroll, function (event) {\r\n                                    if (directionChanged())\r\n                                        update();\r\n                                    COMPATIBILITY.prvD(event);\r\n                                    COMPATIBILITY.stpP(event);\r\n                                    return false;\r\n                                });\r\n                            }\r\n                        }\r\n                        //remove resize observer:\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                var resizeObserverObj = element[_strResizeObserverProperty];\r\n                                if (resizeObserverObj) {\r\n                                    resizeObserverObj.disconnect();\r\n                                    delete element[_strResizeObserverProperty];\r\n                                }\r\n                            }\r\n                            else {\r\n                                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Freezes or unfreezes the given resize observer.\r\n                 * @param targetElement The element to which the target resize observer is applied.\r\n                 * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n                 \r\n                function freezeResizeObserver(targetElement, freeze) {\r\n                    if (targetElement !== undefined) {\r\n                        if(freeze) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].unobserve(element);\r\n                            }\r\n                            else {\r\n                                targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                                var w = targetElement.css(_strWidth);\r\n                                var h = targetElement.css(_strHeight);\r\n                                var css = {};\r\n                                css[_strWidth] = w;\r\n                                css[_strHeight] = h;\r\n                                targetElement.css(css);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].observe(element);\r\n                            }\r\n                            else {\r\n                                var css = { };\r\n                                css[_strHeight] = _strEmpty;\r\n                                css[_strWidth] = _strEmpty;\r\n                                targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                */\r\n\r\n\r\n                //==== Mutation Observers ====//\r\n\r\n                /**\r\n                 * Creates MutationObservers for the host and content Element if they are supported.\r\n                 */\r\n                function createMutationObservers() {\r\n                    if (_supportMutationObserver) {\r\n                        var mutationObserverContentLag = 11;\r\n                        var mutationObserver = COMPATIBILITY.mO();\r\n                        var contentLastUpdate = COMPATIBILITY.now();\r\n                        var mutationTarget;\r\n                        var mutationAttrName;\r\n                        var mutationIsClass;\r\n                        var oldMutationVal;\r\n                        var newClassVal;\r\n                        var hostClassNameRegex;\r\n                        var contentTimeout;\r\n                        var now;\r\n                        var sizeAuto;\r\n                        var action;\r\n\r\n                        _mutationObserverHostCallback = function (mutations) {\r\n\r\n                            var doUpdate = false;\r\n                            var doUpdateForce = false;\r\n                            var mutation;\r\n                            var mutatedAttrs = [];\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    mutationTarget = mutation.target;\r\n                                    mutationAttrName = mutation.attributeName;\r\n                                    mutationIsClass = mutationAttrName === LEXICON.c;\r\n                                    oldMutationVal = mutation.oldValue;\r\n                                    newClassVal = mutationTarget.className;\r\n\r\n                                    if (_domExists && mutationIsClass && !doUpdateForce) {\r\n                                        // if old class value contains _classNameHostElementForeign and new class value doesn't\r\n                                        if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\r\n                                            hostClassNameRegex = createHostClassNameRegExp(true);\r\n                                            _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\r\n                                                return name.match(hostClassNameRegex);\r\n                                            })).join(_strSpace);\r\n                                            doUpdate = doUpdateForce = true;\r\n                                        }\r\n                                    }\r\n\r\n                                    if (!doUpdate) {\r\n                                        doUpdate = mutationIsClass\r\n                                            ? hostClassNamesChanged(oldMutationVal, newClassVal)\r\n                                            : mutationAttrName === LEXICON.s\r\n                                                ? oldMutationVal !== mutationTarget[LEXICON.s].cssText\r\n                                                : true;\r\n                                    }\r\n\r\n                                    mutatedAttrs.push(mutationAttrName);\r\n                                });\r\n\r\n                                updateViewportAttrsFromTarget(mutatedAttrs);\r\n\r\n                                if (doUpdate)\r\n                                    _base.update(doUpdateForce || _strAuto);\r\n                            }\r\n                            return doUpdate;\r\n                        };\r\n                        _mutationObserverContentCallback = function (mutations) {\r\n                            var doUpdate = false;\r\n                            var mutation;\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    doUpdate = isUnknownMutation(mutation);\r\n                                    return !doUpdate;\r\n                                });\r\n\r\n                                if (doUpdate) {\r\n                                    now = COMPATIBILITY.now();\r\n                                    sizeAuto = (_heightAutoCache || _widthAutoCache);\r\n                                    action = function () {\r\n                                        if (!_destroyed) {\r\n                                            contentLastUpdate = now;\r\n\r\n                                            //if cols, rows or wrap attr was changed\r\n                                            if (_isTextarea)\r\n                                                textareaUpdate();\r\n\r\n                                            if (sizeAuto)\r\n                                                update();\r\n                                            else\r\n                                                _base.update(_strAuto);\r\n                                        }\r\n                                    };\r\n                                    clearTimeout(contentTimeout);\r\n                                    if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto)\r\n                                        action();\r\n                                    else\r\n                                        contentTimeout = setTimeout(action, mutationObserverContentLag);\r\n                                }\r\n                            }\r\n                            return doUpdate;\r\n                        }\r\n\r\n                        _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\r\n                        _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Connects the MutationObservers if they are supported.\r\n                 */\r\n                function connectMutationObservers() {\r\n                    if (_supportMutationObserver && !_mutationObserversConnected) {\r\n                        _mutationObserverHost.observe(_hostElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            attributeFilter: _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            subtree: !_isTextarea,\r\n                            childList: !_isTextarea,\r\n                            characterData: !_isTextarea,\r\n                            attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserversConnected = true;\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Disconnects the MutationObservers if they are supported.\r\n                 */\r\n                function disconnectMutationObservers() {\r\n                    if (_supportMutationObserver && _mutationObserversConnected) {\r\n                        _mutationObserverHost.disconnect();\r\n                        _mutationObserverContent.disconnect();\r\n\r\n                        _mutationObserversConnected = false;\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Events of elements ====//\r\n\r\n                /**\r\n                 * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n                 * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n                 * If there are any size changes, the update method gets called.\r\n                 */\r\n                function hostOnResized() {\r\n                    if (!_sleeping) {\r\n                        var changed;\r\n                        var hostSize = {\r\n                            w: _sizeObserverElementNative[LEXICON.sW],\r\n                            h: _sizeObserverElementNative[LEXICON.sH]\r\n                        };\r\n\r\n                        changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\r\n                        _hostElementSizeChangeDetectedCache = hostSize;\r\n                        if (changed)\r\n                            update({ _hostSizeChanged: true });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseEnter() {\r\n                    if (_scrollbarsAutoHideLeave)\r\n                        refreshScrollbarsAutoHide(true);\r\n                }\r\n\r\n                /**\r\n                 * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseLeave() {\r\n                    if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging))\r\n                        refreshScrollbarsAutoHide(false);\r\n                }\r\n\r\n                /**\r\n                 * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n                 */\r\n                function hostOnMouseMove() {\r\n                    if (_scrollbarsAutoHideMove) {\r\n                        refreshScrollbarsAutoHide(true);\r\n                        clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\r\n                        _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\r\n                            if (_scrollbarsAutoHideMove && !_destroyed)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }, 100);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n                 * @param event The select start event.\r\n                 */\r\n                function documentOnSelectStart(event) {\r\n                    COMPATIBILITY.prvD(event);\r\n                    return false;\r\n                }\r\n\r\n                /**\t\r\n                 * A callback which will be called after a element has loaded.\t\r\n                 */\r\n                function updateOnLoadCallback(event) {\r\n                    var elm = FRAMEWORK(event.target);\r\n\r\n                    eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                        if (elm.is(updateOnLoadSelector)) {\r\n                            update({ _contentSizeChanged: true });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n                * @param destroy Indicates whether the events shall be added or removed.\r\n                */\r\n                function setupHostMouseTouchEvents(destroy) {\r\n                    if (!destroy)\r\n                        setupHostMouseTouchEvents(true);\r\n\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        _strMouseTouchMoveEvent.split(_strSpace)[0],\r\n                        hostOnMouseMove,\r\n                        (!_scrollbarsAutoHideMove || destroy), true);\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        [_strMouseEnter, _strMouseLeave],\r\n                        [hostOnMouseEnter, hostOnMouseLeave],\r\n                        (!_scrollbarsAutoHideLeave || destroy), true);\r\n\r\n                    //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\r\n                    if (!_initialized && !destroy)\r\n                        _hostElement.one('mouseover', hostOnMouseEnter);\r\n                }\r\n\r\n\r\n                //==== Update Detection ====//\r\n\r\n                /**\r\n                 * Measures the min width and min height of the body element and refreshes the related cache.\r\n                 * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n                 */\r\n                function bodyMinSizeChanged() {\r\n                    var bodyMinSize = {};\r\n                    if (_isBody && _contentArrangeElement) {\r\n                        bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\r\n                        bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\r\n                        bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\r\n                        bodyMinSize.f = true; //flag for \"measured at least once\"\r\n                    }\r\n                    _bodyMinSizeCache = bodyMinSize;\r\n                    return !!bodyMinSize.c;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the class names really changed (new class without plugin host prefix)\r\n                 * @param oldClassNames The old ClassName string or array.\r\n                 * @param newClassNames The new ClassName string or array.\r\n                 * @returns {boolean} True if the class names has really changed, false otherwise.\r\n                 */\r\n                function hostClassNamesChanged(oldClassNames, newClassNames) {\r\n                    var currClasses = typeof newClassNames == TYPES.s ? newClassNames.split(_strSpace) : [];\r\n                    var oldClasses = typeof oldClassNames == TYPES.s ? oldClassNames.split(_strSpace) : [];\r\n                    var diff = getArrayDifferences(oldClasses, currClasses);\r\n\r\n                    // remove none theme from diff list to prevent update\r\n                    var idx = inArray(_classNameThemeNone, diff);\r\n                    var i;\r\n                    var regex;\r\n\r\n                    if (idx > -1)\r\n                        diff.splice(idx, 1);\r\n\r\n                    if (diff[LEXICON.l] > 0) {\r\n                        regex = createHostClassNameRegExp(true, true);\r\n                        for (i = 0; i < diff.length; i++) {\r\n                            if (!diff[i].match(regex)) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n                 * @param mutation The mutation which shall be checked.\r\n                 * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n                 */\r\n                function isUnknownMutation(mutation) {\r\n                    var attributeName = mutation.attributeName;\r\n                    var mutationTarget = mutation.target;\r\n                    var mutationType = mutation.type;\r\n                    var strClosest = 'closest';\r\n\r\n                    if (mutationTarget === _contentElementNative)\r\n                        return attributeName === null;\r\n                    if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\r\n                        //ignore className changes by the plugin\t\r\n                        if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement))\r\n                            return hostClassNamesChanged(mutation.oldValue, mutationTarget.className);\r\n\r\n                        //only do it of browser support it natively\t\r\n                        if (typeof mutationTarget[strClosest] != TYPES.f)\r\n                            return true;\r\n                        if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null)\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the content size was changed since the last time this method was called.\r\n                 * @returns {boolean} True if the content size was changed, false otherwise.\r\n                 */\r\n                function updateAutoContentSizeChanged() {\r\n                    if (_sleeping)\r\n                        return false;\r\n\r\n                    var contentMeasureElement = getContentMeasureElement();\r\n                    var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\r\n                    var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\r\n                    var css = {};\r\n                    var float;\r\n                    var bodyMinSizeC;\r\n                    var changed;\r\n                    var contentElementScrollSize;\r\n\r\n                    if (setCSS) {\r\n                        float = _contentElement.css(_strFloat);\r\n                        css[_strFloat] = _isRTL ? _strRight : _strLeft;\r\n                        css[_strWidth] = _strAuto;\r\n                        _contentElement.css(css);\r\n                    }\r\n                    contentElementScrollSize = {\r\n                        w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\r\n                        h: contentMeasureElement[LEXICON.sH] + textareaValueLength\r\n                    };\r\n                    if (setCSS) {\r\n                        css[_strFloat] = float;\r\n                        css[_strWidth] = _strHundredPercent;\r\n                        _contentElement.css(css);\r\n                    }\r\n\r\n                    bodyMinSizeC = bodyMinSizeChanged();\r\n                    changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\r\n\r\n                    _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\r\n\r\n                    return changed || bodyMinSizeC;\r\n                }\r\n\r\n                /**\r\n                 * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n                 * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n                 */\r\n                function meaningfulAttrsChanged() {\r\n                    if (_sleeping || _mutationObserversConnected)\r\n                        return;\r\n\r\n                    var elem;\r\n                    var curr;\r\n                    var cache;\r\n                    var changedAttrs = [];\r\n                    var checks = [\r\n                        {\r\n                            _elem: _hostElement,\r\n                            _attrs: _mutationObserverAttrsHost.concat(':visible')\r\n                        },\r\n                        {\r\n                            _elem: _isTextarea ? _targetElement : undefined,\r\n                            _attrs: _mutationObserverAttrsTextarea\r\n                        }\r\n                    ];\r\n\r\n                    each(checks, function (index, check) {\r\n                        elem = check._elem;\r\n                        if (elem) {\r\n                            each(check._attrs, function (index, attr) {\r\n                                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\r\n                                cache = _updateAutoCache[attr];\r\n\r\n                                if (checkCache(curr, cache)) {\r\n                                    changedAttrs.push(attr);\r\n                                }\r\n\r\n                                _updateAutoCache[attr] = curr;\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    updateViewportAttrsFromTarget(changedAttrs);\r\n\r\n                    return changedAttrs[LEXICON.l] > 0;\r\n                }\r\n\r\n                /**\r\n                 * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n                 * @param propertyName The CSS property name.\r\n                 * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n                 */\r\n                function isSizeAffectingCSSProperty(propertyName) {\r\n                    if (!_initialized)\r\n                        return true;\r\n                    var flexGrow = 'flex-grow';\r\n                    var flexShrink = 'flex-shrink';\r\n                    var flexBasis = 'flex-basis';\r\n                    var affectingPropsX = [\r\n                        _strWidth,\r\n                        _strMinMinus + _strWidth,\r\n                        _strMaxMinus + _strWidth,\r\n                        _strMarginMinus + _strLeft,\r\n                        _strMarginMinus + _strRight,\r\n                        _strLeft,\r\n                        _strRight,\r\n                        'font-weight',\r\n                        'word-spacing',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsXContentBox = [\r\n                        _strPaddingMinus + _strLeft,\r\n                        _strPaddingMinus + _strRight,\r\n                        _strBorderMinus + _strLeft + _strWidth,\r\n                        _strBorderMinus + _strRight + _strWidth\r\n                    ];\r\n                    var affectingPropsY = [\r\n                        _strHeight,\r\n                        _strMinMinus + _strHeight,\r\n                        _strMaxMinus + _strHeight,\r\n                        _strMarginMinus + _strTop,\r\n                        _strMarginMinus + _strBottom,\r\n                        _strTop,\r\n                        _strBottom,\r\n                        'line-height',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsYContentBox = [\r\n                        _strPaddingMinus + _strTop,\r\n                        _strPaddingMinus + _strBottom,\r\n                        _strBorderMinus + _strTop + _strWidth,\r\n                        _strBorderMinus + _strBottom + _strWidth\r\n                    ];\r\n                    var _strS = 's';\r\n                    var _strVS = 'v-s';\r\n                    var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\r\n                    var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\r\n                    var sizeIsAffected = false;\r\n                    var checkPropertyName = function (arr, name) {\r\n                        for (var i = 0; i < arr[LEXICON.l]; i++) {\r\n                            if (arr[i] === name)\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    };\r\n\r\n                    if (checkY) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\r\n                    }\r\n                    if (checkX && !sizeIsAffected) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\r\n                    }\r\n                    return sizeIsAffected;\r\n                }\r\n\r\n\r\n                //==== Update ====//\r\n\r\n                /**\r\n                 * Sets the attribute values of the viewport element to the values from the target element.\r\n                 * The value of a attribute is only set if the attribute is whitelisted.\r\n                 * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n                 */\r\n                function updateViewportAttrsFromTarget(attrs) {\r\n                    attrs = attrs || _viewportAttrsFromTarget;\r\n                    each(attrs, function (index, attr) {\r\n                        if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\r\n                            var targetAttr = _targetElement.attr(attr);\r\n                            if (type(targetAttr) == TYPES.s) {\r\n                                _viewportElement.attr(attr, targetAttr);\r\n                            }\r\n                            else {\r\n                                _viewportElement.removeAttr(attr);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n                 */\r\n                function textareaUpdate() {\r\n                    if (!_sleeping) {\r\n                        var wrapAttrOff = !_textareaAutoWrappingCache;\r\n                        var minWidth = _viewportSize.w;\r\n                        var minHeight = _viewportSize.h;\r\n                        var css = {};\r\n                        var doMeasure = _widthAutoCache || wrapAttrOff;\r\n                        var origWidth;\r\n                        var width;\r\n                        var origHeight;\r\n                        var height;\r\n\r\n                        //reset min size\r\n                        css[_strMinMinus + _strWidth] = _strEmpty;\r\n                        css[_strMinMinus + _strHeight] = _strEmpty;\r\n\r\n                        //set width auto\r\n                        css[_strWidth] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure width\r\n                        origWidth = _targetElementNative[LEXICON.oW];\r\n                        width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\r\n                        /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\r\n\r\n                        //set measured width\r\n                        css[_strWidth] = _widthAutoCache ? _strAuto /*width*/ : _strHundredPercent;\r\n                        css[_strMinMinus + _strWidth] = _strHundredPercent;\r\n\r\n                        //set height auto\r\n                        css[_strHeight] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure height\r\n                        origHeight = _targetElementNative[LEXICON.oH];\r\n                        height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1);\r\n\r\n                        //append correct size values\r\n                        css[_strWidth] = width;\r\n                        css[_strHeight] = height;\r\n                        _textareaCoverElement.css(css);\r\n\r\n                        //apply min width / min height to prevent textarea collapsing\r\n                        css[_strMinMinus + _strWidth] = minWidth /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/;\r\n                        css[_strMinMinus + _strHeight] = minHeight /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/;\r\n                        _targetElement.css(css);\r\n\r\n                        return {\r\n                            _originalWidth: origWidth,\r\n                            _originalHeight: origHeight,\r\n                            _dynamicWidth: width,\r\n                            _dynamicHeight: height\r\n                        };\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param updateHints A objects which contains hints for this update:\r\n                 * {\r\n                 *   _hostSizeChanged : boolean,\r\n                 *   _contentSizeChanged : boolean,\r\n                 *   _force : boolean,                             == preventSwallowing\r\n                 *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n                *  }\r\n                 */\r\n                function update(updateHints) {\r\n                    clearTimeout(_swallowedUpdateTimeout);\r\n                    updateHints = updateHints || {};\r\n                    _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\r\n                    _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\r\n                    _swallowedUpdateHints._force |= updateHints._force;\r\n\r\n                    var now = COMPATIBILITY.now();\r\n                    var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\r\n                    var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\r\n                    var force = !!_swallowedUpdateHints._force;\r\n                    var changedOptions = updateHints._changedOptions;\r\n                    var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && (now - _lastUpdateTime) < _swallowUpdateLag && (!_heightAutoCache && !_widthAutoCache);\r\n                    var displayIsHidden;\r\n\r\n                    if (swallow)\r\n                        _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag);\r\n\r\n                    //abort update due to:\r\n                    //destroyed\r\n                    //swallowing\r\n                    //sleeping\r\n                    //host is hidden or has false display\r\n                    if (_destroyed || swallow || (_sleeping && !changedOptions) || (_initialized && !force && (displayIsHidden = _hostElement.is(':hidden'))) || _hostElement.css('display') === 'inline')\r\n                        return;\r\n\r\n                    _lastUpdateTime = now;\r\n                    _swallowedUpdateHints = {};\r\n\r\n                    //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\r\n                    if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                        //native scrollbars are hidden, so change the values to zero\r\n                        _nativeScrollbarSize.x = 0;\r\n                        _nativeScrollbarSize.y = 0;\r\n                    }\r\n                    else {\r\n                        //refresh native scrollbar size (in case of zoom)\r\n                        _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    }\r\n\r\n                    // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\r\n                    // The calculation: [scrollbar size +3 *3]\r\n                    // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\r\n                    // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\r\n                    _nativeScrollbarMinSize = {\r\n                        x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\r\n                        y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\r\n                    };\r\n\r\n                    changedOptions = changedOptions || {};\r\n                    //freezeResizeObserver(_sizeObserverElement, true);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, true);\r\n\r\n                    var checkCacheAutoForce = function () {\r\n                        return checkCache.apply(this, [].slice.call(arguments).concat([force]));\r\n                    };\r\n\r\n                    //save current scroll offset\r\n                    var currScroll = {\r\n                        x: _viewportElement[_strScrollLeft](),\r\n                        y: _viewportElement[_strScrollTop]()\r\n                    };\r\n\r\n                    var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\r\n                    var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea;\r\n\r\n                    //scrollbars visibility:\r\n                    var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\r\n                    var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache);\r\n\r\n                    //scrollbars autoHide:\r\n                    var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\r\n                    var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache);\r\n\r\n                    //scrollbars click scrolling\r\n                    var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\r\n                    var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache);\r\n\r\n                    //scrollbars drag scrolling\r\n                    var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\r\n                    var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache);\r\n\r\n                    //className\r\n                    var className = _currentPreparedOptions.className;\r\n                    var classNameChanged = checkCacheAutoForce(className, _classNameCache);\r\n\r\n                    //resize\r\n                    var resize = _currentPreparedOptions.resize;\r\n                    var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\r\n\r\n                    //paddingAbsolute\r\n                    var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\r\n                    var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache);\r\n\r\n                    //clipAlways\r\n                    var clipAlways = _currentPreparedOptions.clipAlways;\r\n                    var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache);\r\n\r\n                    //sizeAutoCapable\r\n                    var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\r\n                    var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache);\r\n\r\n                    //showNativeScrollbars\r\n                    var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\r\n                    var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache);\r\n\r\n                    //autoUpdate\r\n                    var autoUpdate = _currentPreparedOptions.autoUpdate;\r\n                    var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache);\r\n\r\n                    //overflowBehavior\r\n                    var overflowBehavior = _currentPreparedOptions.overflowBehavior;\r\n                    var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force);\r\n\r\n                    //dynWidth:\r\n                    var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\r\n                    var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth);\r\n\r\n                    //dynHeight:\r\n                    var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\r\n                    var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight);\r\n\r\n                    //scrollbars visibility\r\n                    _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\r\n                    _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\r\n                    _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\r\n                    _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l';\r\n\r\n                    //scrollbars autoHideDelay\r\n                    _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay;\r\n\r\n                    //old className\r\n                    _oldClassName = _classNameCache;\r\n\r\n                    //resize\r\n                    _resizeNone = resize === 'n';\r\n                    _resizeBoth = resize === 'b';\r\n                    _resizeHorizontal = resize === 'h';\r\n                    _resizeVertical = resize === 'v';\r\n\r\n                    //normalizeRTL\r\n                    _normalizeRTLCache = _currentPreparedOptions.normalizeRTL;\r\n\r\n                    //ignore overlay scrollbar hiding\r\n                    ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y);\r\n\r\n                    //refresh options cache\r\n                    _scrollbarsVisibilityCache = scrollbarsVisibility;\r\n                    _scrollbarsAutoHideCache = scrollbarsAutoHide;\r\n                    _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\r\n                    _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\r\n                    _classNameCache = className;\r\n                    _resizeCache = resize;\r\n                    _paddingAbsoluteCache = paddingAbsolute;\r\n                    _clipAlwaysCache = clipAlways;\r\n                    _sizeAutoCapableCache = sizeAutoCapable;\r\n                    _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\r\n                    _autoUpdateCache = autoUpdate;\r\n                    _overflowBehaviorCache = extendDeep({}, overflowBehavior);\r\n                    _textareaDynWidthCache = textareaDynWidth;\r\n                    _textareaDynHeightCache = textareaDynHeight;\r\n                    _hasOverflowCache = _hasOverflowCache || { x: false, y: false };\r\n\r\n                    //set correct class name to the host element\r\n                    if (classNameChanged) {\r\n                        removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\r\n                        addClass(_hostElement, className !== undefined && className !== null && className.length > 0 ? className : _classNameThemeNone);\r\n                    }\r\n\r\n                    //set correct auto Update\r\n                    if (autoUpdateChanged) {\r\n                        if (autoUpdate === true || (autoUpdate === null && _autoUpdateRecommended)) {\r\n                            disconnectMutationObservers();\r\n                            autoUpdateLoop.add(_base);\r\n                        }\r\n                        else {\r\n                            autoUpdateLoop.remove(_base);\r\n                            connectMutationObservers();\r\n                        }\r\n                    }\r\n\r\n                    //activate or deactivate size auto capability\r\n                    if (sizeAutoCapableChanged) {\r\n                        if (sizeAutoCapable) {\r\n                            if (_contentGlueElement) {\r\n                                _contentGlueElement.show();\r\n                            }\r\n                            else {\r\n                                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\r\n                                _paddingElement.before(_contentGlueElement);\r\n                            }\r\n                            if (_sizeAutoObserverAdded) {\r\n                                _sizeAutoObserverElement.show();\r\n                            }\r\n                            else {\r\n                                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\r\n                                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\r\n\r\n                                _contentGlueElement.before(_sizeAutoObserverElement);\r\n                                var oldSize = { w: -1, h: -1 };\r\n                                setupResizeObserver(_sizeAutoObserverElement, function () {\r\n                                    var newSize = {\r\n                                        w: _sizeAutoObserverElementNative[LEXICON.oW],\r\n                                        h: _sizeAutoObserverElementNative[LEXICON.oH]\r\n                                    };\r\n                                    if (checkCache(newSize, oldSize)) {\r\n                                        if (_initialized && (_heightAutoCache && newSize.h > 0) || (_widthAutoCache && newSize.w > 0)) {\r\n                                            update();\r\n                                        }\r\n                                        else if (_initialized && (!_heightAutoCache && newSize.h === 0) || (!_widthAutoCache && newSize.w === 0)) {\r\n                                            update();\r\n                                        }\r\n                                    }\r\n                                    oldSize = newSize;\r\n                                });\r\n                                _sizeAutoObserverAdded = true;\r\n                                //fix heightAuto detector bug if height is fixed but contentHeight is 0.\r\n                                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\r\n                                if (_cssCalc !== null)\r\n                                    _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_sizeAutoObserverAdded)\r\n                                _sizeAutoObserverElement.hide();\r\n                            if (_contentGlueElement)\r\n                                _contentGlueElement.hide();\r\n                        }\r\n                    }\r\n\r\n                    //if force, update all resizeObservers too\r\n                    if (force) {\r\n                        _sizeObserverElement.find('*').trigger(_strScroll);\r\n                        if (_sizeAutoObserverAdded)\r\n                            _sizeAutoObserverElement.find('*').trigger(_strScroll);\r\n                    }\r\n\r\n                    //display hidden:\r\n                    displayIsHidden = displayIsHidden === undefined ? _hostElement.is(':hidden') : displayIsHidden;\r\n\r\n                    //textarea AutoWrapping:\r\n                    var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\r\n                    var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache);\r\n\r\n                    //detect direction:\r\n                    var cssDirection = _hostElement.css('direction');\r\n                    var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache);\r\n\r\n                    //detect box-sizing:\r\n                    var boxSizing = _hostElement.css('box-sizing');\r\n                    var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache);\r\n\r\n                    //detect padding:\r\n                    var padding = getTopRightBottomLeftHost(_strPaddingMinus);\r\n\r\n                    //width + height auto detecting var:\r\n                    var sizeAutoObserverElementBCRect;\r\n                    //exception occurs in IE8 sometimes (unknown exception)\r\n                    try {\r\n                        sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\r\n                    } catch (ex) {\r\n                        return;\r\n                    }\r\n\r\n                    _isRTL = cssDirection === 'rtl';\r\n                    _isBorderBox = (boxSizing === 'border-box');\r\n                    var isRTLLeft = _isRTL ? _strLeft : _strRight;\r\n                    var isRTLRight = _isRTL ? _strRight : _strLeft;\r\n\r\n                    //detect width auto:\r\n                    var widthAutoResizeDetection = false;\r\n                    var widthAutoObserverDetection = (_sizeAutoObserverAdded && (_hostElement.css(_strFloat) !== 'none' /*|| _isTextarea */)) ? (MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0) && (!paddingAbsolute ? (_hostElementNative[LEXICON.cW] - _paddingX) > 0 : true) : false;\r\n                    if (sizeAutoCapable && !widthAutoObserverDetection) {\r\n                        var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\r\n                        var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\r\n                        _contentGlueElement.css(_strWidth, _strAuto);\r\n\r\n                        var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                        _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                        widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        if (!widthAutoResizeDetection) {\r\n                            _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\r\n                            tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        }\r\n                    }\r\n                    var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\r\n                    var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\r\n                    var wasWidthAuto = !widthAuto && _widthAutoCache;\r\n\r\n                    //detect height auto:\r\n                    var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? (MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0) /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */ : false;\r\n                    var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\r\n                    var wasHeightAuto = !heightAuto && _heightAutoCache;\r\n\r\n                    //detect border:\r\n                    //we need the border only if border box and auto size\r\n                    var updateBorderX = (widthAuto && _isBorderBox) || !_isBorderBox;\r\n                    var updateBorderY = (heightAuto && _isBorderBox) || !_isBorderBox;\r\n                    var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY)\r\n\r\n                    //detect margin:\r\n                    var margin = getTopRightBottomLeftHost(_strMarginMinus);\r\n\r\n                    //vars to apply correct css\r\n                    var contentElementCSS = {};\r\n                    var contentGlueElementCSS = {};\r\n\r\n                    //funcs\r\n                    var getHostSize = function () {\r\n                        //has to be clientSize because offsetSize respect borders\r\n                        return {\r\n                            w: _hostElementNative[LEXICON.cW],\r\n                            h: _hostElementNative[LEXICON.cH]\r\n                        };\r\n                    };\r\n                    var getViewportSize = function () {\r\n                        //viewport size is padding container because it never has padding, margin and a border\r\n                        //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\r\n                        //if this happens add the difference to the viewportSize to compensate the rounding error\r\n                        return {\r\n                            w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\r\n                            h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\r\n                        };\r\n                    };\r\n\r\n                    //set info for padding\r\n                    var paddingAbsoluteX = _paddingX = padding.l + padding.r;\r\n                    var paddingAbsoluteY = _paddingY = padding.t + padding.b;\r\n                    paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\r\n                    paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\r\n                    padding.c = checkCacheAutoForce(padding, _cssPaddingCache);\r\n\r\n                    //set info for border\r\n                    _borderX = border.l + border.r;\r\n                    _borderY = border.t + border.b;\r\n                    border.c = checkCacheAutoForce(border, _cssBorderCache);\r\n\r\n                    //set info for margin\r\n                    _marginX = margin.l + margin.r;\r\n                    _marginY = margin.t + margin.b;\r\n                    margin.c = checkCacheAutoForce(margin, _cssMarginCache);\r\n\r\n                    //refresh cache\r\n                    _textareaAutoWrappingCache = textareaAutoWrapping;\r\n                    _cssDirectionCache = cssDirection;\r\n                    _cssBoxSizingCache = boxSizing;\r\n                    _widthAutoCache = widthAuto;\r\n                    _heightAutoCache = heightAuto;\r\n                    _cssPaddingCache = padding;\r\n                    _cssBorderCache = border;\r\n                    _cssMarginCache = margin;\r\n\r\n                    //IEFix direction changed\r\n                    if (cssDirectionChanged && _sizeAutoObserverAdded)\r\n                        _sizeAutoObserverElement.css(_strFloat, isRTLRight);\r\n\r\n                    //apply padding:\r\n                    if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\r\n                        var paddingElementCSS = {};\r\n                        var textareaCSS = {};\r\n                        var paddingValues = [padding.t, padding.r, padding.b, padding.l];\r\n\r\n                        setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\r\n                        if (paddingAbsolute) {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\r\n                        }\r\n                        else {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\r\n                        }\r\n\r\n                        _paddingElement.css(paddingElementCSS);\r\n                        _targetElement.css(textareaCSS);\r\n                    }\r\n\r\n                    //viewport size is padding container because it never has padding, margin and a border.\r\n                    _viewportSize = getViewportSize();\r\n\r\n                    //update Textarea\r\n                    var textareaSize = _isTextarea ? textareaUpdate() : false;\r\n                    var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\r\n                    var textareaDynOrigSize = _isTextarea && textareaSize ? {\r\n                        w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\r\n                        h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\r\n                    } : {};\r\n                    _textareaSizeCache = textareaSize;\r\n\r\n                    //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\r\n                    if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\r\n                        contentElementCSS[_strHeight] = _strAuto;\r\n                    }\r\n                    else if (heightAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strHeight] = _strHundredPercent;\r\n                    }\r\n                    if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\r\n                        contentElementCSS[_strWidth] = _strAuto;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\r\n                    }\r\n                    else if (widthAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        contentElementCSS[_strFloat] = _strEmpty;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\r\n                    }\r\n                    if (widthAuto) {\r\n                        //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\r\n                        contentGlueElementCSS[_strWidth] = _strAuto;\r\n\r\n                        contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\r\n                        contentElementCSS[_strFloat] = isRTLRight;\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strWidth] = _strEmpty;\r\n                    }\r\n                    if (heightAuto) {\r\n                        //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\r\n                        contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strHeight] = _strEmpty;\r\n                    }\r\n                    if (sizeAutoCapable)\r\n                        _contentGlueElement.css(contentGlueElementCSS);\r\n                    _contentElement.css(contentElementCSS);\r\n\r\n                    //CHECKPOINT HERE ~\r\n                    contentElementCSS = {};\r\n                    contentGlueElementCSS = {};\r\n\r\n                    //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\r\n                    if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\r\n                        var strOverflow = 'overflow';\r\n                        var strOverflowX = strOverflow + '-x';\r\n                        var strOverflowY = strOverflow + '-y';\r\n                        var strHidden = 'hidden';\r\n                        var strVisible = 'visible';\r\n\r\n                        //Reset the viewport (very important for natively overlaid scrollbars and zoom change\r\n                        //don't change the overflow prop as it is very expensive and affects performance !A LOT!\r\n                        if (!_nativeScrollbarStyling) {\r\n                            var viewportElementResetCSS = {};\r\n                            var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y) : 0;\r\n                            var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x) : 0;\r\n                            setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n\r\n                        //measure several sizes:\r\n                        var contentMeasureElement = getContentMeasureElement();\r\n                        //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\r\n                        var contentSize = {\r\n                            //use clientSize because natively overlaidScrollbars add borders\r\n                            w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\r\n                            h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\r\n                        };\r\n                        var scrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH]\r\n                        };\r\n\r\n                        //apply the correct viewport style and measure viewport size\r\n                        if (!_nativeScrollbarStyling) {\r\n                            viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\r\n                            viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        //measure and correct several sizes\r\n                        var hostSize = getHostSize();\r\n                        var hostAbsoluteRectSize = {\r\n                            w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\r\n                            h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\r\n                        };\r\n                        var contentGlueSize = {\r\n                            //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\r\n                            //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\r\n                            w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\r\n                            h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\r\n                        };\r\n                        contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\r\n                        _contentGlueSizeCache = contentGlueSize;\r\n\r\n                        //apply correct contentGlue size\r\n                        if (sizeAutoCapable) {\r\n                            //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\r\n                            if (contentGlueSize.c || (heightAuto || widthAuto)) {\r\n                                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\r\n                                contentGlueElementCSS[_strHeight] = contentGlueSize.h;\r\n\r\n                                //textarea-sizes are already calculated correctly at this point\r\n                                if (!_isTextarea) {\r\n                                    contentSize = {\r\n                                        //use clientSize because natively overlaidScrollbars add borders\r\n                                        w: contentMeasureElement[LEXICON.cW],\r\n                                        h: contentMeasureElement[LEXICON.cH]\r\n                                    };\r\n                                }\r\n                            }\r\n                            var textareaCoverCSS = {};\r\n                            var setContentGlueElementCSSfunction = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var wh = scrollbarVars._w_h;\r\n                                var strWH = scrollbarVars._width_height;\r\n                                var autoSize = horizontal ? widthAuto : heightAuto;\r\n                                var borderSize = horizontal ? _borderX : _borderY;\r\n                                var paddingSize = horizontal ? _paddingX : _paddingY;\r\n                                var marginSize = horizontal ? _marginX : _marginY;\r\n                                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize);\r\n\r\n                                //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\r\n                                if (!autoSize || (!autoSize && border.c))\r\n                                    contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1;\r\n\r\n                                //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\r\n                                if (autoSize && (contentSize[wh] < viewportSize) && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\r\n                                    if (_isTextarea)\r\n                                        textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\r\n                                    contentGlueElementCSS[strWH] -= 1;\r\n                                }\r\n\r\n                                //make sure content glue size is at least 1\r\n                                if (contentSize[wh] > 0)\r\n                                    contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\r\n                            };\r\n                            setContentGlueElementCSSfunction(true);\r\n                            setContentGlueElementCSSfunction(false);\r\n\r\n                            if (_isTextarea)\r\n                                _textareaCoverElement.css(textareaCoverCSS);\r\n                            _contentGlueElement.css(contentGlueElementCSS);\r\n                        }\r\n                        if (widthAuto)\r\n                            contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        if (widthAuto && !_isBorderBox && !_mutationObserversConnected)\r\n                            contentElementCSS[_strFloat] = 'none';\r\n\r\n                        //apply and reset content style\r\n                        _contentElement.css(contentElementCSS);\r\n                        contentElementCSS = {};\r\n\r\n                        //measure again, but this time all correct sizes:\r\n                        var contentScrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH],\r\n                        };\r\n                        contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\r\n                        _contentScrollSizeCache = contentScrollSize;\r\n\r\n                        //refresh viewport size after correct measuring\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        hostSize = getHostSize();\r\n                        hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\r\n                        _hostSizeCache = hostSize;\r\n\r\n                        var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\r\n                        var previousOverflowAmount = _overflowAmountCache;\r\n                        var overflowBehaviorIsVS = {};\r\n                        var overflowBehaviorIsVH = {};\r\n                        var overflowBehaviorIsS = {};\r\n                        var overflowAmount = {};\r\n                        var hasOverflow = {};\r\n                        var hideOverflow = {};\r\n                        var canScroll = {};\r\n                        var viewportRect = _paddingElementNative[LEXICON.bCR]();\r\n                        var setOverflowVariables = function (horizontal) {\r\n                            var scrollbarVars = getScrollbarVars(horizontal);\r\n                            var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                            var xyI = scrollbarVarsInverted._x_y;\r\n                            var xy = scrollbarVars._x_y;\r\n                            var wh = scrollbarVars._w_h;\r\n                            var widthHeight = scrollbarVars._width_height;\r\n                            var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\r\n                            var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\r\n                            var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\r\n                            overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\r\n                            overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\r\n                            overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\r\n                            overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\r\n                            overflowAmount[xy] *= (hideOverflowForceTextarea || (checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1)) ? 0 : 1;\r\n                            hasOverflow[xy] = overflowAmount[xy] > 0;\r\n\r\n                            //hideOverflow:\r\n                            //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\r\n                            //xs || ys : true === overflow is hidden by \"overflow: scroll\"\r\n                            hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? (hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI]) : hasOverflow[xy];\r\n                            hideOverflow[xy + 's'] = hideOverflow[xy] ? (overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy]) : false;\r\n\r\n                            canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\r\n                        };\r\n                        setOverflowVariables(true);\r\n                        setOverflowVariables(false);\r\n\r\n                        overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\r\n                        _overflowAmountCache = overflowAmount;\r\n                        hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\r\n                        _hasOverflowCache = hasOverflow;\r\n                        hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\r\n                        _hideOverflowCache = hideOverflow;\r\n\r\n                        //if native scrollbar is overlay at x OR y axis, prepare DOM\r\n                        if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\r\n                            var borderDesign = 'px solid transparent';\r\n                            var contentArrangeElementCSS = {};\r\n                            var arrangeContent = {};\r\n                            var arrangeChanged = force;\r\n                            var setContentElementCSS;\r\n\r\n                            if (hasOverflow.x || hasOverflow.y) {\r\n                                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\r\n                                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\r\n                                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\r\n                                _arrangeContentSizeCache = arrangeContent;\r\n                            }\r\n\r\n                            if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\r\n                                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\r\n                                setContentElementCSS = function (horizontal) {\r\n                                    var scrollbarVars = getScrollbarVars(horizontal);\r\n                                    var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                    var xy = scrollbarVars._x_y;\r\n                                    var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n                                    var invertedAutoSize = horizontal ? heightAuto : widthAuto;\r\n\r\n                                    if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                        contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? (ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy]) : _strEmpty;\r\n                                        contentElementCSS[_strBorderMinus + strDirection] = ((horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding) ? (_overlayScrollbarDummySize[xy] + borderDesign) : _strEmpty;\r\n                                    }\r\n                                    else {\r\n                                        arrangeContent[scrollbarVarsInverted._w_h] =\r\n                                            contentElementCSS[_strMarginMinus + strDirection] =\r\n                                            contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\r\n                                        arrangeChanged = true;\r\n                                    }\r\n                                };\r\n\r\n                                if (_nativeScrollbarStyling) {\r\n                                    addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding)\r\n                                }\r\n                                else {\r\n                                    setContentElementCSS(true);\r\n                                    setContentElementCSS(false);\r\n                                }\r\n                            }\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                arrangeContent.w = arrangeContent.h = _strEmpty;\r\n                                arrangeChanged = true;\r\n                            }\r\n                            if (arrangeChanged && !_nativeScrollbarStyling) {\r\n                                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\r\n                                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\r\n\r\n                                if (!_contentArrangeElement) {\r\n                                    _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\r\n                                    _viewportElement.prepend(_contentArrangeElement);\r\n                                }\r\n                                _contentArrangeElement.css(contentArrangeElementCSS);\r\n                            }\r\n                            _contentElement.css(contentElementCSS);\r\n                        }\r\n\r\n                        var viewportElementCSS = {};\r\n                        var paddingElementCSS = {};\r\n                        var setViewportCSS;\r\n                        if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\r\n                            viewportElementCSS[isRTLRight] = _strEmpty;\r\n                            setViewportCSS = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                var xy = scrollbarVars._x_y;\r\n                                var XY = scrollbarVars._X_Y;\r\n                                var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n\r\n                                var reset = function () {\r\n                                    viewportElementCSS[strDirection] = _strEmpty;\r\n                                    _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\r\n                                };\r\n                                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                    viewportElementCSS[strOverflow + XY] = _strScroll;\r\n                                    if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\r\n                                        reset();\r\n                                    }\r\n                                    else {\r\n                                        viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\r\n                                        _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\r\n                                    }\r\n                                } else {\r\n                                    viewportElementCSS[strOverflow + XY] = _strEmpty;\r\n                                    reset();\r\n                                }\r\n                            };\r\n                            setViewportCSS(true);\r\n                            setViewportCSS(false);\r\n\r\n                            // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \r\n                            // make viewport element greater in size (Firefox hide Scrollbars fix)\r\n                            // because firefox starts hiding scrollbars on too small elements\r\n                            // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\r\n                            // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\r\n                            if (!_nativeScrollbarStyling\r\n                                && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y)\r\n                                && ((hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x) || (hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y))) {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\r\n                                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\r\n\r\n                                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\r\n                                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\r\n                            }\r\n                            else {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] =\r\n                                    viewportElementCSS[_strMarginMinus + _strTop] =\r\n                                    viewportElementCSS[_strPaddingMinus + isRTLRight] =\r\n                                    viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\r\n                            }\r\n                            viewportElementCSS[_strPaddingMinus + isRTLLeft] =\r\n                                viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty;\r\n\r\n                            //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\r\n                            if ((hasOverflow.x && hideOverflow.x) || (hasOverflow.y && hideOverflow.y) || hideOverflowForceTextarea) {\r\n                                //only hide if is Textarea\r\n                                if (_isTextarea && hideOverflowForceTextarea) {\r\n                                    paddingElementCSS[strOverflowX] =\r\n                                        paddingElementCSS[strOverflowY] = strHidden;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (!clipAlways || (overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y)) {\r\n                                    //only un-hide if Textarea\r\n                                    if (_isTextarea) {\r\n                                        paddingElementCSS[strOverflowX] =\r\n                                            paddingElementCSS[strOverflowY] = _strEmpty;\r\n                                    }\r\n                                    viewportElementCSS[strOverflowX] =\r\n                                        viewportElementCSS[strOverflowY] = strVisible;\r\n                                }\r\n                            }\r\n\r\n                            _paddingElement.css(paddingElementCSS);\r\n                            _viewportElement.css(viewportElementCSS);\r\n                            viewportElementCSS = {};\r\n\r\n                            //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\r\n                            if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                                var elementStyle = _contentElementNative[LEXICON.s];\r\n                                var dump;\r\n                                elementStyle.webkitTransform = 'scale(1)';\r\n                                elementStyle.display = 'run-in';\r\n                                dump = _contentElementNative[LEXICON.oH];\r\n                                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\r\n                                elementStyle.webkitTransform = _strEmpty;\r\n                            }\r\n                            /*\r\n                            //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n                            if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                                _hostElement.hide();\r\n                                var dump = _hostElementNative[LEXICON.oH];\r\n                                _hostElement.show();\r\n                            }\r\n                            */\r\n                        }\r\n\r\n                        //change to direction RTL and width auto Bugfix in Webkit\r\n                        //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\r\n                        contentElementCSS = {};\r\n                        if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\r\n                            if (_isRTL && widthAuto) {\r\n                                var floatTmp = _contentElement.css(_strFloat);\r\n                                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\r\n                                _contentElement.css(_strFloat, floatTmp);\r\n                                var posLeftWithFloat = MATH.round(_contentElement.position().left);\r\n\r\n                                if (posLeftWithoutFloat !== posLeftWithFloat)\r\n                                    contentElementCSS[_strLeft] = posLeftWithoutFloat;\r\n                            }\r\n                            else {\r\n                                contentElementCSS[_strLeft] = _strEmpty;\r\n                            }\r\n                        }\r\n                        _contentElement.css(contentElementCSS);\r\n\r\n                        //handle scroll position\r\n                        if (_isTextarea && contentSizeChanged) {\r\n                            var textareaInfo = getTextareaInfo();\r\n                            if (textareaInfo) {\r\n                                var textareaRowsChanged = _textareaInfoCache === undefined ? true : textareaInfo._rows !== _textareaInfoCache._rows;\r\n                                var cursorRow = textareaInfo._cursorRow;\r\n                                var cursorCol = textareaInfo._cursorColumn;\r\n                                var widestRow = textareaInfo._widestRow;\r\n                                var lastRow = textareaInfo._rows;\r\n                                var lastCol = textareaInfo._columns;\r\n                                var cursorPos = textareaInfo._cursorPosition;\r\n                                var cursorMax = textareaInfo._cursorMax;\r\n                                var cursorIsLastPosition = (cursorPos >= cursorMax && _textareaHasFocus);\r\n                                var textareaScrollAmount = {\r\n                                    x: (!textareaAutoWrapping && (cursorCol === lastCol && cursorRow === widestRow)) ? _overflowAmountCache.x : -1,\r\n                                    y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? (currScroll.y === previousOverflowAmount.y) : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\r\n                                };\r\n                                currScroll.x = textareaScrollAmount.x > -1 ? (_isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x) : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\r\n                                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\r\n                            }\r\n                            _textareaInfoCache = textareaInfo;\r\n                        }\r\n                        if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache)\r\n                            currScroll.x += _contentBorderSize.w || 0;\r\n                        if (widthAuto)\r\n                            _hostElement[_strScrollLeft](0);\r\n                        if (heightAuto)\r\n                            _hostElement[_strScrollTop](0);\r\n                        _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y);\r\n\r\n                        //scrollbars management:\r\n                        var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\r\n                        var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\r\n                        var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\r\n                        var refreshScrollbarsVisibility = function (showX, showY) {\r\n                            showY = showY === undefined ? showX : showY;\r\n                            refreshScrollbarAppearance(true, showX, canScroll.x)\r\n                            refreshScrollbarAppearance(false, showY, canScroll.y)\r\n                        };\r\n\r\n                        //manage class name which indicates scrollable overflow\r\n                        addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y);\r\n\r\n                        //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\r\n                        if (cssDirectionChanged && !_isBody) {\r\n                            addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\r\n                        }\r\n\r\n                        //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\r\n                        if (_isBody)\r\n                            addClass(_hostElement, _classNameHostResizeDisabled);\r\n                        if (resizeChanged) {\r\n                            addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\r\n                        }\r\n\r\n                        //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\r\n                        if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                if (ignoreOverlayScrollbarHidingChanged) {\r\n                                    removeClass(_hostElement, _classNameHostScrolling);\r\n                                    if (ignoreOverlayScrollbarHiding) {\r\n                                        refreshScrollbarsVisibility(false);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (scrollbarsVisibilityAuto) {\r\n                                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\r\n                            }\r\n                            else if (scrollbarsVisibilityVisible) {\r\n                                refreshScrollbarsVisibility(true);\r\n                            }\r\n                            else if (scrollbarsVisibilityHidden) {\r\n                                refreshScrollbarsVisibility(false);\r\n                            }\r\n                        }\r\n\r\n                        //manage the scrollbars auto hide feature (auto hide them after specific actions)\r\n                        if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\r\n                            setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\r\n                            refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\r\n                        }\r\n\r\n                        //manage scrollbars handle length & offset - don't remove!\r\n                        if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\r\n                            refreshScrollbarHandleLength(true);\r\n                            refreshScrollbarHandleOffset(true);\r\n                            refreshScrollbarHandleLength(false);\r\n                            refreshScrollbarHandleOffset(false);\r\n                        }\r\n\r\n                        //manage interactivity\r\n                        if (scrollbarsClickScrollingChanged)\r\n                            refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\r\n                        if (scrollbarsDragScrollingChanged)\r\n                            refreshScrollbarsInteractive(false, scrollbarsDragScrolling);\r\n\r\n                        //callbacks:\r\n                        dispatchCallback('onDirectionChanged', {\r\n                            isRTL: _isRTL,\r\n                            dir: cssDirection\r\n                        }, cssDirectionChanged);\r\n                        dispatchCallback('onHostSizeChanged', {\r\n                            width: _hostSizeCache.w,\r\n                            height: _hostSizeCache.h\r\n                        }, hostSizeChanged);\r\n                        dispatchCallback('onContentSizeChanged', {\r\n                            width: _contentScrollSizeCache.w,\r\n                            height: _contentScrollSizeCache.h\r\n                        }, contentSizeChanged);\r\n                        dispatchCallback('onOverflowChanged', {\r\n                            x: hasOverflow.x,\r\n                            y: hasOverflow.y,\r\n                            xScrollable: hideOverflow.xs,\r\n                            yScrollable: hideOverflow.ys,\r\n                            clipped: hideOverflow.x || hideOverflow.y\r\n                        }, hasOverflow.c || hideOverflow.c);\r\n                        dispatchCallback('onOverflowAmountChanged', {\r\n                            x: overflowAmount.x,\r\n                            y: overflowAmount.y\r\n                        }, overflowAmount.c);\r\n                    }\r\n\r\n                    //fix body min size\r\n                    if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\r\n                        //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\r\n                        if (!_bodyMinSizeCache.f)\r\n                            bodyMinSizeChanged();\r\n                        if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x)\r\n                            _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\r\n                        if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y)\r\n                            _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\r\n                        _bodyMinSizeCache.c = false;\r\n                    }\r\n\r\n                    if (_initialized && changedOptions.updateOnLoad) {\r\n                        updateElementsOnLoad();\r\n                    }\r\n\r\n                    //freezeResizeObserver(_sizeObserverElement, false);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, false);\r\n\r\n                    dispatchCallback('onUpdated', { forced: force });\r\n                }\r\n\r\n                /**\r\n                 * Updates the found elements of which the load event shall be handled.\r\n                 */\r\n                function updateElementsOnLoad() {\r\n                    if (!_isTextarea) {\r\n                        eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                            _contentElement.find(updateOnLoadSelector).each(function (i, el) {\r\n                                // if element doesn't have a updateOnLoadCallback applied\r\n                                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\r\n                                    _updateOnLoadElms.push(el);\r\n                                    FRAMEWORK(el)\r\n                                        .off(_updateOnLoadEventName, updateOnLoadCallback)\r\n                                        .on(_updateOnLoadEventName, updateOnLoadCallback);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //==== Options ====//\r\n\r\n                /**\r\n                 * Sets new options but doesn't call the update method.\r\n                 * @param newOptions The object which contains the new options.\r\n                 * @returns {*} A object which contains the changed options.\r\n                 */\r\n                function setOptions(newOptions) {\r\n                    var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions)\r\n\r\n                    _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\r\n                    _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\r\n\r\n                    return validatedOpts._prepared;\r\n                }\r\n\r\n\r\n                //==== Structure ====//\r\n\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupStructureDOM(destroy) {\r\n                    var strParent = 'parent';\r\n                    var classNameResizeObserverHost = 'os-resize-observer-host';\r\n                    var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\r\n                    var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\r\n                    var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\r\n                    var adoptAttrsMap = {};\r\n                    var applyAdoptedAttrs = function () {\r\n                        var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\r\n                        each(adoptAttrsMap, function (key, value) {\r\n                            if (type(value) == TYPES.s) {\r\n                                if (key == LEXICON.c)\r\n                                    applyAdoptedAttrsElm.addClass(value);\r\n                                else\r\n                                    applyAdoptedAttrsElm.attr(key, value);\r\n                            }\r\n                        });\r\n                    };\r\n                    var hostElementClassNames = [\r\n                        _classNameHostElement,\r\n                        _classNameHostElementForeign,\r\n                        _classNameHostTextareaElement,\r\n                        _classNameHostResizeDisabled,\r\n                        _classNameHostRTL,\r\n                        _classNameHostScrollbarHorizontalHidden,\r\n                        _classNameHostScrollbarVerticalHidden,\r\n                        _classNameHostTransition,\r\n                        _classNameHostScrolling,\r\n                        _classNameHostOverflow,\r\n                        _classNameHostOverflowX,\r\n                        _classNameHostOverflowY,\r\n                        _classNameThemeNone,\r\n                        _classNameTextareaElement,\r\n                        _classNameTextInherit,\r\n                        _classNameCache].join(_strSpace);\r\n                    var hostElementCSS = {};\r\n\r\n                    //get host element as first element, because that's the most upper element and required for the other elements\r\n                    _hostElement = _hostElement || (_isTextarea ? (_domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement))) : _targetElement);\r\n                    _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\r\n                    _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\r\n                    _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\r\n                    _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\r\n                    _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined);\r\n\r\n                    //add this class to workaround class changing issues with UI frameworks especially Vue\r\n                    if (_domExists)\r\n                        addClass(_hostElement, _classNameHostElementForeign);\r\n\r\n                    //on destroy, remove all generated class names from the host element before collecting the adopted attributes \r\n                    //to prevent adopting generated class names\r\n                    if (destroy)\r\n                        removeClass(_hostElement, hostElementClassNames);\r\n\r\n                    //collect all adopted attributes\r\n                    adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\r\n                    if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\r\n                        each(adoptAttrs, function (i, v) {\r\n                            if (type(v) == TYPES.s) {\r\n                                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (!destroy) {\r\n                        if (_isTextarea) {\r\n                            if (!_currentPreparedOptions.sizeAutoCapable) {\r\n                                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\r\n                                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\r\n                            }\r\n\r\n                            if (!_domExists)\r\n                                _targetElement.addClass(_classNameTextInherit).wrap(_hostElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _hostElement = _targetElement[strParent]().css(hostElementCSS);\r\n                        }\r\n\r\n                        if (!_domExists) {\r\n                            //add the correct class to the target element\r\n                            addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement);\r\n\r\n                            //wrap the content into the generated elements to create the required DOM\r\n                            _hostElement.wrapInner(_contentElement)\r\n                                .wrapInner(_viewportElement)\r\n                                .wrapInner(_paddingElement)\r\n                                .prepend(_sizeObserverElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\r\n                            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\r\n                            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\r\n\r\n                            if (_isTextarea) {\r\n                                _contentElement.prepend(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_nativeScrollbarStyling)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\r\n                        if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\r\n                        if (_isBody)\r\n                            addClass(_htmlElement, _classNameHTMLElement);\r\n\r\n                        _sizeObserverElementNative = _sizeObserverElement[0];\r\n                        _hostElementNative = _hostElement[0];\r\n                        _paddingElementNative = _paddingElement[0];\r\n                        _viewportElementNative = _viewportElement[0];\r\n                        _contentElementNative = _contentElement[0];\r\n\r\n                        updateViewportAttrsFromTarget();\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            //clear size observer\r\n                            _sizeObserverElement.children().remove();\r\n\r\n                            //remove the style property and classes from already generated elements\r\n                            each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\r\n                                if (elm) {\r\n                                    removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                                }\r\n                            });\r\n\r\n                            //add classes to the host element which was removed previously to match the expected DOM\r\n                            addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\r\n                        }\r\n                        else {\r\n                            //remove size observer\r\n                            remove(_sizeObserverElement);\r\n\r\n                            //unwrap the content to restore DOM\r\n                            _contentElement.contents()\r\n                                .unwrap()\r\n                                .unwrap()\r\n                                .unwrap();\r\n\r\n                            if (_isTextarea) {\r\n                                _targetElement.unwrap();\r\n                                remove(_hostElement);\r\n                                remove(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_isTextarea)\r\n                            _targetElement.removeAttr(LEXICON.s);\r\n\r\n                        if (_isBody)\r\n                            removeClass(_htmlElement, _classNameHTMLElement);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes all wrapper elements interactivity events.\r\n                 * @param destroy Indicates whether the Events shall be added or removed.\r\n                 */\r\n                function setupStructureEvents() {\r\n                    var textareaKeyDownRestrictedKeyCodes = [\r\n                        112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123,    //F1 to F12\r\n                        33, 34,                                                   //page up, page down\r\n                        37, 38, 39, 40,                                           //left, up, right, down arrows\r\n                        16, 17, 18, 19, 20, 144                                   //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\r\n                    ];\r\n                    var textareaKeyDownKeyCodesList = [];\r\n                    var textareaUpdateIntervalID;\r\n                    var scrollStopTimeoutId;\r\n                    var scrollStopDelay = 175;\r\n                    var strFocus = 'focus';\r\n\r\n                    function updateTextarea(doClearInterval) {\r\n                        textareaUpdate();\r\n                        _base.update(_strAuto);\r\n                        if (doClearInterval && _autoUpdateRecommended)\r\n                            clearInterval(textareaUpdateIntervalID);\r\n                    }\r\n                    function textareaOnScroll(event) {\r\n                        _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\r\n                        _targetElement[_strScrollTop](0);\r\n                        COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                        return false;\r\n                    }\r\n                    function textareaOnDrop(event) {\r\n                        setTimeout(function () {\r\n                            if (!_destroyed)\r\n                                updateTextarea();\r\n                        }, 50);\r\n                    }\r\n                    function textareaOnFocus() {\r\n                        _textareaHasFocus = true;\r\n                        addClass(_hostElement, strFocus);\r\n                    }\r\n                    function textareaOnFocusout() {\r\n                        _textareaHasFocus = false;\r\n                        textareaKeyDownKeyCodesList = [];\r\n                        removeClass(_hostElement, strFocus);\r\n                        updateTextarea(true);\r\n                    }\r\n                    function textareaOnKeyDown(event) {\r\n                        var keyCode = event.keyCode;\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\r\n                                updateTextarea();\r\n                                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\r\n                            }\r\n                            if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0)\r\n                                textareaKeyDownKeyCodesList.push(keyCode);\r\n                        }\r\n                    }\r\n                    function textareaOnKeyUp(event) {\r\n                        var keyCode = event.keyCode;\r\n                        var index = inArray(keyCode, textareaKeyDownKeyCodesList);\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (index > -1)\r\n                                textareaKeyDownKeyCodesList.splice(index, 1);\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l])\r\n                                updateTextarea(true);\r\n                        }\r\n                    }\r\n                    function contentOnTransitionEnd(event) {\r\n                        if (_autoUpdateCache === true)\r\n                            return;\r\n                        event = event.originalEvent || event;\r\n                        if (isSizeAffectingCSSProperty(event.propertyName))\r\n                            _base.update(_strAuto);\r\n                    }\r\n                    function viewportOnScroll(event) {\r\n                        if (!_sleeping) {\r\n                            if (scrollStopTimeoutId !== undefined)\r\n                                clearTimeout(scrollStopTimeoutId);\r\n                            else {\r\n                                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                    refreshScrollbarsAutoHide(true);\r\n\r\n                                if (!nativeOverlayScrollbarsAreActive())\r\n                                    addClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                dispatchCallback('onScrollStart', event);\r\n                            }\r\n\r\n                            //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\r\n                            //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\r\n                            //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\r\n                            if (!_scrollbarsHandlesDefineScrollPos) {\r\n                                refreshScrollbarHandleOffset(true);\r\n                                refreshScrollbarHandleOffset(false);\r\n                            }\r\n                            dispatchCallback('onScroll', event);\r\n\r\n                            scrollStopTimeoutId = setTimeout(function () {\r\n                                if (!_destroyed) {\r\n                                    //OnScrollStop:\r\n                                    clearTimeout(scrollStopTimeoutId);\r\n                                    scrollStopTimeoutId = undefined;\r\n\r\n                                    if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                        refreshScrollbarsAutoHide(false);\r\n\r\n                                    if (!nativeOverlayScrollbarsAreActive())\r\n                                        removeClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                    dispatchCallback('onScrollStop', event);\r\n                                }\r\n                            }, scrollStopDelay);\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (_isTextarea) {\r\n                        if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                            addDestroyEventListener(_targetElement, 'input', updateTextarea);\r\n                        }\r\n                        else {\r\n                            addDestroyEventListener(_targetElement,\r\n                                [_strKeyDownEvent, _strKeyUpEvent],\r\n                                [textareaOnKeyDown, textareaOnKeyUp]);\r\n                        }\r\n\r\n                        addDestroyEventListener(_targetElement,\r\n                            [_strScroll, 'drop', strFocus, strFocus + 'out'],\r\n                            [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\r\n                    }\r\n                    else {\r\n                        addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\r\n                    }\r\n                    addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\r\n                }\r\n\r\n\r\n                //==== Scrollbars ====//\r\n\r\n                /**\r\n                 * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarsDOM(destroy) {\r\n                    var selectOrGenerateScrollbarDOM = function (isHorizontal) {\r\n                        var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\r\n                        var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\r\n                        var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\r\n                        var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\r\n\r\n                        if (!_domExists && !destroy) {\r\n                            scrollbar.append(track);\r\n                            track.append(handle);\r\n                        }\r\n\r\n                        return {\r\n                            _scrollbar: scrollbar,\r\n                            _track: track,\r\n                            _handle: handle\r\n                        };\r\n                    };\r\n                    function resetScrollbarDOM(isHorizontal) {\r\n                        var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                        var scrollbar = scrollbarVars._scrollbar;\r\n                        var track = scrollbarVars._track;\r\n                        var handle = scrollbarVars._handle;\r\n\r\n                        if (_domExists && _initialized) {\r\n                            each([scrollbar, track, handle], function (i, elm) {\r\n                                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                            });\r\n                        }\r\n                        else {\r\n                            remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\r\n                        }\r\n                    }\r\n                    var horizontalElements;\r\n                    var verticalElements;\r\n\r\n                    if (!destroy) {\r\n                        horizontalElements = selectOrGenerateScrollbarDOM(true);\r\n                        verticalElements = selectOrGenerateScrollbarDOM();\r\n\r\n                        _scrollbarHorizontalElement = horizontalElements._scrollbar;\r\n                        _scrollbarHorizontalTrackElement = horizontalElements._track;\r\n                        _scrollbarHorizontalHandleElement = horizontalElements._handle;\r\n                        _scrollbarVerticalElement = verticalElements._scrollbar;\r\n                        _scrollbarVerticalTrackElement = verticalElements._track;\r\n                        _scrollbarVerticalHandleElement = verticalElements._handle;\r\n\r\n                        if (!_domExists) {\r\n                            _paddingElement.after(_scrollbarVerticalElement);\r\n                            _paddingElement.after(_scrollbarHorizontalElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        resetScrollbarDOM(true);\r\n                        resetScrollbarDOM();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n                 * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n                 */\r\n                function setupScrollbarEvents(isHorizontal) {\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var xy = scrollbarVars._x_y;\r\n                    var XY = scrollbarVars._X_Y;\r\n                    var scroll = _strScroll + scrollbarVars._Left_Top;\r\n                    var strActive = 'active';\r\n                    var strSnapHandle = 'snapHandle';\r\n                    var strClickEvent = 'click';\r\n                    var scrollDurationFactor = 1;\r\n                    var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\r\n                    var trackTimeout;\r\n                    var mouseDownScroll;\r\n                    var mouseDownOffset;\r\n                    var mouseDownInvertedScale;\r\n\r\n                    function getPointerPosition(event) {\r\n                        return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\r\n                    }\r\n                    function getPreparedScrollbarsOption(name) {\r\n                        return _currentPreparedOptions.scrollbars[name];\r\n                    }\r\n                    function increaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 0.5;\r\n                    }\r\n                    function decreaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 1;\r\n                    }\r\n                    function stopClickEventPropagation(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function documentKeyDown(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            increaseTrackScrollAmount();\r\n                    }\r\n                    function documentKeyUp(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            decreaseTrackScrollAmount();\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || (isTouchEvent && !getPreparedScrollbarsOption('touchSupport')) ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var trackLength = scrollbarVarsInfo._trackLength;\r\n                            var handleLength = scrollbarVarsInfo._handleLength;\r\n                            var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                            var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\r\n                            var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\r\n                            var scrollDelta = (scrollRange * scrollDeltaPercent);\r\n                            scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\r\n                            if (_isRTL && isHorizontal && !_rtlScrollBehavior.i)\r\n                                scrollDelta *= -1;\r\n\r\n                            _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\r\n\r\n                            if (_scrollbarsHandlesDefineScrollPos)\r\n                                refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\r\n\r\n                            if (!_supportPassiveEvents)\r\n                                COMPATIBILITY.prvD(event);\r\n                        }\r\n                        else\r\n                            documentMouseTouchUp(event);\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        event = event || event.originalEvent;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart],\r\n                            true);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, { _capture: true });\r\n                        });\r\n                        \r\n                            \r\n                        if (_scrollbarsHandlesDefineScrollPos)\r\n                            refreshScrollbarHandleOffset(isHorizontal, true);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = false;\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        removeClass(scrollbarVars._handle, strActive);\r\n                        removeClass(scrollbarVars._track, strActive);\r\n                        removeClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        mouseDownScroll = undefined;\r\n                        mouseDownOffset = undefined;\r\n                        mouseDownInvertedScale = 1;\r\n\r\n                        decreaseTrackScrollAmount();\r\n\r\n                        if (trackTimeout !== undefined) {\r\n                            _base.scrollStop();\r\n                            clearTimeout(trackTimeout);\r\n                            trackTimeout = undefined;\r\n                        }\r\n\r\n                        if (event) {\r\n                            var rect = _hostElementNative[LEXICON.bCR]();\r\n                            var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\r\n\r\n                            //if mouse is outside host element\r\n                            if (!mouseInsideHost)\r\n                                hostOnMouseLeave();\r\n\r\n                            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }\r\n                    }\r\n                    function onHandleMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event))\r\n                            onHandleMouseTouchDownAction(event);\r\n                    }\r\n                    function onHandleMouseTouchDownAction(event) {\r\n                        mouseDownScroll = _viewportElement[scroll]();\r\n                        mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\r\n                        if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL)\r\n                            mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\r\n\r\n                        mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                        mouseDownOffset = getPointerPosition(event);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                        addClass(_bodyElement, _classNameDragging);\r\n                        addClass(scrollbarVars._handle, strActive);\r\n                        addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, { _capture: true });\r\n                        });\r\n                        \r\n\r\n                        if (_msieVersion || !_documentMixed)\r\n                            COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function onTrackMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\r\n                            var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\r\n                            var scrollBaseDuration = 270 * handleToViewportRatio;\r\n                            var scrollFirstIterationDelay = 400 * handleToViewportRatio;\r\n                            var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\r\n                            var ctrlKey = event.ctrlKey;\r\n                            var instantScroll = event.shiftKey;\r\n                            var instantScrollTransition = instantScroll && ctrlKey;\r\n                            var isFirstIteration = true;\r\n                            var easing = 'linear';\r\n                            var decreaseScroll;\r\n                            var finishedCondition;\r\n                            var scrollActionFinsished = function (transition) {\r\n                                if (_scrollbarsHandlesDefineScrollPos)\r\n                                    refreshScrollbarHandleOffset(isHorizontal, transition);\r\n                            };\r\n                            var scrollActionInstantFinished = function () {\r\n                                scrollActionFinsished();\r\n                                onHandleMouseTouchDownAction(event);\r\n                            };\r\n                            var scrollAction = function () {\r\n                                if (!_destroyed) {\r\n                                    var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\r\n                                    var handleOffset = scrollbarVarsInfo._handleOffset;\r\n                                    var trackLength = scrollbarVarsInfo._trackLength;\r\n                                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                                    var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                                    var currScroll = scrollbarVarsInfo._currentScroll;\r\n                                    var scrollDuration = scrollBaseDuration * scrollDurationFactor;\r\n                                    var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\r\n                                    var instantScrollPosition = scrollRange * ((mouseOffset - (handleLength / 2)) / (trackLength - handleLength)); // 100% * positionPercent\r\n                                    var rtlIsNormal = _isRTL && isHorizontal && ((!_rtlScrollBehavior.i && !_rtlScrollBehavior.n) || _normalizeRTLCache);\r\n                                    var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\r\n                                    var scrollObj = {};\r\n                                    var animationObj = {\r\n                                        easing: easing,\r\n                                        step: function (now) {\r\n                                            if (_scrollbarsHandlesDefineScrollPos) {\r\n                                                _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\r\n                                                refreshScrollbarHandleOffset(isHorizontal, now);\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\r\n                                    instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n\r\n                                    //_base.scrollStop();\r\n\r\n                                    if (instantScroll) {\r\n                                        _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\r\n                                        if (instantScrollTransition) {\r\n                                            //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\r\n                                            //and the animation stops at the correct point\r\n                                            instantScrollPosition = _viewportElement[scroll]();\r\n                                            //scroll back to the position before instant scrolling so animation can be performed\r\n                                            _viewportElement[scroll](currScroll);\r\n\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\r\n\r\n                                            scrollObj[xy] = instantScrollPosition;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: 130,\r\n                                                complete: scrollActionInstantFinished\r\n                                            }));\r\n                                        }\r\n                                        else\r\n                                            scrollActionInstantFinished();\r\n                                    }\r\n                                    else {\r\n                                        decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\r\n                                        finishedCondition = rtlIsNormal\r\n                                            ? (decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset)\r\n                                            : (decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset);\r\n\r\n                                        if (finishedCondition) {\r\n                                            clearTimeout(trackTimeout);\r\n                                            _base.scrollStop();\r\n                                            trackTimeout = undefined;\r\n                                            scrollActionFinsished(true);\r\n                                        }\r\n                                        else {\r\n                                            trackTimeout = setTimeout(scrollAction, timeoutDelay);\r\n\r\n                                            scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: scrollDuration\r\n                                            }));\r\n                                        }\r\n                                        isFirstIteration = false;\r\n                                    }\r\n                                }\r\n                            };\r\n                            if (ctrlKey)\r\n                                increaseTrackScrollAmount();\r\n\r\n                            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                            mouseDownOffset = COMPATIBILITY.page(event)[xy];\r\n\r\n                            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            addClass(scrollbarVars._track, strActive);\r\n                            addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                                [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\r\n\r\n                            scrollAction();\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    }\r\n                    function onTrackMouseTouchEnter(event) {\r\n                        //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\r\n                        _scrollbarsHandleHovered = true;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(true);\r\n                    }\r\n                    function onTrackMouseTouchLeave(event) {\r\n                        _scrollbarsHandleHovered = false;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(false);\r\n                    }\r\n                    function onScrollbarMouseTouchDown(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(scrollbarVars._handle,\r\n                        _strMouseTouchDownEvent,\r\n                        onHandleMouseTouchDown);\r\n                    addDestroyEventListener(scrollbarVars._track,\r\n                        [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave],\r\n                        [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\r\n                    addDestroyEventListener(scrollbarVars._scrollbar,\r\n                        _strMouseTouchDownEvent,\r\n                        onScrollbarMouseTouchDown);\r\n\r\n                    if (_supportTransition) {\r\n                        addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\r\n                            if (event.target !== scrollbarVars._scrollbar[0])\r\n                                return;\r\n                            refreshScrollbarHandleLength(isHorizontal);\r\n                            refreshScrollbarHandleOffset(isHorizontal);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n                 * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n                 * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n                 * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n                 */\r\n                function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\r\n                    var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\r\n                    var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\r\n\r\n                    addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\r\n                    addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\r\n                }\r\n\r\n                /**\r\n                 * Autoshows / autohides both scrollbars with.\r\n                 * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n                 * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n                 */\r\n                function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\r\n                    clearTimeout(_scrollbarsAutoHideTimeoutId);\r\n                    if (shallBeVisible) {\r\n                        //if(_hasOverflowCache.x && _hideOverflowCache.xs)\r\n                        removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                        //if(_hasOverflowCache.y && _hideOverflowCache.ys)\r\n                        removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                    }\r\n                    else {\r\n                        var anyActive;\r\n                        var strActive = 'active';\r\n                        var hide = function () {\r\n                            if (!_scrollbarsHandleHovered && !_destroyed) {\r\n                                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                            }\r\n                        };\r\n                        if (_scrollbarsAutoHideDelay > 0 && delayfree !== true)\r\n                            _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);\r\n                        else\r\n                            hide();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle length of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 */\r\n                function refreshScrollbarHandleLength(isHorizontal) {\r\n                    var handleCSS = {};\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var digit = 1000000;\r\n                    //get and apply intended handle length\r\n                    var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\r\n                    handleCSS[scrollbarVars._width_height] = (MATH.floor(handleRatio * 100 * digit) / digit) + '%'; //the last * digit / digit is for flooring to the 4th digit\r\n\r\n                    if (!nativeOverlayScrollbarsAreActive())\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\r\n                    scrollbarVarsInfo._handleLengthRatio = handleRatio;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle offset of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n                 */\r\n                function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\r\n                    var transition = type(scrollOrTransition) == TYPES.b;\r\n                    var transitionDuration = 250;\r\n                    var isRTLisHorizontal = _isRTL && isHorizontal;\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var strTranslateBrace = 'translate(';\r\n                    var strTransform = VENDORS._cssProperty('transform');\r\n                    var strTransition = VENDORS._cssProperty('transition');\r\n                    var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\r\n                    var currentScroll = scrollOrTransition === undefined || transition ? nativeScroll : scrollOrTransition;\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                    var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\r\n                    var handleTrackDiff = trackLength - handleLength;\r\n                    var handleCSS = {};\r\n                    var transformOffset;\r\n                    var translateValue;\r\n\r\n                    //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\r\n                    // because its a bit behind during the small delay when content size updates\r\n                    //(delay = mutationObserverContentLag, if its 0 then this var could be used)\r\n                    var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\r\n                    var getScrollRatio = function (base) {\r\n                        return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\r\n                    };\r\n                    var getHandleOffset = function (scrollRatio) {\r\n                        var offset = handleTrackDiff * scrollRatio;\r\n                        offset = isNaN(offset) ? 0 : offset;\r\n                        offset = (isRTLisHorizontal && !_rtlScrollBehavior.i) ? (trackLength - handleLength - offset) : offset;\r\n                        offset = MATH.max(0, offset);\r\n                        return offset;\r\n                    };\r\n                    var scrollRatio = getScrollRatio(nativeScroll);\r\n                    var unsnappedScrollRatio = getScrollRatio(currentScroll);\r\n                    var handleOffset = getHandleOffset(unsnappedScrollRatio);\r\n                    var snappedHandleOffset = getHandleOffset(scrollRatio);\r\n\r\n                    scrollbarVarsInfo._maxScroll = maxScroll;\r\n                    scrollbarVarsInfo._currentScroll = nativeScroll;\r\n                    scrollbarVarsInfo._currentScrollRatio = scrollRatio;\r\n\r\n                    if (_supportTransform) {\r\n                        transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\r\n                        //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\r\n                        translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\r\n\r\n                        handleCSS[strTransform] = translateValue;\r\n\r\n                        //apply or clear up transition\r\n                        if (_supportTransition)\r\n                            handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\r\n                    }\r\n                    else\r\n                        handleCSS[scrollbarVars._left_top] = handleOffset;\r\n\r\n\r\n                    //only apply css if offset has changed and overflow exists.\r\n                    if (!nativeOverlayScrollbarsAreActive()) {\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                        //clear up transition\r\n                        if (_supportTransform && _supportTransition && transition) {\r\n                            scrollbarVars._handle.one(_strTransitionEndEvent, function () {\r\n                                if (!_destroyed)\r\n                                    scrollbarVars._handle.css(strTransition, _strEmpty);\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    scrollbarVarsInfo._handleOffset = handleOffset;\r\n                    scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\r\n                    scrollbarVarsInfo._trackLength = trackLength;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the interactivity of the given scrollbar element.\r\n                 * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n                 * @param value True for interactivity false for no interactivity.\r\n                 */\r\n                function refreshScrollbarsInteractive(isTrack, value) {\r\n                    var action = value ? 'removeClass' : 'addClass';\r\n                    var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\r\n                    var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\r\n                    var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\r\n\r\n                    element1[action](className);\r\n                    element2[action](className);\r\n                }\r\n\r\n                /**\r\n                 * Returns a object which is used for fast access for specific variables.\r\n                 * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n                 * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n                 */\r\n                function getScrollbarVars(isHorizontal) {\r\n                    return {\r\n                        _width_height: isHorizontal ? _strWidth : _strHeight,\r\n                        _Width_Height: isHorizontal ? 'Width' : 'Height',\r\n                        _left_top: isHorizontal ? _strLeft : _strTop,\r\n                        _Left_Top: isHorizontal ? 'Left' : 'Top',\r\n                        _x_y: isHorizontal ? _strX : _strY,\r\n                        _X_Y: isHorizontal ? 'X' : 'Y',\r\n                        _w_h: isHorizontal ? 'w' : 'h',\r\n                        _l_t: isHorizontal ? 'l' : 't',\r\n                        _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\r\n                        _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\r\n                        _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\r\n                        _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\r\n                    };\r\n                }\r\n\r\n\r\n                //==== Scrollbar Corner ====//\r\n\r\n                /**\r\n                 * Builds or destroys the scrollbar corner DOM element.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarCornerDOM(destroy) {\r\n                    _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\r\n\r\n                    if (!destroy) {\r\n                        if (!_domExists) {\r\n                            _hostElement.append(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                        }\r\n                        else {\r\n                            remove(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar corner interactivity events.\r\n                 */\r\n                function setupScrollbarCornerEvents() {\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var mouseDownPosition = {};\r\n                    var mouseDownSize = {};\r\n                    var mouseDownInvertedScale = {};\r\n                    var reconnectMutationObserver;\r\n\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var pageOffset = getCoordinates(event);\r\n                            var hostElementCSS = {};\r\n                            if (_resizeHorizontal || _resizeBoth)\r\n                                hostElementCSS[_strWidth] = (mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x);\r\n                            if (_resizeVertical || _resizeBoth)\r\n                                hostElementCSS[_strHeight] = (mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y);\r\n                            _hostElement.css(hostElementCSS);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                        else {\r\n                            documentMouseTouchUp(event);\r\n                        }\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        var eventIsTrusted = event !== undefined;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                            [documentOnSelectStart, documentDragMove, documentMouseTouchUp],\r\n                            true);\r\n\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        if (_scrollbarCornerElement.releaseCapture)\r\n                            _scrollbarCornerElement.releaseCapture();\r\n\r\n                        if (eventIsTrusted) {\r\n                            if (reconnectMutationObserver)\r\n                                connectMutationObservers();\r\n                            _base.update(_strAuto);\r\n                        }\r\n                        reconnectMutationObserver = false;\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function getCoordinates(event) {\r\n                        return _msieVersion && insideIFrame ? { x: event.screenX, y: event.screenY } : COMPATIBILITY.page(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\r\n                        if (onMouseTouchDownContinue(event) && !_resizeNone) {\r\n                            if (_mutationObserversConnected) {\r\n                                reconnectMutationObserver = true;\r\n                                disconnectMutationObservers();\r\n                            }\r\n\r\n                            mouseDownPosition = getCoordinates(event);\r\n\r\n                            mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\r\n                            mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\r\n                            mouseDownInvertedScale = getHostElementInvertedScale();\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                                [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\r\n\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            if (_scrollbarCornerElement.setCapture)\r\n                                _scrollbarCornerElement.setCapture();\r\n\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                //==== Utils ====//\r\n\r\n                /**\r\n                 * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n                 * @param name The name of the target which shall be called.\r\n                 * @param args The args with which the callback shall be called.\r\n                 * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n                 */\r\n                function dispatchCallback(name, args, dependent) {\r\n                    if (dependent === false)\r\n                        return;\r\n                    if (_initialized) {\r\n                        var callback = _currentPreparedOptions.callbacks[name];\r\n                        var extensionOnName = name;\r\n                        var ext;\r\n\r\n                        if (extensionOnName.substr(0, 2) === 'on')\r\n                            extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\r\n\r\n                        if (type(callback) == TYPES.f)\r\n                            callback.call(_base, args);\r\n\r\n                        each(_extensions, function () {\r\n                            ext = this;\r\n                            if (type(ext.on) == TYPES.f)\r\n                                ext.on(extensionOnName, args);\r\n                        });\r\n                    }\r\n                    else if (!_destroyed)\r\n                        _callbacksInitQeueue.push({ n: name, a: args });\r\n                }\r\n\r\n                /**\r\n                 * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n                 * @param targetCSSObject The css object to which the values shall be applied.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n                 * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n                 */\r\n                function setTopRightBottomLeft(targetCSSObject, prefix, values) {\r\n                    prefix = prefix || _strEmpty;\r\n                    values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\r\n\r\n                    targetCSSObject[prefix + _strTop] = values[0];\r\n                    targetCSSObject[prefix + _strRight] = values[1];\r\n                    targetCSSObject[prefix + _strBottom] = values[2];\r\n                    targetCSSObject[prefix + _strLeft] = values[3];\r\n                }\r\n\r\n                /**\r\n                 * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n                 * @param zeroX True if the x axis shall be 0.\r\n                 * @param zeroY True if the y axis shall be 0.\r\n                 * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n                 */\r\n                function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\r\n                    suffix = suffix || _strEmpty;\r\n                    prefix = prefix || _strEmpty;\r\n                    return {\r\n                        t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\r\n                        r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\r\n                        b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\r\n                        l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Returns the computed CSS transition string from the given element.\r\n                 * @param element The element from which the transition string shall be returned.\r\n                 * @returns {string} The CSS transition string from the given element.\r\n                 */\r\n                function getCSSTransitionString(element) {\r\n                    var transitionStr = VENDORS._cssProperty('transition');\r\n                    var assembledValue = element.css(transitionStr);\r\n                    if (assembledValue)\r\n                        return assembledValue;\r\n                    var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\r\n                    var regExpMain = new RegExp(regExpString);\r\n                    var regExpValidate = new RegExp('^(' + regExpString + ')+$');\r\n                    var properties = 'property duration timing-function delay'.split(' ');\r\n                    var result = [];\r\n                    var strResult;\r\n                    var valueArray;\r\n                    var i = 0;\r\n                    var j;\r\n                    var splitCssStyleByComma = function (str) {\r\n                        strResult = [];\r\n                        if (!str.match(regExpValidate))\r\n                            return str;\r\n                        while (str.match(regExpMain)) {\r\n                            strResult.push(RegExp.$1);\r\n                            str = str.replace(regExpMain, _strEmpty);\r\n                        }\r\n\r\n                        return strResult;\r\n                    };\r\n                    for (; i < properties[LEXICON.l]; i++) {\r\n                        valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\r\n                        for (j = 0; j < valueArray[LEXICON.l]; j++)\r\n                            result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\r\n                    }\r\n                    return result.join(', ');\r\n                }\r\n\r\n                /**\r\n                 * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n                 * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n                 * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n                 */\r\n                function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\r\n                    var i;\r\n                    var split;\r\n                    var appendix;\r\n                    var appendClasses = function (classes, condition) {\r\n                        appendix = '';\r\n                        if (condition && typeof classes == TYPES.s) {\r\n                            split = classes.split(_strSpace);\r\n                            for (i = 0; i < split[LEXICON.l]; i++)\r\n                                appendix += '|' + split[i] + '$';\r\n                            // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\r\n                        }\r\n                        return appendix;\r\n                    };\r\n\r\n                    return new RegExp(\r\n                        '(^' + _classNameHostElement + '([-_].+|)$)' +\r\n                        appendClasses(_classNameCache, withCurrClassNameOption) +\r\n                        appendClasses(_oldClassName, withOldClassNameOption), 'g');\r\n                }\r\n\r\n                /**\r\n                 * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n                 * @returns {{x: number, y: number}} The scale of the host-element.\r\n                 */\r\n                function getHostElementInvertedScale() {\r\n                    var rect = _paddingElementNative[LEXICON.bCR]();\r\n                    return {\r\n                        x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\r\n                        y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Checks whether the given object is a HTMLElement.\r\n                 * @param o The object which shall be checked.\r\n                 * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n                 */\r\n                function isHTMLElement(o) {\r\n                    var strOwnerDocument = 'ownerDocument';\r\n                    var strHTMLElement = 'HTMLElement';\r\n                    var wnd = o && o[strOwnerDocument] ? (o[strOwnerDocument].parentWindow || window) : window;\r\n                    return (\r\n                        typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\r\n                            o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s\r\n                    );\r\n                }\r\n\r\n                /**\r\n                 * Compares 2 arrays and returns the differences between them as a array.\r\n                 * @param a1 The first array which shall be compared.\r\n                 * @param a2 The second array which shall be compared.\r\n                 * @returns {Array} The differences between the two arrays.\r\n                 */\r\n                function getArrayDifferences(a1, a2) {\r\n                    var a = [];\r\n                    var diff = [];\r\n                    var i;\r\n                    var k;\r\n                    for (i = 0; i < a1.length; i++)\r\n                        a[a1[i]] = true;\r\n                    for (i = 0; i < a2.length; i++) {\r\n                        if (a[a2[i]])\r\n                            delete a[a2[i]];\r\n                        else\r\n                            a[a2[i]] = true;\r\n                    }\r\n                    for (k in a)\r\n                        diff.push(k);\r\n                    return diff;\r\n                }\r\n\r\n                /**\r\n                 * Returns Zero or the number to which the value can be parsed.\r\n                 * @param value The value which shall be parsed.\r\n                 * @param toFloat Indicates whether the number shall be parsed to a float.\r\n                 */\r\n                function parseToZeroOrNumber(value, toFloat) {\r\n                    var num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n                    return isNaN(num) ? 0 : num;\r\n                }\r\n\r\n                /**\r\n                 * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n                 * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n                 */\r\n                function getTextareaInfo() {\r\n                    //read needed values\r\n                    var textareaCursorPosition = _targetElementNative.selectionStart;\r\n                    if (textareaCursorPosition === undefined)\r\n                        return;\r\n\r\n                    var textareaValue = _targetElement.val();\r\n                    var textareaLength = textareaValue[LEXICON.l];\r\n                    var textareaRowSplit = textareaValue.split('\\n');\r\n                    var textareaLastRow = textareaRowSplit[LEXICON.l];\r\n                    var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\r\n                    var widestRow = 0;\r\n                    var textareaLastCol = 0;\r\n                    var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\r\n                    var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\r\n                    var rowCols;\r\n                    var i;\r\n\r\n                    //get widest Row and the last column of the textarea\r\n                    for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\r\n                        rowCols = textareaRowSplit[i][LEXICON.l];\r\n                        if (rowCols > textareaLastCol) {\r\n                            widestRow = i + 1;\r\n                            textareaLastCol = rowCols;\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        _cursorRow: cursorRow, //cursorRow\r\n                        _cursorColumn: cursorCol, //cursorCol\r\n                        _rows: textareaLastRow, //rows\r\n                        _columns: textareaLastCol, //cols\r\n                        _widestRow: widestRow, //wRow\r\n                        _cursorPosition: textareaCursorPosition, //pos\r\n                        _cursorMax: textareaLength //max\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Determines whether native overlay scrollbars are active.\r\n                 * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n                 */\r\n                function nativeOverlayScrollbarsAreActive() {\r\n                    return (_ignoreOverlayScrollbarHidingCache && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y));\r\n                }\r\n\r\n                /**\r\n                 * Gets the element which is used to measure the content size.\r\n                 * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n                 */\r\n                function getContentMeasureElement() {\r\n                    return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\r\n                }\r\n\r\n                /**\r\n                 * Generates a string which represents a HTML div with the given classes or attributes.\r\n                 * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n                 * @param content The content of the div as string.\r\n                 * @returns {string} The concated string which represents a HTML div and its content.\r\n                 */\r\n                function generateDiv(classesOrAttrs, content) {\r\n                    return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ?\r\n                        'class=\"' + classesOrAttrs + '\"' :\r\n                        (function () {\r\n                            var key;\r\n                            var attrs = _strEmpty;\r\n                            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\r\n                                for (key in classesOrAttrs)\r\n                                    attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\r\n                            }\r\n                            return attrs;\r\n                        })() :\r\n                        _strEmpty) +\r\n                        '>' +\r\n                        (content || _strEmpty) +\r\n                        '</div>';\r\n                }\r\n\r\n                /**\r\n                 * Selects or generates a div with the given class attribute.\r\n                 * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n                 * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n                 * If its a boolean it decides whether only the children of the host element shall be selected.\r\n                 * @returns {*} The generated or selected element.\r\n                 */\r\n                function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\r\n                    var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\r\n                    var selectParent = onlyChildren ? _hostElement : (selectParentOrOnlyChildren || _hostElement);\r\n\r\n                    return (_domExists && !selectParent[LEXICON.l])\r\n                        ? null\r\n                        : _domExists\r\n                            ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0)\r\n                            : FRAMEWORK(generateDiv(className))\r\n                }\r\n\r\n                /**\r\n                 * Gets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be got.\r\n                 * @param path The property of which the value shall be got.\r\n                 * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n                 */\r\n                function getObjectPropVal(obj, path) {\r\n                    var splits = path.split(_strDot);\r\n                    var i = 0;\r\n                    var val;\r\n                    for (; i < splits.length; i++) {\r\n                        if (!obj[LEXICON.hOP](splits[i]))\r\n                            return;\r\n                        val = obj[splits[i]];\r\n                        if (i < splits.length && type(val) == TYPES.o)\r\n                            obj = val;\r\n                    }\r\n                    return val;\r\n                }\r\n\r\n                /**\r\n                 * Sets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be set.\r\n                 * @param path The property of which the value shall be set.\r\n                 * @param val The value of the property which shall be set.\r\n                 */\r\n                function setObjectPropVal(obj, path, val) {\r\n                    var splits = path.split(_strDot);\r\n                    var splitsLength = splits.length;\r\n                    var i = 0;\r\n                    var extendObj = {};\r\n                    var extendObjRoot = extendObj;\r\n                    for (; i < splitsLength; i++)\r\n                        extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\r\n                    FRAMEWORK.extend(obj, extendObjRoot, true);\r\n                }\r\n\r\n                /**\t\r\n                 * Runs a action for each selector inside the updateOnLoad option.\t\r\n                 * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n                 */\r\n                function eachUpdateOnLoad(action) {\r\n                    var updateOnLoad = _currentPreparedOptions.updateOnLoad;\r\n                    updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\r\n\r\n                    if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\r\n                        each(updateOnLoad, action);\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Utils Cache ====//\r\n\r\n                /**\r\n                 * Compares two values or objects and returns true if they aren't equal.\r\n                 * @param current The first value or object which shall be compared.\r\n                 * @param cache The second value or object which shall be compared.\r\n                 * @param force If true the returned value is always true.\r\n                 * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n                 */\r\n                function checkCache(current, cache, force) {\r\n                    if (force)\r\n                        return force;\r\n                    if (type(current) == TYPES.o && type(cache) == TYPES.o) {\r\n                        for (var prop in current) {\r\n                            if (prop !== 'c') {\r\n                                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\r\n                                    if (checkCache(current[prop], cache[prop]))\r\n                                        return true;\r\n                                }\r\n                                else {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        return current !== cache;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n\r\n                //==== Shortcuts ====//\r\n\r\n                /**\r\n                 * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n                 */\r\n                function extendDeep() {\r\n                    return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\r\n                }\r\n\r\n                /**\r\n                 * jQuery addClass method shortcut.\r\n                 */\r\n                function addClass(el, classes) {\r\n                    return _frameworkProto.addClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery removeClass method shortcut.\r\n                 */\r\n                function removeClass(el, classes) {\r\n                    return _frameworkProto.removeClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n                 */\r\n                function addRemoveClass(el, classes, doAdd) {\r\n                    return doAdd ? addClass(el, classes) : removeClass(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery remove method shortcut.\r\n                 */\r\n                function remove(el) {\r\n                    return _frameworkProto.remove.call(el);\r\n                }\r\n\r\n                /**\r\n                 * Finds the first child element with the given selector of the given element.\r\n                 * @param el The root element from which the selector shall be valid.\r\n                 * @param selector The selector of the searched element.\r\n                 * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n                 */\r\n                function findFirst(el, selector) {\r\n                    return _frameworkProto.find.call(el, selector).eq(0);\r\n                }\r\n\r\n\r\n                //==== API ====//\r\n\r\n                /**\r\n                 * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n                 * This behavior can be reset by calling the update method.\r\n                 */\r\n                _base.sleep = function () {\r\n                    _sleeping = true;\r\n                };\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param force True if every property shall be updated and the cache shall be ignored.\r\n                 * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n                 * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n                 * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n                 * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n                 * @returns {boolean|undefined} \r\n                 * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n                 * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n                 * undefined otherwise.\r\n                 */\r\n                _base.update = function (force) {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    var attrsChanged;\r\n                    var contentSizeC;\r\n                    var isString = type(force) == TYPES.s;\r\n                    var doUpdateAuto;\r\n                    var mutHost;\r\n                    var mutContent;\r\n\r\n                    if (isString) {\r\n                        if (force === _strAuto) {\r\n                            attrsChanged = meaningfulAttrsChanged();\r\n                            contentSizeC = updateAutoContentSizeChanged();\r\n                            doUpdateAuto = attrsChanged || contentSizeC;\r\n                            if (doUpdateAuto) {\r\n                                update({\r\n                                    _contentSizeChanged: contentSizeC,\r\n                                    _changedOptions: _initialized ? undefined : _currentPreparedOptions\r\n                                });\r\n                            }\r\n                        }\r\n                        else if (force === _strSync) {\r\n                            if (_mutationObserversConnected) {\r\n                                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\r\n                                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\r\n                            }\r\n                            else {\r\n                                mutHost = _base.update(_strAuto);\r\n                            }\r\n                        }\r\n                        else if (force === 'zoom') {\r\n                            update({\r\n                                _hostSizeChanged: true,\r\n                                _contentSizeChanged: true\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        force = _sleeping || force;\r\n                        _sleeping = false;\r\n                        if (!_base.update(_strSync) || force)\r\n                            update({ _force: force });\r\n                    }\r\n\r\n                    updateElementsOnLoad();\r\n\r\n                    return doUpdateAuto || mutHost || mutContent;\r\n                };\r\n\r\n                /**\r\n                 Gets or sets the current options. The update method will be called automatically if new options were set.\r\n                 * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n                 * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n                 * @returns {*}\r\n                 */\r\n                _base.options = function (newOptions, value) {\r\n                    var option = {};\r\n                    var changedOps;\r\n\r\n                    //return current options if newOptions are undefined or empty\r\n                    if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\r\n                        if (type(newOptions) == TYPES.s) {\r\n                            if (arguments.length > 1) {\r\n                                setObjectPropVal(option, newOptions, value);\r\n                                changedOps = setOptions(option);\r\n                            }\r\n                            else\r\n                                return getObjectPropVal(_currentOptions, newOptions);\r\n                        }\r\n                        else\r\n                            return _currentOptions;\r\n                    }\r\n                    else {\r\n                        changedOps = setOptions(newOptions);\r\n                    }\r\n\r\n                    if (!FRAMEWORK.isEmptyObject(changedOps)) {\r\n                        update({ _changedOptions: changedOps });\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n                 */\r\n                _base.destroy = function () {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    //remove this instance from auto update loop\r\n                    autoUpdateLoop.remove(_base);\r\n\r\n                    //disconnect all mutation observers\r\n                    disconnectMutationObservers();\r\n\r\n                    //remove all resize observers\r\n                    setupResizeObserver(_sizeObserverElement);\r\n                    setupResizeObserver(_sizeAutoObserverElement);\r\n\r\n                    //remove all extensions\r\n                    for (var extName in _extensions)\r\n                        _base.removeExt(extName);\r\n\r\n                    //remove all 'destroy' events\r\n                    while (_destroyEvents[LEXICON.l] > 0)\r\n                        _destroyEvents.pop()();\r\n\r\n                    //remove all events from host element\r\n                    setupHostMouseTouchEvents(true);\r\n\r\n                    //remove all helper / detection elements\r\n                    if (_contentGlueElement)\r\n                        remove(_contentGlueElement);\r\n                    if (_contentArrangeElement)\r\n                        remove(_contentArrangeElement);\r\n                    if (_sizeAutoObserverAdded)\r\n                        remove(_sizeAutoObserverElement);\r\n\r\n                    //remove all generated DOM\r\n                    setupScrollbarsDOM(true);\r\n                    setupScrollbarCornerDOM(true);\r\n                    setupStructureDOM(true);\r\n\r\n                    //remove all generated image load events\r\n                    for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++)\r\n                        FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\r\n                    _updateOnLoadElms = undefined;\r\n\r\n                    _destroyed = true;\r\n                    _sleeping = true;\r\n\r\n                    //remove this instance from the instances list\r\n                    INSTANCES(pluginTargetElement, 0);\r\n                    dispatchCallback('onDestroyed');\r\n\r\n                    //remove all properties and methods\r\n                    //for (var property in _base)\r\n                    //    delete _base[property];\r\n                    //_base = undefined;\r\n                };\r\n\r\n                /**\r\n                 * Scrolls to a given position or element.\r\n                 * @param coordinates\r\n                 * 1. Can be \"coordinates\" which looks like:\r\n                 *    { x : ?, y : ? } OR          Object with x and y properties\r\n                 *    { left : ?, top : ? } OR     Object with left and top properties\r\n                 *    { l : ?, t : ? } OR          Object with l and t properties\r\n                 *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n                 *    ?                            A single value which stays for both axis\r\n                 *    A value can be a number, a string or a calculation.\r\n                 *\r\n                 *    Operators:\r\n                 *    [NONE]  The current scroll will be overwritten by the value.\r\n                 *    '+='    The value will be added to the current scroll offset\r\n                 *    '-='    The value will be subtracted from the current scroll offset\r\n                 *    '*='    The current scroll wil be multiplicated by the value.\r\n                 *    '/='    The current scroll wil be divided by the value.\r\n                 *\r\n                 *    Units:\r\n                 *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n                 *    'px'    Same as none\r\n                 *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n                 *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n                 *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n                 *\r\n                 *    example final values:\r\n                 *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n                 *\r\n                 * 2. Can be a HTML or jQuery element:\r\n                 *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n                 *\r\n                 * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n                 *    {\r\n                 *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n                 *      scroll : [string, array, object],               Default value is 'always'.\r\n                 *      block : [string, array, object],                Default value is 'begin'.\r\n                 *      margin : [number, boolean, array, object]       Default value is false.\r\n                 *    }\r\n                 *\r\n                 *    Possible scroll settings are:\r\n                 *    'always'      Scrolls always.\r\n                 *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n                 *    'never'       Scrolls never.\r\n                 *\r\n                 *    Possible block settings are:\r\n                 *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n                 *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n                 *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n                 *    'nearest' The element will be docked to the nearest edge(s).\r\n                 *\r\n                 *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n                 *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n                 *    [NUMBER]                                          The margin will be used for all edges.\r\n                 *\r\n                 * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n                 * @param easing The animation easing.\r\n                 * @param complete The animation complete callback.\r\n                 * @returns {{\r\n                 *   position: {x: number, y: number},\r\n                 *   ratio: {x: number, y: number},\r\n                 *   max: {x: number, y: number},\r\n                 *   handleOffset: {x: number, y: number},\r\n                 *   handleLength: {x: number, y: number},\r\n                 *   handleLengthRatio: {x: number, y: number}, t\r\n                 *   rackLength: {x: number, y: number},\r\n                 *   isRTL: boolean,\r\n                 *   isRTLNormalized: boolean\r\n                 *  }}\r\n                 */\r\n                _base.scroll = function (coordinates, duration, easing, complete) {\r\n                    if (arguments.length === 0 || coordinates === undefined) {\r\n                        var infoX = _scrollHorizontalInfo;\r\n                        var infoY = _scrollVerticalInfo;\r\n                        var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\r\n                        var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\r\n                        var scrollX = infoX._currentScroll;\r\n                        var scrollXRatio = infoX._currentScrollRatio;\r\n                        var maxScrollX = infoX._maxScroll;\r\n                        scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\r\n                        scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\r\n                        scrollX *= normalizeNegate ? -1 : 1;\r\n                        maxScrollX *= normalizeNegate ? -1 : 1;\r\n\r\n                        return {\r\n                            position: {\r\n                                x: scrollX,\r\n                                y: infoY._currentScroll\r\n                            },\r\n                            ratio: {\r\n                                x: scrollXRatio,\r\n                                y: infoY._currentScrollRatio\r\n                            },\r\n                            max: {\r\n                                x: maxScrollX,\r\n                                y: infoY._maxScroll\r\n                            },\r\n                            handleOffset: {\r\n                                x: infoX._handleOffset,\r\n                                y: infoY._handleOffset\r\n                            },\r\n                            handleLength: {\r\n                                x: infoX._handleLength,\r\n                                y: infoY._handleLength\r\n                            },\r\n                            handleLengthRatio: {\r\n                                x: infoX._handleLengthRatio,\r\n                                y: infoY._handleLengthRatio\r\n                            },\r\n                            trackLength: {\r\n                                x: infoX._trackLength,\r\n                                y: infoY._trackLength\r\n                            },\r\n                            snappedHandleOffset: {\r\n                                x: infoX._snappedHandleOffset,\r\n                                y: infoY._snappedHandleOffset\r\n                            },\r\n                            isRTL: _isRTL,\r\n                            isRTLNormalized: _normalizeRTLCache\r\n                        };\r\n                    }\r\n\r\n                    _base.update(_strSync);\r\n\r\n                    var normalizeRTL = _normalizeRTLCache;\r\n                    var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\r\n                    var coordinatesYAxisProps = [_strY, _strTop, 't'];\r\n                    var coordinatesOperators = ['+=', '-=', '*=', '/='];\r\n                    var durationIsObject = type(duration) == TYPES.o;\r\n                    var completeCallback = durationIsObject ? duration.complete : complete;\r\n                    var i;\r\n                    var finalScroll = {};\r\n                    var specialEasing = {};\r\n                    var doScrollLeft;\r\n                    var doScrollTop;\r\n                    var animationOptions;\r\n                    var strEnd = 'end';\r\n                    var strBegin = 'begin';\r\n                    var strCenter = 'center';\r\n                    var strNearest = 'nearest';\r\n                    var strAlways = 'always';\r\n                    var strNever = 'never';\r\n                    var strIfNeeded = 'ifneeded';\r\n                    var strLength = LEXICON.l;\r\n                    var settingsAxis;\r\n                    var settingsScroll;\r\n                    var settingsBlock;\r\n                    var settingsMargin;\r\n                    var finalElement;\r\n                    var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\r\n                    var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\r\n                    var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\r\n                    var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\r\n                    var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\r\n                    var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\r\n                    var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\r\n                    var updateScrollbarInfos = function () {\r\n                        if (doScrollLeft)\r\n                            refreshScrollbarHandleOffset(true);\r\n                        if (doScrollTop)\r\n                            refreshScrollbarHandleOffset(false);\r\n                    };\r\n                    var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined : function () {\r\n                        updateScrollbarInfos();\r\n                        completeCallback();\r\n                    };\r\n                    function checkSettingsStringValue(currValue, allowedValues) {\r\n                        for (i = 0; i < allowedValues[strLength]; i++) {\r\n                            if (currValue === allowedValues[i])\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                    function getRawScroll(isX, coordinates) {\r\n                        var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\r\n                        coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\r\n\r\n                        if (COMPATIBILITY.isA(coordinates))\r\n                            return isX ? coordinates[0] : coordinates[1];\r\n                        else if (type(coordinates) == TYPES.o) {\r\n                            //decides RTL normalization \"hack\" with .n\r\n                            //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \r\n                            for (i = 0; i < coordinateProps[strLength]; i++)\r\n                                if (coordinateProps[i] in coordinates)\r\n                                    return coordinates[coordinateProps[i]];\r\n                        }\r\n                    }\r\n                    function getFinalScroll(isX, rawScroll) {\r\n                        var isString = type(rawScroll) == TYPES.s;\r\n                        var operator;\r\n                        var amount;\r\n                        var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\r\n                        var currScroll = scrollInfo._currentScroll;\r\n                        var maxScroll = scrollInfo._maxScroll;\r\n                        var mult = ' * ';\r\n                        var finalValue;\r\n                        var isRTLisX = _isRTL && isX;\r\n                        var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\r\n                        var strReplace = 'replace';\r\n                        var evalFunc = eval;\r\n                        var possibleOperator;\r\n                        if (isString) {\r\n                            //check operator\r\n                            if (rawScroll[strLength] > 2) {\r\n                                possibleOperator = rawScroll.substr(0, 2);\r\n                                if (inArray(possibleOperator, coordinatesOperators) > -1)\r\n                                    operator = possibleOperator;\r\n                            }\r\n\r\n                            //calculate units and shortcuts\r\n                            rawScroll = operator ? rawScroll.substr(2) : rawScroll;\r\n                            rawScroll = rawScroll\r\n                            [strReplace](/min/g, 0) //'min' = 0%\r\n                            [strReplace](/</g, 0)   //'<'   = 0%\r\n                            [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)    //'max' = 100%\r\n                            [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)      //'>'   = 100%\r\n                            [strReplace](/px/g, _strEmpty)\r\n                            [strReplace](/%/g, mult + (maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0))\r\n                            [strReplace](/vw/g, mult + _viewportSize.w)\r\n                            [strReplace](/vh/g, mult + _viewportSize.h);\r\n                            amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\r\n                        }\r\n                        else {\r\n                            amount = rawScroll;\r\n                        }\r\n\r\n                        if (amount !== undefined && !isNaN(amount) && type(amount) == TYPES.n) {\r\n                            var normalizeIsRTLisX = normalizeRTL && isRTLisX;\r\n                            var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\r\n                            var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\r\n                            var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\r\n                            operatorCurrScroll = invert ? (maxScroll - operatorCurrScroll) : operatorCurrScroll;\r\n                            switch (operator) {\r\n                                case '+=':\r\n                                    finalValue = operatorCurrScroll + amount;\r\n                                    break;\r\n                                case '-=':\r\n                                    finalValue = operatorCurrScroll - amount;\r\n                                    break;\r\n                                case '*=':\r\n                                    finalValue = operatorCurrScroll * amount;\r\n                                    break;\r\n                                case '/=':\r\n                                    finalValue = operatorCurrScroll / amount;\r\n                                    break;\r\n                                default:\r\n                                    finalValue = amount;\r\n                                    break;\r\n                            }\r\n                            finalValue = invert ? maxScroll - finalValue : finalValue;\r\n                            finalValue *= negate ? -1 : 1;\r\n                            finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\r\n                        }\r\n                        return finalValue === currScroll ? undefined : finalValue;\r\n                    }\r\n                    function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\r\n                        var resultDefault = [defaultValue, defaultValue];\r\n                        var valueType = type(value);\r\n                        var valueArrLength;\r\n                        var valueArrItem;\r\n\r\n                        //value can be [ string, or array of two strings ]\r\n                        if (valueType == valueInternalType) {\r\n                            value = [value, value];\r\n                        }\r\n                        else if (valueType == TYPES.a) {\r\n                            valueArrLength = value[strLength];\r\n                            if (valueArrLength > 2 || valueArrLength < 1)\r\n                                value = resultDefault;\r\n                            else {\r\n                                if (valueArrLength === 1)\r\n                                    value[1] = defaultValue;\r\n                                for (i = 0; i < valueArrLength; i++) {\r\n                                    valueArrItem = value[i];\r\n                                    if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\r\n                                        value = resultDefault;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (valueType == TYPES.o)\r\n                            value = [value[_strX] || defaultValue, value[_strY] || defaultValue];\r\n                        else\r\n                            value = resultDefault;\r\n                        return { x: value[0], y: value[1] };\r\n                    }\r\n                    function generateMargin(marginTopRightBottomLeftArray) {\r\n                        var result = [];\r\n                        var currValue;\r\n                        var currValueType;\r\n                        var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\r\n                        for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\r\n                            if (i === valueDirections[strLength])\r\n                                break;\r\n                            currValue = marginTopRightBottomLeftArray[i];\r\n                            currValueType = type(currValue);\r\n                            if (currValueType == TYPES.b)\r\n                                result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);\r\n                            else\r\n                                result.push(currValueType == TYPES.n ? currValue : 0);\r\n                        }\r\n                        return result;\r\n                    }\r\n\r\n                    if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\r\n                        //get settings\r\n                        var margin = coordinatesIsElementObj ? coordinates.margin : 0;\r\n                        var axis = coordinatesIsElementObj ? coordinates.axis : 0;\r\n                        var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\r\n                        var block = coordinatesIsElementObj ? coordinates.block : 0;\r\n                        var marginDefault = [0, 0, 0, 0];\r\n                        var marginType = type(margin);\r\n                        var marginLength;\r\n                        finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\r\n\r\n                        if (finalElement[strLength] > 0) {\r\n                            //margin can be [ boolean, number, array of 2, array of 4, object ]\r\n                            if (marginType == TYPES.n || marginType == TYPES.b)\r\n                                margin = generateMargin([margin, margin, margin, margin]);\r\n                            else if (marginType == TYPES.a) {\r\n                                marginLength = margin[strLength];\r\n                                if (marginLength === 2)\r\n                                    margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);\r\n                                else if (marginLength >= 4)\r\n                                    margin = generateMargin(margin);\r\n                                else\r\n                                    margin = marginDefault;\r\n                            }\r\n                            else if (marginType == TYPES.o)\r\n                                margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);\r\n                            else\r\n                                margin = marginDefault;\r\n\r\n                            //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\r\n                            settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\r\n                            settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\r\n                            settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\r\n                            settingsMargin = margin;\r\n\r\n                            var viewportScroll = {\r\n                                l: _scrollHorizontalInfo._currentScroll,\r\n                                t: _scrollVerticalInfo._currentScroll\r\n                            };\r\n                            // use padding element instead of viewport element because padding element has never padding, margin or position applied.\r\n                            var viewportOffset = _paddingElement.offset();\r\n\r\n                            //get coordinates\r\n                            var elementOffset = finalElement.offset();\r\n                            var doNotScroll = {\r\n                                x: settingsScroll.x == strNever || settingsAxis == _strY,\r\n                                y: settingsScroll.y == strNever || settingsAxis == _strX\r\n                            };\r\n                            elementOffset[_strTop] -= settingsMargin[0];\r\n                            elementOffset[_strLeft] -= settingsMargin[3];\r\n                            var elementScrollCoordinates = {\r\n                                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\r\n                                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\r\n                            };\r\n                            if (_isRTL) {\r\n                                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\r\n                                if (_rtlScrollBehavior.n && normalizeRTL)\r\n                                    elementScrollCoordinates.x *= -1;\r\n                                if (_rtlScrollBehavior.i && normalizeRTL)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\r\n                            }\r\n\r\n                            //measuring is required\r\n                            if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\r\n                                var measuringElm = finalElement[0];\r\n                                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\r\n                                    width: measuringElm[LEXICON.oW],\r\n                                    height: measuringElm[LEXICON.oH]\r\n                                };\r\n                                var elementSize = {\r\n                                    w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\r\n                                    h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\r\n                                };\r\n                                var finalizeBlock = function (isX) {\r\n                                    var vars = getScrollbarVars(isX);\r\n                                    var wh = vars._w_h;\r\n                                    var lt = vars._left_top;\r\n                                    var xy = vars._x_y;\r\n                                    var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\r\n                                    var blockIsCenter = settingsBlock[xy] == strCenter;\r\n                                    var blockIsNearest = settingsBlock[xy] == strNearest;\r\n                                    var scrollNever = settingsScroll[xy] == strNever;\r\n                                    var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\r\n                                    var vpSize = _viewportSize[wh];\r\n                                    var vpOffset = viewportOffset[lt];\r\n                                    var elSize = elementSize[wh];\r\n                                    var elOffset = elementOffset[lt];\r\n                                    var divide = blockIsCenter ? 2 : 1;\r\n                                    var elementCenterOffset = elOffset + (elSize / 2);\r\n                                    var viewportCenterOffset = vpOffset + (vpSize / 2);\r\n                                    var isInView =\r\n                                        elSize <= vpSize\r\n                                        && elOffset >= vpOffset\r\n                                        && elOffset + elSize <= vpOffset + vpSize;\r\n\r\n                                    if (scrollNever)\r\n                                        doNotScroll[xy] = true;\r\n                                    else if (!doNotScroll[xy]) {\r\n                                        if (blockIsNearest || scrollIfNeeded) {\r\n                                            doNotScroll[xy] = scrollIfNeeded ? isInView : false;\r\n                                            blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\r\n                                        }\r\n                                        elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? ((vpSize / divide) - (elSize / divide)) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\r\n                                    }\r\n                                };\r\n                                finalizeBlock(true);\r\n                                finalizeBlock(false);\r\n                            }\r\n\r\n                            if (doNotScroll.y)\r\n                                delete elementScrollCoordinates.y;\r\n                            if (doNotScroll.x)\r\n                                delete elementScrollCoordinates.x;\r\n\r\n                            coordinates = elementScrollCoordinates;\r\n                        }\r\n                    }\r\n\r\n                    finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\r\n                    finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\r\n                    doScrollLeft = finalScroll[_strScrollLeft] !== undefined;\r\n                    doScrollTop = finalScroll[_strScrollTop] !== undefined;\r\n\r\n                    if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\r\n                        if (durationIsObject) {\r\n                            duration.complete = proxyCompleteCallback;\r\n                            _viewportElement.animate(finalScroll, duration);\r\n                        }\r\n                        else {\r\n                            animationOptions = {\r\n                                duration: duration,\r\n                                complete: proxyCompleteCallback\r\n                            };\r\n                            if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\r\n                                specialEasing[_strScrollLeft] = easing[0] || easing.x;\r\n                                specialEasing[_strScrollTop] = easing[1] || easing.y;\r\n                                animationOptions.specialEasing = specialEasing;\r\n                            }\r\n                            else {\r\n                                animationOptions.easing = easing;\r\n                            }\r\n                            _viewportElement.animate(finalScroll, animationOptions);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (doScrollLeft)\r\n                            _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\r\n                        if (doScrollTop)\r\n                            _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\r\n                        updateScrollbarInfos();\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Stops all scroll animations.\r\n                 * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n                 */\r\n                _base.scrollStop = function (param1, param2, param3) {\r\n                    _viewportElement.stop(param1, param2, param3);\r\n                    return _base;\r\n                };\r\n\r\n                /**\r\n                 * Returns all relevant elements.\r\n                 * @param elementName The name of the element which shall be returned.\r\n                 * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n                 */\r\n                _base.getElements = function (elementName) {\r\n                    var obj = {\r\n                        target: _targetElementNative,\r\n                        host: _hostElementNative,\r\n                        padding: _paddingElementNative,\r\n                        viewport: _viewportElementNative,\r\n                        content: _contentElementNative,\r\n                        scrollbarHorizontal: {\r\n                            scrollbar: _scrollbarHorizontalElement[0],\r\n                            track: _scrollbarHorizontalTrackElement[0],\r\n                            handle: _scrollbarHorizontalHandleElement[0]\r\n                        },\r\n                        scrollbarVertical: {\r\n                            scrollbar: _scrollbarVerticalElement[0],\r\n                            track: _scrollbarVerticalTrackElement[0],\r\n                            handle: _scrollbarVerticalHandleElement[0]\r\n                        },\r\n                        scrollbarCorner: _scrollbarCornerElement[0]\r\n                    };\r\n                    return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Returns a object which describes the current state of this instance.\r\n                 * @param stateProperty A specific property from the state object which shall be returned.\r\n                 * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n                 */\r\n                _base.getState = function (stateProperty) {\r\n                    function prepare(obj) {\r\n                        if (!FRAMEWORK.isPlainObject(obj))\r\n                            return obj;\r\n                        var extended = extendDeep({}, obj);\r\n                        var changePropertyName = function (from, to) {\r\n                            if (extended[LEXICON.hOP](from)) {\r\n                                extended[to] = extended[from];\r\n                                delete extended[from];\r\n                            }\r\n                        };\r\n                        changePropertyName('w', _strWidth); //change w to width\r\n                        changePropertyName('h', _strHeight); //change h to height\r\n                        delete extended.c; //delete c (the 'changed' prop)\r\n                        return extended;\r\n                    };\r\n                    var obj = {\r\n                        destroyed: !!prepare(_destroyed),\r\n                        sleeping: !!prepare(_sleeping),\r\n                        autoUpdate: prepare(!_mutationObserversConnected),\r\n                        widthAuto: prepare(_widthAutoCache),\r\n                        heightAuto: prepare(_heightAutoCache),\r\n                        padding: prepare(_cssPaddingCache),\r\n                        overflowAmount: prepare(_overflowAmountCache),\r\n                        hideOverflow: prepare(_hideOverflowCache),\r\n                        hasOverflow: prepare(_hasOverflowCache),\r\n                        contentScrollSize: prepare(_contentScrollSizeCache),\r\n                        viewportSize: prepare(_viewportSize),\r\n                        hostSize: prepare(_hostSizeCache),\r\n                        documentMixed: prepare(_documentMixed)\r\n                    };\r\n                    return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Gets all or specific extension instance.\r\n                 * @param extName The name of the extension from which the instance shall be got.\r\n                 * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n                 */\r\n                _base.ext = function (extName) {\r\n                    var result;\r\n                    var privateMethods = _extensionsPrivateMethods.split(' ');\r\n                    var i = 0;\r\n                    if (type(extName) == TYPES.s) {\r\n                        if (_extensions[LEXICON.hOP](extName)) {\r\n                            result = extendDeep({}, _extensions[extName]);\r\n                            for (; i < privateMethods.length; i++)\r\n                                delete result[privateMethods[i]];\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = {};\r\n                        for (i in _extensions)\r\n                            result[i] = extendDeep({}, _base.ext(i));\r\n                    }\r\n                    return result;\r\n                };\r\n\r\n                /**\r\n                 * Adds a extension to this instance.\r\n                 * @param extName The name of the extension which shall be added.\r\n                 * @param extensionOptions The extension options which shall be used.\r\n                 * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n                 */\r\n                _base.addExt = function (extName, extensionOptions) {\r\n                    var registeredExtensionObj = _plugin.extension(extName);\r\n                    var instance;\r\n                    var instanceAdded;\r\n                    var instanceContract;\r\n                    var contractResult;\r\n                    var contractFulfilled = true;\r\n                    if (registeredExtensionObj) {\r\n                        if (!_extensions[LEXICON.hOP](extName)) {\r\n                            instance = registeredExtensionObj.extensionFactory.call(_base,\r\n                                extendDeep({}, registeredExtensionObj.defaultOptions),\r\n                                FRAMEWORK,\r\n                                COMPATIBILITY);\r\n\r\n                            if (instance) {\r\n                                instanceContract = instance.contract;\r\n                                if (type(instanceContract) == TYPES.f) {\r\n                                    contractResult = instanceContract(window);\r\n                                    contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\r\n                                }\r\n                                if (contractFulfilled) {\r\n                                    _extensions[extName] = instance;\r\n                                    instanceAdded = instance.added;\r\n                                    if (type(instanceAdded) == TYPES.f)\r\n                                        instanceAdded(extensionOptions);\r\n\r\n                                    return _base.ext(extName);\r\n                                }\r\n                            }\r\n                        }\r\n                        else\r\n                            return _base.ext(extName);\r\n                    }\r\n                    else\r\n                        console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\r\n                };\r\n\r\n                /**\r\n                 * Removes a extension from this instance.\r\n                 * @param extName The name of the extension which shall be removed.\r\n                 * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n                 */\r\n                _base.removeExt = function (extName) {\r\n                    var instance = _extensions[extName];\r\n                    var instanceRemoved;\r\n                    if (instance) {\r\n                        delete _extensions[extName];\r\n\r\n                        instanceRemoved = instance.removed;\r\n                        if (type(instanceRemoved) == TYPES.f)\r\n                            instanceRemoved();\r\n\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n\r\n                /**\r\n                 * Constructs the plugin.\r\n                 * @param targetElement The element to which the plugin shall be applied.\r\n                 * @param options The initial options of the plugin.\r\n                 * @param extensions The extension(s) which shall be added right after the initialization.\r\n                 * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n                 */\r\n                function construct(targetElement, options, extensions) {\r\n                    _defaultOptions = globals.defaultOptions;\r\n                    _nativeScrollbarStyling = globals.nativeScrollbarStyling;\r\n                    _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\r\n                    _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\r\n                    _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior);\r\n\r\n                    //parse & set options but don't update\r\n                    setOptions(extendDeep({}, _defaultOptions, options));\r\n\r\n                    _cssCalc = globals.cssCalc;\r\n                    _msieVersion = globals.msie;\r\n                    _autoUpdateRecommended = globals.autoUpdateRecommended;\r\n                    _supportTransition = globals.supportTransition;\r\n                    _supportTransform = globals.supportTransform;\r\n                    _supportPassiveEvents = globals.supportPassiveEvents;\r\n                    _supportResizeObserver = globals.supportResizeObserver;\r\n                    _supportMutationObserver = globals.supportMutationObserver;\r\n                    _restrictedMeasuring = globals.restrictedMeasuring;\r\n                    _documentElement = FRAMEWORK(targetElement.ownerDocument);\r\n                    _documentElementNative = _documentElement[0];\r\n                    _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\r\n                    _windowElementNative = _windowElement[0];\r\n                    _htmlElement = findFirst(_documentElement, 'html');\r\n                    _bodyElement = findFirst(_htmlElement, 'body');\r\n                    _targetElement = FRAMEWORK(targetElement);\r\n                    _targetElementNative = _targetElement[0];\r\n                    _isTextarea = _targetElement.is('textarea');\r\n                    _isBody = _targetElement.is('body');\r\n                    _documentMixed = _documentElementNative !== document;\r\n\r\n                    /* On a div Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-host\"\r\n                     * - the targetElement has a a child with the class \"os-padding\"\r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-host\" element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding\">\r\n                     *          <div class=\"os-viewport\">\r\n                     *              <div class=\"os-content\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     *\r\n                     * =====================================================================================\r\n                     * \r\n                     * On a Textarea Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-textarea\" \r\n                     * - the targetElement is inside a element with the class \"os-content\" \r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-textarea\" (textarea) element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host-textarea\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding os-text-inherit\">\r\n                     *          <div class=\"os-viewport os-text-inherit\">\r\n                     *              <div class=\"os-content os-text-inherit\">\r\n                     *                  <div class=\"os-textarea-cover\"></div>\r\n                     *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n                     *              </div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     */\r\n                    _domExists = _isTextarea\r\n                        ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement)\r\n                        : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\r\n\r\n                    var initBodyScroll;\r\n                    var bodyMouseTouchDownListener;\r\n\r\n                    //check if the plugin hasn't to be initialized\r\n                    if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\r\n                        dispatchCallback('onInitializationWithdrawn');\r\n                        if (_domExists) {\r\n                            setupStructureDOM(true);\r\n                            setupScrollbarsDOM(true);\r\n                            setupScrollbarCornerDOM(true);\r\n                        }\r\n\r\n                        _destroyed = true;\r\n                        _sleeping = true;\r\n\r\n                        return _base;\r\n                    }\r\n\r\n                    if (_isBody) {\r\n                        initBodyScroll = {};\r\n                        initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\r\n                        initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\r\n\r\n                        bodyMouseTouchDownListener = function () {\r\n                            _viewportElement.removeAttr(LEXICON.ti);\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, true, true);\r\n                        }\r\n                    }\r\n\r\n                    //build OverlayScrollbars DOM\r\n                    setupStructureDOM();\r\n                    setupScrollbarsDOM();\r\n                    setupScrollbarCornerDOM();\r\n\r\n                    //create OverlayScrollbars events\r\n                    setupStructureEvents();\r\n                    setupScrollbarEvents(true);\r\n                    setupScrollbarEvents(false);\r\n                    setupScrollbarCornerEvents();\r\n\r\n                    //create mutation observers\r\n                    createMutationObservers();\r\n\r\n                    //build resize observer for the host element\r\n                    setupResizeObserver(_sizeObserverElement, hostOnResized);\r\n\r\n                    if (_isBody) {\r\n                        //apply the body scroll to handle it right in the update method\r\n                        _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t);\r\n\r\n                        //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\r\n                        if (document.activeElement == targetElement && _viewportElementNative.focus) {\r\n                            //set a tabindex to make the viewportElement focusable\r\n                            _viewportElement.attr(LEXICON.ti, '-1');\r\n                            _viewportElementNative.focus();\r\n\r\n                            /* the tabindex has to be removed due to;\r\n                             * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n                             * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n                             */\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, false, true);\r\n                        }\r\n                    }\r\n\r\n                    //update for the first time & initialize cache\r\n                    _base.update(_strAuto);\r\n\r\n                    //the plugin is initialized now!\r\n                    _initialized = true;\r\n                    dispatchCallback('onInitialized');\r\n\r\n                    //call all callbacks which would fire before the initialized was complete\r\n                    each(_callbacksInitQeueue, function (index, value) { dispatchCallback(value.n, value.a); });\r\n                    _callbacksInitQeueue = [];\r\n\r\n                    //add extensions\r\n                    if (type(extensions) == TYPES.s)\r\n                        extensions = [extensions];\r\n                    if (COMPATIBILITY.isA(extensions))\r\n                        each(extensions, function (index, value) { _base.addExt(value); });\r\n                    else if (FRAMEWORK.isPlainObject(extensions))\r\n                        each(extensions, function (key, value) { _base.addExt(key, value); });\r\n\r\n                    //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\r\n                    setTimeout(function () {\r\n                        if (_supportTransition && !_destroyed)\r\n                            addClass(_hostElement, _classNameHostTransition);\r\n                    }, 333);\r\n\r\n                    return _base;\r\n                }\r\n\r\n                if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\r\n                    INSTANCES(pluginTargetElement, _base);\r\n                }\r\n\r\n                return _base;\r\n            }\r\n\r\n            /**\r\n             * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n             * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n             * @param options The custom options with which the plugin shall be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*}\r\n             */\r\n            _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var arr = [];\r\n                var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\r\n                var inst;\r\n                var result;\r\n\r\n                //pluginTargetElements is null or undefined\r\n                if (!pluginTargetElements)\r\n                    return optsIsPlainObj || !options ? result : arr;\r\n\r\n                /*\r\n                   pluginTargetElements will be converted to:\r\n                   1. A jQueryElement Array\r\n                   2. A HTMLElement Array\r\n                   3. A Array with a single HTML Element\r\n                   so pluginTargetElements is always a array.\r\n                */\r\n                pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\r\n                initOverlayScrollbarsStatics();\r\n\r\n                if (pluginTargetElements[LEXICON.l] > 0) {\r\n                    if (optsIsPlainObj) {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = v;\r\n                            if (inst !== undefined)\r\n                                arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\r\n                        });\r\n                    }\r\n                    else {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = INSTANCES(v);\r\n                            if ((options === '!' && _plugin.valid(inst)) || (COMPATIBILITY.type(options) == TYPES.f && options(v, inst)))\r\n                                arr.push(inst);\r\n                            else if (options === undefined)\r\n                                arr.push(inst);\r\n                        });\r\n                    }\r\n                    result = arr[LEXICON.l] === 1 ? arr[0] : arr;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            /**\r\n             * Returns a object which contains global information about the plugin and each instance of it.\r\n             * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n             */\r\n            _plugin.globals = function () {\r\n                initOverlayScrollbarsStatics();\r\n                var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\r\n                delete globals['msie'];\r\n                return globals;\r\n            };\r\n\r\n            /**\r\n             * Gets or Sets the default options for each new plugin initialization.\r\n             * @param newDefaultOptions The object with which the default options shall be extended.\r\n             */\r\n            _plugin.defaultOptions = function (newDefaultOptions) {\r\n                initOverlayScrollbarsStatics();\r\n                var currDefaultOptions = _pluginsGlobals.defaultOptions;\r\n                if (newDefaultOptions === undefined)\r\n                    return FRAMEWORK.extend(true, {}, currDefaultOptions);\r\n\r\n                //set the new default options\r\n                _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\r\n            };\r\n\r\n            /**\r\n             * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n             * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n             * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n             */\r\n            _plugin.valid = function (osInstance) {\r\n                return osInstance instanceof _plugin && !osInstance.getState().destroyed;\r\n            };\r\n\r\n            /**\r\n             * Registers, Unregisters or returns a extension.\r\n             * Register: Pass the name and the extension. (defaultOptions is optional)\r\n             * Unregister: Pass the name and anything except a function as extension parameter.\r\n             * Get extension: Pass the name of the extension which shall be got.\r\n             * Get all extensions: Pass no arguments.\r\n             * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n             * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n             * @param defaultOptions The default options which shall be used for the registered extension.\r\n             */\r\n            _plugin.extension = function (extensionName, extension, defaultOptions) {\r\n                var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\r\n                var argLen = arguments[LEXICON.l];\r\n                var i = 0;\r\n                if (argLen < 1 || !extNameTypeString) {\r\n                    //return a copy of all extension objects\r\n                    return FRAMEWORK.extend(true, { length: _pluginsExtensions[LEXICON.l] }, _pluginsExtensions);\r\n                }\r\n                else if (extNameTypeString) {\r\n                    if (COMPATIBILITY.type(extension) == TYPES.f) {\r\n                        //register extension\r\n                        _pluginsExtensions.push({\r\n                            name: extensionName,\r\n                            extensionFactory: extension,\r\n                            defaultOptions: defaultOptions\r\n                        });\r\n                    }\r\n                    else {\r\n                        for (; i < _pluginsExtensions[LEXICON.l]; i++) {\r\n                            if (_pluginsExtensions[i].name === extensionName) {\r\n                                if (argLen > 1)\r\n                                    _pluginsExtensions.splice(i, 1); //remove extension\r\n                                else\r\n                                    return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            return _plugin;\r\n        })();\r\n\r\n        if (JQUERY && JQUERY.fn) {\r\n            /**\r\n             * The jQuery initialization interface.\r\n             * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n             */\r\n            JQUERY.fn.overlayScrollbars = function (options, extensions) {\r\n                var _elements = this;\r\n                if (JQUERY.isPlainObject(options)) {\r\n                    JQUERY.each(_elements, function () { PLUGIN(this, options, extensions); });\r\n                    return _elements;\r\n                }\r\n                else\r\n                    return PLUGIN(_elements, options);\r\n            };\r\n        }\r\n        return PLUGIN;\r\n    }\r\n));"],"mappings":"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"},"metadata":{},"sourceType":"script"}